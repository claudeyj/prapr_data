<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V with a call to &#60;init&#62;(DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local rel is replaced by local abs to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>local abs is replaced by local rel to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to MIN_RELATIVE_TOLERANCE with an access to GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field MIN_RELATIVE_TOLERANCE is replaced by access to local rel</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>41</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field relativeThreshold is replaced by access to local rel</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>46</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field absoluteThreshold is replaced by access to local rel</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field MIN_RELATIVE_TOLERANCE is replaced by access to local abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>41</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field relativeThreshold is replaced by access to local abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>46</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field absoluteThreshold is replaced by access to local abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local rel is replaced by local abs to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local abs is replaced by local rel to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local rel is replaced by local abs to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local abs is replaced by local rel to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>41</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDLorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>46</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>57</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>300</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>11</index><block>59</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>63</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>32</index><block>64</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>24</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getValue with a call to getPoint</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>26</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to getValue with a call to getPoint</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>24</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair::getValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair::getValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>24</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getValue()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getValue()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>24</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getValue()D is guarded returning local a</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>26</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getValue()D is guarded returning local a</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>24</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getValue()D is guarded returning local b</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>26</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to getValue()D is guarded returning local b</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>57</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>59</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>61</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/univariate/BrentOptimizer::best</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>57</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>59</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>61</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>297</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>57</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>300</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>59</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>61</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>62</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>best</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>305</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>64</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/univariate/BrentOptimizer::best to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>MethodNameMutator_0</mutator><index>591</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math3.optimization.univariate.BrentOptimizer.best(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>70ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>MethodNameMutator_1</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to factory method org.apache.commons.math3.optimization.univariate.BrentOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker; is replaced by an instantiation of type org.apache.commons.math3.optimization.AbstractConvergenceChecker using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>MethodNameMutator_5</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to factory method org.apache.commons.math3.optimization.univariate.BrentOptimizer.getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker; is replaced by an instantiation of type org.apache.commons.math3.optimization.AbstractConvergenceChecker using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(DDI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals(DD)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to relativeThreshold is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to absoluteThreshold is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to relativeThreshold is guarded using local lo</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to absoluteThreshold is guarded using local lo</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to relativeThreshold is guarded using field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to absoluteThreshold is guarded using field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to MINIMIZE with an access to MAXIMIZE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced access to relativeThreshold with an access to absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced access to absoluteThreshold with an access to relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>355</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced access to GOLDEN_SECTION with an access to MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>381</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced access to GOLDEN_SECTION with an access to MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field relativeThreshold is replaced by access to local lo</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field absoluteThreshold is replaced by access to local lo</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>355</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field GOLDEN_SECTION is replaced by access to local lo</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>381</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field GOLDEN_SECTION is replaced by access to local lo</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field relativeThreshold is replaced by access to local mid</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field absoluteThreshold is replaced by access to local mid</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>355</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field GOLDEN_SECTION is replaced by access to local mid</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>381</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field GOLDEN_SECTION is replaced by access to local mid</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field relativeThreshold is replaced by access to local hi</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field absoluteThreshold is replaced by access to local hi</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>355</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field GOLDEN_SECTION is replaced by access to local hi</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>381</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field GOLDEN_SECTION is replaced by access to local hi</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local lo is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local hi is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local lo is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local hi is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local mid is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol2 is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>171</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local stop is replaced by local isMinim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>215</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>229</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>237</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>248</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>254</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>258</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>262</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local p is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local q is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>296</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>302</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local b is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local m is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local tol1 is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>332</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local d is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>352</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local e is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>358</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local b is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>371</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local e is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>384</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>417</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>139ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>426</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local isMinim is replaced by local stop to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>435</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local current is replaced by local previous to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>436</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local previous is replaced by local current to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>442</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local isMinim is replaced by local stop to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='8'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>451</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath855(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local current is replaced by local previous to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath855(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>17ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testQuinticMin(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testQuinticMax(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testSinMinWithValueChecker(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>527</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>532</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local b is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>546</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>550</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>554</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>558</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fu is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fv is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local x is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local w is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local u is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>577</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local v is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fu is replaced by local lo to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>581</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fv is replaced by local lo to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>588</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local current is replaced by local previous to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>589</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local previous is replaced by local current to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>590</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local isMinim is replaced by local stop to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local lo is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local hi is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local lo is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local hi is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local mid is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol2 is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>215</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>229</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>237</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>248</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>254</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>258</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>262</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local p is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local q is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>296</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>302</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local b is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local m is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local tol1 is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>332</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local d is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>352</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local e is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>358</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local b is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>371</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local e is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>384</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>417</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>527</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>532</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local b is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>546</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>550</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>554</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>558</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fu is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fv is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local x is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local w is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local u is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>577</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local v is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fu is replaced by local mid to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>581</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fv is replaced by local mid to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local hi is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local mid is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>53ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol2 is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>215</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>229</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>237</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>248</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>254</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>258</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>262</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local p is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local q is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>296</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>302</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local b is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local m is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local tol1 is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>332</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local d is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>352</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local e is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>358</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local b is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>371</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local e is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>384</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>417</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>527</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>532</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local b is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>546</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>550</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>554</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>558</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fu is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fv is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local x is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local w is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local u is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>577</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local v is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fu is replaced by local hi to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>581</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fv is replaced by local hi to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local mid is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol2 is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>215</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>229</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>237</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>248</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>254</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>258</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>262</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local p is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local q is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>296</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>302</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local m is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local tol1 is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>332</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local d is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>352</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local e is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>358</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>371</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local e is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>384</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>417</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>527</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>532</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local b is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>546</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>550</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>554</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>558</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fu is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fv is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local x is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local w is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local u is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>577</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local v is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fu is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>581</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fv is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol2 is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>215</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>229</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>237</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>248</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>254</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>258</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>262</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local p is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local q is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>296</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>302</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local m is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local tol1 is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>332</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local d is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>352</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local e is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>358</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local b is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>371</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local e is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>384</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>417</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>527</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>532</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local b is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>546</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>550</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>554</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>558</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fu is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fv is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local x is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local w is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local u is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>577</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local v is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fu is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>581</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fv is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>205</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>215</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>229</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>237</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>248</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>254</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>258</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>262</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local b is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local q is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local r is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local q is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>296</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local d is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>302</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local b is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local tol2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local m is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local tol1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>332</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local d is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local a is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>352</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>local e is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>358</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local m is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local b is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>371</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local e is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local e is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>384</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local tol1 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local d is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>417</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testSinMinWithValueChecker(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testQuinticMin(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testSinMinWithValueChecker(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fx is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>527</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local a is replaced by local v to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>532</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>local b is replaced by local v to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>546</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local v is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>550</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fv is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>554</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local w is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fu is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>558</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local fw is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fu is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local fv is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local x is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local v is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local w is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local u is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>577</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local v is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fu is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>581</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>local fv is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local lo is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local hi is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local lo is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local hi is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local mid is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol2 is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fv is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local v is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local v is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local p is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local p is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local q is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local d is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local a is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local tol2 is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local b is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local tol2 is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>access to local m is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local tol1 is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local a is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local b is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local fu is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local fv is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local v is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local x is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local v is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local w is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local u is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local fu is replaced by access to field GOLDEN_SECTION</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local lo is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local hi is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local lo is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local hi is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local mid is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol2 is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fv is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local v is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local v is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local p is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local p is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local q is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local d is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local a is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local tol2 is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local b is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local tol2 is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>access to local m is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local tol1 is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local a is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local b is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local fu is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local fv is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local v is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local x is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local v is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local w is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local u is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local fu is replaced by access to field MIN_RELATIVE_TOLERANCE</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local lo is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local hi is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local lo is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local hi is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local mid is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol2 is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fv is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local v is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local v is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local p is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local p is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local q is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local d is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local a is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local tol2 is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local b is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local tol2 is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>access to local m is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local tol1 is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local a is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local b is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local fu is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local fv is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local v is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local x is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local v is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local w is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local u is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local fu is replaced by access to field relativeThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>35</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local lo is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='4'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>36</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local hi is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMinEndpoints(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>41</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local lo is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>45</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local hi is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>135</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local mid is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>63</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>67</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>80</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>94</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>98</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>108</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>111</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>114</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>126</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>127</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>135</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>145</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>150</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>151</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>154</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol2 is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>156</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>157</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>191</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>193</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>198</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>199</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>201</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>202</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fv is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>208</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>209</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local v is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>211</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>212</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>218</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>219</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local v is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>221</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>223</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>224</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>226</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>233</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>234</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>240</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>246</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>access to local p is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>252</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>178</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>257</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>261</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>265</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>266</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>267</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local a is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>268</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>273</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>274</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>275</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local b is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>276</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>281</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local p is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>284</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local q is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>286</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local r is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>293</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local p is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>294</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local q is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>299</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>300</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local d is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>305</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>306</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local a is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>308</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local tol2 is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>311</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local b is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>312</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>314</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local tol2 is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>319</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>320</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>access to local m is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>330</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>access to local tol1 is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>336</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>337</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>349</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local a is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>350</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>356</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>362</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>363</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local m is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>368</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local b is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>369</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>382</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local e is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>387</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>389</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local tol1 is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>414</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>415</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local d is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>421</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>441</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>444</index><block>38</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>447</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>474</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>475</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fx is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>520</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>521</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>526</index><block>47</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>531</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2773500981126146</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>535</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>536</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>539</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>540</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>262</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>545</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local w is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>549</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fw is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>553</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>557</index><block>50</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to local fu is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>562</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local fu is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>563</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local fv is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>566</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local v is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>567</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local x is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>570</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local v is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>571</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>access to local w is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>576</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local u is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>270</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>580</index><block>54</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>access to local fu is replaced by access to field absoluteThreshold</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to equals with a call to equalsIncludingNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals with a call to equalsIncludingNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to equals with a call to equalsIncludingNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testMath832(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BrentOptimizer::getGoalType()Lorg/apache/commons/math3/optimization/GoalType; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BrentOptimizer::getMin()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BrentOptimizer::getStartValue()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BrentOptimizer::getMax()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BrentOptimizer::getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>81</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BrentOptimizer::computeObjectiveValue(D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>422</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BrentOptimizer::computeObjectiveValue(D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>591</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BrentOptimizer::best(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to relativeThreshold is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to absoluteThreshold is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>134</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to relativeThreshold is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>139</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to absoluteThreshold is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to getGoalType()Lorg/apache/commons/math3/optimization/GoalType; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to getMin()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to getStartValue()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to getMax()D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>81</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to computeObjectiveValue(D)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>422</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the call to computeObjectiveValue(D)D is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>591</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to best(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>422</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the call to computeObjectiveValue(D)D is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>591</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to best(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair; is guarded returning local previous</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>422</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the call to computeObjectiveValue(D)D is guarded returning local current</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>591</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to best(Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;Z)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair; is guarded returning local current</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>81</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::computeObjectiveValue with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>422</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::computeObjectiveValue with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>591</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::best with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>162</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>243</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>272</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>280</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>290</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>310</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>316</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>322</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>339</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>365</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>391</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>477</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>523</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>538</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>565</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>117</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>450</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>595</index><block>56</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>138</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>152</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>121</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>125</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>144</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 2.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>155</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>163</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>166</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>161</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>175</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>179</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>183</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>187</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>232</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 2.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>241</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>283</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>115</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>173</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>247</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2581988897471611</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>253</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>193</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>331</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>448</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>137</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>140</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>146</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>158</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>200</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>203</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>210</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>213</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>225</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>227</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>169</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>228</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>235</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>170</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>236</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>269</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>270</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>277</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>278</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>285</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>287</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>295</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced double division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>186</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>301</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>307</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>313</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>351</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>357</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>370</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>383</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>223</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>416</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>86</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>162</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>172</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>243</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>272</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>280</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>290</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>310</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>316</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>322</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>339</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>365</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>391</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>427</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>443</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>455</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>477</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>523</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>538</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>542</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>565</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>569</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>573</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::getGoalType</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::getMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::getStartValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::getMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::getConvergenceChecker</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>81</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::computeObjectiveValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>136</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>153</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>192</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>282</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>288</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>388</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>226</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>422</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::computeObjectiveValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>541</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed call to org/apache/commons/math3/util/Precision::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>568</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math3/util/Precision::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>572</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/apache/commons/math3/util/Precision::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>591</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BrentOptimizer::best</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>592</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/univariate/BrentOptimizer::doOptimize</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>86</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>110</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>172</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>0ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>427</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>443</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>455</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>542</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>569</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>573</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>86</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>110</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>172</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>427</index><block>36</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>443</index><block>37</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>455</index><block>39</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>542</index><block>49</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>569</index><block>52</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>573</index><block>53</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>41ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>162</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>243</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>272</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>280</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>290</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>310</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>316</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>322</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>339</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>365</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>391</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>477</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>523</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>538</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>565</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>159</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>162</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testBoundaries(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>166</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>195</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>243</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>272</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>280</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>290</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>310</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>316</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>190</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>322</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>198</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>339</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>365</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>391</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>477</index><block>42</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>523</index><block>46</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>538</index><block>48</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>565</index><block>51</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>592</index><block>55</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/univariate/BrentOptimizer::doOptimize to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BrentOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BrentOptimizer</mutatedClass><mutatedMethod>doOptimize</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>279</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>595</index><block>56</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>26</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolic(org.apache.commons.math3.util.FastMathTest)</name><time>53ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>67ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>31ms</time></test><test><name>org.apache.commons.math3.analysis.function.SincTest.testZero(org.apache.commons.math3.analysis.function.SincTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>188ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>26</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolic(org.apache.commons.math3.util.FastMathTest)</name><time>48ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>66ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>29ms</time></test><test><name>org.apache.commons.math3.analysis.function.SincTest.testZero(org.apache.commons.math3.analysis.function.SincTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>181ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>26</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolic(org.apache.commons.math3.util.FastMathTest)</name><time>73ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>66ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>51ms</time></test><test><name>org.apache.commons.math3.analysis.function.SincTest.testZero(org.apache.commons.math3.analysis.function.SincTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>218ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>33ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>26</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolic(org.apache.commons.math3.util.FastMathTest)</name><time>69ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>87ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>324ms</time></test><test><name>org.apache.commons.math3.analysis.function.SincTest.testZero(org.apache.commons.math3.analysis.function.SincTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>513ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>29</block><killingTests>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>30ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='16'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>25</block><killingTests>org.apache.commons.math3.special.GammaTest.testInvGamma1pm1(org.apache.commons.math3.special.GammaTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.complex.ComplexTest.testAbs(org.apache.commons.math3.complex.ComplexTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolic(org.apache.commons.math3.util.FastMathTest)</name><time>114ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>34ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNormInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.special.GammaTest.testInvGamma1pm1(org.apache.commons.math3.special.GammaTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testVectorialProducts(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistanceInf(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testCoordinates(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>1ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.LineTest.testLineDistance(org.apache.commons.math3.geometry.euclidean.threed.LineTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.MathUtilsTest.testReduce(org.apache.commons.math3.util.MathUtilsTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testNorm1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>61ms</time></test><test><name>org.apache.commons.math3.analysis.function.SincTest.testZero(org.apache.commons.math3.analysis.function.SincTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.special.ErfTest.testErf0(org.apache.commons.math3.special.ErfTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>260ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>28</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><block>26</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>29</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>27</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>25</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2992</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>29</block><killingTests>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</killingTests><suspValue>0.025125945381480302</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolic(org.apache.commons.math3.util.FastMathTest)</name><time>96ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testHyperbolicInverses(org.apache.commons.math3.util.FastMathTest)</name><time>75ms</time></test><test><name>org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest.testDistance1(org.apache.commons.math3.geometry.euclidean.threed.Vector3DTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.util.FastMathTest.testIntPow(org.apache.commons.math3.util.FastMathTest)</name><time>31ms</time></test><test><name>org.apache.commons.math3.analysis.function.SincTest.testZero(org.apache.commons.math3.analysis.function.SincTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>227ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>access to local x is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>130ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>access to local x is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>access to local x is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>access to local x is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>access to local x is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>access to local x is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><block>23</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>replaced long return with 0 for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>22</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>2974</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>24</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03539961627023943</suspValue><description>replaced return of long value with value + 1 for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xa is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xa is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xb is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xa is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xa is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xb is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local pi2a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local pi2a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xa is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xb is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local pi2b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local pi2b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local xb is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>31</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>132ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>149ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>20</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>149ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>486ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>521ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>153ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>130ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>146ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>140ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>156ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to pow</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to cosQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to atan2</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to nextAfter</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to min</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to hypot</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to IEEEremainder</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to sinQ with a call to copySign</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::sinQ with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1816</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1817</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Substituted 6.123233995736766E-17 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Substituted 6.123233995736766E-17 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>19</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1821</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::sinQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::cosQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>cosQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1823</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>37</index><block>4</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05661385170722978</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::cosQ</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>98ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>9</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>9</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>9</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>9</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>31</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local a is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>9</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>access to local b is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>11</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/FastMath::min</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>30</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>min</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>3396</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>32</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.042874646285627205</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>71ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>40</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>43</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>43</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>43</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>43</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>43</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>186ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>203ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>171ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>192ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>185ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>205ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>334ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>362ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>535ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>557ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>160ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>197ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>240ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>210ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>230ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>43</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1675</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Substituted 2.479773539153719E-5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Substituted -0.0013888888689039883 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>115ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Substituted 0.041666666666621166 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Substituted -0.49999999999999994 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1673</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1677</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1678</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1679</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>44</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::polyCosine</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polyCosine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1681</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>44</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::polyCosine</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>26</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x2 is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local x is replaced by local p to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>42</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>local p is replaced by local x2 to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>210ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>230ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>207ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>227ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>155ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>174ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>174ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>190ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>165ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>185ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>37</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>168ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>197ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>177ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>222ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>access to local p is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1655</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Substituted 2.7553817452272217E-6 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Substituted -1.9841269659586505E-4 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Substituted 0.008333333333329196 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Substituted -0.16666666666666666 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1653</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1657</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1658</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1661</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>46</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::polySine</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>polySine</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>1663</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>46</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05352877275721892</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::polySine</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>local x is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>5</block><killingTests/><suspValue>0.0553001263609331</suspValue><description>local xb is replaced by local x to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>local x is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>112</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>120</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>121</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>135</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>local xb is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>140</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>local xa is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>169</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>170</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>176</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>local xb is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>177</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>local xa is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>local x is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>60</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>73</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>112</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>120</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>121</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>135</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>local xb is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>140</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>local xa is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>169</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>170</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>176</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>177</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>60</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>63</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>73</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>112</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>120</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>121</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>143</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local negative is replaced by access to field RECOMPUTE_TABLES_AT_RUNTIME</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>153</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local quadrant is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>169</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>170</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>176</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>177</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>34</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>60</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>63</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>73</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>112</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>120</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>121</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>153</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local quadrant is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>169</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>170</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>176</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>177</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>34</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>60</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>63</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>73</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>112</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>120</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>121</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>153</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local quadrant is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>169</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>170</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>176</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>177</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>34</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>60</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>63</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>73</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>112</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>120</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>121</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>153</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local quadrant is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>169</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>170</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>176</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>177</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>15</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>19</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>34</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>59</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>60</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>63</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>73</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>112</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>120</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>121</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>153</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>access to local quadrant is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>169</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>170</index><block>19</block><killingTests>org.apache.commons.math3.util.FastMathTest.testSinAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testSinAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>106ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>123ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>176</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>177</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testSinAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testSinAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>136ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>158ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to log</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to pow</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to pow</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to cosQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to sinQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to atan2</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to atan2</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to nextAfter</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to nextAfter</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to min</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to min</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to hypot</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to hypot</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to IEEEremainder</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to IEEEremainder</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to sinQ with a call to copySign</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to cosQ with a call to copySign</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>127</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to org.apache.commons.math3.util.FastMath$CodyWaite::getK()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>134</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to org.apache.commons.math3.util.FastMath$CodyWaite::getRemA()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>139</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to org.apache.commons.math3.util.FastMath$CodyWaite::getRemB()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>127</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getK()I is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>134</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemA()D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>139</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemB()D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>127</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getK()I is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>134</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemA()D is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>139</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemB()D is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>127</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getK()I is guarded returning local xb</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>134</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemA()D is guarded returning local xb</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>139</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemB()D is guarded returning local xb</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>127</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getK()I is guarded returning field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>134</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemA()D is guarded returning field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>139</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemB()D is guarded returning field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>127</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getK()I is guarded returning field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>134</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemA()D is guarded returning field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>139</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>the call to getRemB()D is guarded returning field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>58ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::sinQ with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::cosQ with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>76</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>115</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>122</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>removed call to org/apache/commons/math3/util/FastMath$CodyWaite::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2202</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2204</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>Substituted Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>Substituted 3294198.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>113</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>Substituted 1.5707963267948966 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>128</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>172</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>179</index><block>20</block><killingTests>org.apache.commons.math3.util.FastMathTest.testSinAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testSinAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>119ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>129</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>62</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>66</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>76</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>144</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>127</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>removed call to org/apache/commons/math3/util/FastMath$CodyWaite::getK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>134</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>removed call to org/apache/commons/math3/util/FastMath$CodyWaite::getRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>139</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06178020632152154</suspValue><description>removed call to org/apache/commons/math3/util/FastMath$CodyWaite::getRemB</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>171</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::sinQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>178</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::cosQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>173</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::sin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::sin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>62</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>66</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>144</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>62</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2222</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>66</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05538487756217113</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>144</index><block>16</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>76</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>115</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0553001263609331</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2227</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>76</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2236</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>115</index><block>15</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2253</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>173</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06350006350009525</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::sin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>180</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.07293249574894728</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::sin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>154</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>154</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>154</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>154</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sin</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>2247</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>154</index><block>17</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05572782125753528</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to EIGHTHS with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_A with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_B with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_A with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_B with an access to SINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to EIGHTHS with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_A with an access to COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_B with an access to COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_A with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_B with an access to SINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to EIGHTHS with an access to COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_A with an access to COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_B with an access to COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_A with an access to COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_B with an access to COSINE_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to EIGHTHS with an access to COSINE_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_A with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_B with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_A with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_B with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to EIGHTHS with an access to TANGENT_TABLE_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_A with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_B with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_A with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_B with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to EIGHTHS with an access to TANGENT_TABLE_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_A with an access to EIGHTHS</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to SINE_TABLE_B with an access to EIGHTHS</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>32</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_A with an access to EIGHTHS</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced access to COSINE_TABLE_B with an access to EIGHTHS</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>85</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>93</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>97</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>103</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>112</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>122</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>134</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>153</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>165</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>183</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local cosEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local xb is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>209</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>215</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>224</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>234</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>240</index><block>3</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>121ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>85</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>93</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>97</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>103</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>112</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>122</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>134</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>153</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>165</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>183</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local xb is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local cosEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local xb is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>209</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>215</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>224</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>234</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>240</index><block>3</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>123ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>85</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>93</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>97</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>103</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>112</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>122</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>134</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>146ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>153</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>165</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>183</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local xb is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local cosEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsA is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsB is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local xb is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>209</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>215</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>224</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>234</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local epsilon to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>240</index><block>3</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local epsilon to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local epsilon to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>85</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>93</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>97</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>103</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>112</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>122</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>134</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>153</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>165</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>183</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local xb is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local cosEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsA is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsB is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local xb is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>209</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>215</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>224</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>234</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local sintA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>240</index><block>3</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local sintA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local sintA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>85</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>93</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>97</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>103</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>112</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>122</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>134</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>153</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>165</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>183</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local xb is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local cosEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsA is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsB is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local xb is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>209</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>215</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>224</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>234</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local sintB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>240</index><block>3</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local sintB to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local sintB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local epsilon is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>81</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local temp2 is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>85</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>93</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>97</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>103</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>112</index><block>2</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>122</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>128</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>134</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>143</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local c is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>153</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>165</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sintB is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local cosEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local costB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local sinEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>183</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local xb is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local costB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local cosEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintA is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sintB is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsA is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local sinEpsB is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local xb is replaced by local costB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>209</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>215</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local b is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>224</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local t is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local c is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>234</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>local a is replaced by local costA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local a is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>240</index><block>3</block><killingTests/><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local costA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_5</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>local d is replaced by local costA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_MAX_INDEX</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local cosEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsA is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsB is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local xb is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local c is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local d is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_INT_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local cosEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>118ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsA is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsB is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local xb is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local c is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local d is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field LN_MANT_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local xb is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local c is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local d is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field EXP_FRAC_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local cosEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>76ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsA is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>127ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsB is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local xb is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local c is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local d is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>12</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xa is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>210ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>227ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1696</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1697</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1698</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>33</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1699</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>39</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local idx is replaced by access to field SINE_TABLE_LEN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1702</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>48</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>239ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>257ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>57</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local epsilon is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>162ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>184ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>62</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>68</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>69</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>71</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>76</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>77</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>78</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1711</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>84</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local temp2 is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>96</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>101</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>106</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>109</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>115</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>119</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>120</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>125</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>126</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>132</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>137</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>140</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1749</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>146</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>150</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>151</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local c is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>156</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>157</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>158</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>161</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>176ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>196ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>162</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>168</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>169</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>171</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>172</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>175</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sintB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>176</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local cosEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>116ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>179</index><block>2</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local costB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>237ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>259ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>180</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local sinEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>186</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>192</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>193</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local costB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>196</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local cosEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>199</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>200</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sintB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>202</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsA is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>65ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>203</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local sinEpsB is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>207</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local xb is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>456ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>492ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>213</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>218</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>221</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local b is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>227</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local t is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>231</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>232</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>access to local c is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>238</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local a is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>243</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>access to local d is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polySine with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to polyCosine with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::polySine with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::polyCosine with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Substituted 8.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1704</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>53</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Substituted 1.073741824E9 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1737</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>88</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>92</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>187</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>195</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Substituted 1.0 with 2.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>111</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>142</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>223</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1692</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1693</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1708</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1709</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>79</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1710</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1741</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>108</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>110</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>127</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>133</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>139</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1748</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>141</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1750</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>152</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>159</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>160</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>163</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1752</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>164</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>170</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>173</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>174</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>177</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>178</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>181</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1767</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>182</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>194</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>197</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>198</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>201</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>204</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>205</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>206</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>208</index><block>3</block><killingTests>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.util.FastMathTest.testCosAccuracy(org.apache.commons.math3.util.FastMathTest)</name><time>513ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>534ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1797</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>214</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>220</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>222</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>233</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05652334189442215</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>239</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1703</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::polySine</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1705</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::polyCosine</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>244</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::sinQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>189</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sinQ</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>1805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>244</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.05488212999484517</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::sinQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>53ms</time></test></testsExecutionTime><patchExecutionTime>63ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field checker is replaced by access to local checker</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable evaluations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable checker</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to incrementCount()V with a call to incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to incrementCount()V with a call to incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to incrementCount()V with a call to incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to incrementCount()V with a call to incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to incrementCount()V with a call to incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to incrementCount()V with a call to incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>9</index><block>7</block><killingTests/><suspValue>0.24253562503633297</suspValue><description>catch type org/apache/commons/math3/exception/MaxCountExceededException is replaced with org/apache/commons/math3/exception/MathIllegalStateException</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>4ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to function is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded using field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to function is guarded using field function</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local point is replaced by access to field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local point is replaced by access to field searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local point is replaced by access to field searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to incrementCount with a call to resetCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.analysis.UnivariateFunction::value(D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to function is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded returning local point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to function is guarded returning local point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded returning field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to function is guarded returning field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to incrementCount()V is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to value(D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to incrementCount()V is guarded returning local point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>25</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to value(D)D is guarded returning local point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to incrementCount()V is guarded returning field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>25</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to value(D)D is guarded returning field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to incrementCount()V is guarded returning field searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>25</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to value(D)D is guarded returning field searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.util.Incrementor::incrementCount()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>25</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to org/apache/commons/math3/analysis/UnivariateFunction::value with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/analysis/UnivariateFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>26</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::computeObjectiveValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::computeObjectiveValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>computeObjectiveValue</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::incrementCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getConvergenceChecker</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/ConvergenceChecker;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to checker is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getConvergenceChecker</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/ConvergenceChecker;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to checker is guarded using field checker</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getConvergenceChecker</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/ConvergenceChecker;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.checker is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getConvergenceChecker()Lorg/apache/commons/math3/optimization/ConvergenceChecker;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getConvergenceChecker</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/ConvergenceChecker;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to checker is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getConvergenceChecker</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/ConvergenceChecker;</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to checker is guarded returning field checker</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getConvergenceChecker</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/ConvergenceChecker;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getConvergenceChecker</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getConvergenceChecker</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/ConvergenceChecker;</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getConvergenceChecker to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to evaluations is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to evaluations is guarded using field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced call to getCount with a call to getMaximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to org.apache.commons.math3.util.Incrementor::getCount()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the access to evaluations is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>the call to getCount()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::getCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced int return with 0 for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getEvaluations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getEvaluations</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.35355339059327373</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getGoalType</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/GoalType;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to goal is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getGoalType</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/GoalType;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to goal is guarded using field goal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getGoalType</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/GoalType;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.goal is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getGoalType()Lorg/apache/commons/math3/optimization/GoalType;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getGoalType</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/GoalType;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to goal is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getGoalType</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/GoalType;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to goal is guarded returning field goal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getGoalType</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/GoalType;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getGoalType</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getGoalType</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/optimization/GoalType;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getGoalType to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchMax is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchMax is guarded using field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchMax is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getMin()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchMax is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getMax()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchMax is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getStartValue()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchMax with an access to searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchMax with an access to searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchMax is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchMax is guarded returning field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMax</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchMin is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchMin is guarded using field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchMin is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getMin()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchMin is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getMax()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchMin is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getStartValue()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchMin with an access to searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchMin with an access to searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchMin is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchMin is guarded returning field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getMin</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchStart is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchStart is guarded using field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchStart is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getMin()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchStart is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getMax()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.searchStart is replaced by the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::getStartValue()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchStart with an access to searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchStart with an access to searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchStart is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to searchStart is guarded returning field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getStartValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>getStartValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>91</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::getStartValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>MethodNameMutator_0</mutator><index>60</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to factory method org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>49</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>55</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>49</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded using field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>55</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded using field evaluations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchMin with an access to searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchMax with an access to searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchStart with an access to searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchMin with an access to searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchMax with an access to searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced access to searchStart with an access to searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchMin is replaced by access to local min</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchMax is replaced by access to local min</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchStart is replaced by access to local min</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>40</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field goal is replaced by access to local goalType</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>45</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field function is replaced by access to local f</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchMin is replaced by access to local max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchMax is replaced by access to local max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchStart is replaced by access to local max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchMin is replaced by access to local startValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchMax is replaced by access to local startValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to field searchStart is replaced by access to local startValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local min is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local max is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local startValue is replaced by local min to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local min is replaced by local startValue to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local max is replaced by local startValue to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>local startValue is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>117</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local f is replaced by access to field function</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local goalType is replaced by access to field goal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local min is replaced by access to field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local max is replaced by access to field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local startValue is replaced by access to field searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>39</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local goalType is replaced by access to field goal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local f is replaced by access to field function</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local min is replaced by access to field searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local max is replaced by access to field searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>34</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local startValue is replaced by access to field searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local min is replaced by access to field searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local max is replaced by access to field searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>34</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>access to local startValue is replaced by access to field searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to setMaximalCount with a call to incrementCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>56</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced call to resetCount with a call to incrementCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>60</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer::doOptimize()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>49</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>55</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the access to evaluations is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to setMaximalCount(I)V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>56</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to resetCount()V is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>60</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to doOptimize()Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>56</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>the call to org.apache.commons.math3.util.Incrementor::resetCount()V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::doOptimize</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>61</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::optimize</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>117</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/univariate/BaseAbstractUnivariateOptimizer::optimize to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::setMaximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::resetCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable searchMin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable searchMax</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>35</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable searchStart</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>128</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>40</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable goal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractUnivariateOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.BaseAbstractUnivariateOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/UnivariateFunction;Lorg/apache/commons/math3/optimization/GoalType;DDD)Lorg/apache/commons/math3/optimization/univariate/UnivariatePointValuePair;</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>45</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.24253562503633297</suspValue><description>Removed assignment to member variable function</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3818</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>112</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>access to field finalK is replaced by access to local k</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>117</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>access to field finalRemA is replaced by access to local xa</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>122</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>access to field finalRemB is replaced by access to local xa</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>117</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>access to field finalRemA is replaced by access to local xb</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>122</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>access to field finalRemB is replaced by access to local xb</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>117</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>access to field finalRemA is replaced by access to local remA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3820</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>122</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>access to field finalRemB is replaced by access to local remA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3788</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local xa is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>0</block><killingTests/><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>71</index><block>0</block><killingTests>org.apache.commons.math3.analysis.function.SincTest.testCrossings(org.apache.commons.math3.analysis.function.SincTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testSomeValues(org.apache.commons.math3.analysis.function.HarmonicOscillatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.analysis.function.SincTest.testCrossings(org.apache.commons.math3.analysis.function.SincTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.analysis.FunctionUtilsTest.testSample(org.apache.commons.math3.analysis.FunctionUtilsTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testParametricValue(org.apache.commons.math3.analysis.function.HarmonicOscillatorTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.analysis.function.HarmonicOscillatorTest.testParametricGradient(org.apache.commons.math3.analysis.function.HarmonicOscillatorTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>74</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>78</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>79</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>81</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>85</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>86</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>88</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>92</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xa to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xa to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3795</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local xa is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local xa is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>34</index><block>0</block><killingTests/><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>42</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>56</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>71</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>74</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>78</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>79</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>81</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>85</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>86</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>88</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>92</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local xb to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>95</index><block>0</block><killingTests/><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local xb to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>29</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local xa is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>31</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='RUN_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>34</index><block>0</block><killingTests/><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remA to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>42</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>56</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>63</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>71</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>74</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>78</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>79</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>81</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local a to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>85</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>86</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>88</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>92</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local a to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3819</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>116</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3798</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>42</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3799</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>45</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>56</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>63</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>71</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>74</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>78</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>79</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>81</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local remA to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>85</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>86</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>88</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>92</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local remA to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>49</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>50</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>52</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>55</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>56</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>57</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>59</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>63</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3803</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>71</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>74</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3804</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>75</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remB to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>78</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>79</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>81</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>84</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>85</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>86</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local b is replaced by local remB to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>88</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remA is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>92</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local a is replaced by local b to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_4</mutator><index>95</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>local remB is replaced by local b to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>98</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Substituted 0.6366197723675814 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Substituted 1.570796251296997 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Substituted 7.549789948768648E-8 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Substituted 6.123233995736766E-17 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>33</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>38</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>61</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>67</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>90</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3788</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3794</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3795</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>30</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3796</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>32</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3798</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3800</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>0</block><killingTests/><suspValue>0.06097107608496923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>60</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3801</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>62</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3803</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>70</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3805</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>80</index><block>0</block><killingTests/><suspValue>0.06097107608496923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>87</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>89</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3806</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>0</block><killingTests/><suspValue>0.06097107608496923</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>98</index><block>0</block><killingTests/><suspValue>0.06097107608496923</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3808</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>98</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3818</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>112</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Removed assignment to member variable finalK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3819</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>117</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Removed assignment to member variable finalRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>3820</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>122</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>Removed assignment to member variable finalRemB</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getK</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>3827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalK is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getK</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>3827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalK is guarded using field finalK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getK</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>3827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to field org.apache.commons.math3.util.FastMath$CodyWaite.finalK is replaced by the call to org.apache.commons.math3.util.FastMath$CodyWaite::getK()I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getK</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>3827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalK is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getK</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>3827</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalK is guarded returning field finalK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getK</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>3827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/FastMath$CodyWaite::getK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getK</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>3827</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalRemA is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalRemA is guarded using field finalRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to field org.apache.commons.math3.util.FastMath$CodyWaite.finalRemA is replaced by the call to org.apache.commons.math3.util.FastMath$CodyWaite::getRemA()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to field org.apache.commons.math3.util.FastMath$CodyWaite.finalRemA is replaced by the call to org.apache.commons.math3.util.FastMath$CodyWaite::getRemB()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>replaced access to finalRemA with an access to finalRemB</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalRemA is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalRemA is guarded returning field finalRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath$CodyWaite::getRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemA</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3833</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath$CodyWaite::getRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalRemB is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalRemB is guarded using field finalRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to field org.apache.commons.math3.util.FastMath$CodyWaite.finalRemB is replaced by the call to org.apache.commons.math3.util.FastMath$CodyWaite::getRemA()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to field org.apache.commons.math3.util.FastMath$CodyWaite.finalRemB is replaced by the call to org.apache.commons.math3.util.FastMath$CodyWaite::getRemB()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>replaced access to finalRemB with an access to finalRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalRemB is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>the access to finalRemB is guarded returning field finalRemA</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath$CodyWaite::getRemB</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath$CodyWaite</mutatedClass><mutatedMethod>getRemB</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>3839</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.06097107608496923</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath$CodyWaite::getRemB</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>replaced call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V with a call to checkOrder([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>replaced call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V with a call to checkOrder([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>replaced call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V with a call to checkOrder([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>replaced call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V with a call to checkOrder([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>replaced call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V with a call to checkOrder([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>replaced call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V with a call to checkOrder([D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>replaced access to INCREASING with an access to DECREASING</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>19</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14586499149789456</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::checkOrder</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to org/apache/commons/math3/util/MathArrays::checkOrder with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>18</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::checkOrder</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>local index is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>local max is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>242</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>local strict is replaced by local abort to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>local index is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>88</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>local index is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>97</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>local index is replaced by local max to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>98</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>local max is replaced by local index to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>access to local index is replaced by access to field SPLIT_FACTOR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>access to local max is replaced by access to field SPLIT_FACTOR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>access to local index is replaced by access to field SPLIT_FACTOR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>88</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0854357657716761</suspValue><description>access to local index is replaced by access to field SPLIT_FACTOR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>97</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>access to local index is replaced by access to field SPLIT_FACTOR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>98</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>access to local max is replaced by access to field SPLIT_FACTOR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>the call to org.apache.commons.math3.util.MathArrays$OrderDirection::ordinal()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>the call to ordinal()I is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>the call to ordinal()I is guarded returning local strict</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>the call to ordinal()I is guarded returning local abort</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>103</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>replaced boolean return with false for org/apache/commons/math3/util/MathArrays::checkOrder</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>93</index><block>12</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>234</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>102</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays$OrderDirection::ordinal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>99</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>242</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>99</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08391813582966891</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>243</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>103</index><block>14</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08638684255813601</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>checkOrder</mutatedMethod><methodDescription>([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;ZZ)Z</methodDescription><lineNumber>240</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>26</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.08481889296799709</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced call to copyOf([DI)[D with a call to copyOf([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced call to copyOf([DI)[D with a call to copyOf([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced call to copyOf([DI)[D with a call to copyOf([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced call to copyOf([DI)[D with a call to copyOf([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced call to copyOf([DI)[D with a call to copyOf([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced call to copyOf([DI)[D with a call to copyOf([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced call to org/apache/commons/math3/util/MathArrays::copyOf with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::copyOf</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::copyOf</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>20</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1643989873053573</suspValue><description>mutated return of Object value for org/apache/commons/math3/util/MathArrays::copyOf to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>local source is replaced by local output to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>local output is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>local source is replaced by local output to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>569</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>local output is replaced by local source to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>567</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>access to local len is replaced by access to field SPLIT_FACTOR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>604ms</time></test></testsExecutionTime><patchExecutionTime>613ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>12</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>access to local len is replaced by access to field SPLIT_FACTOR</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>15</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to min with a call to max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>15</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::min with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::min</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>replaced return value with null for org/apache/commons/math3/util/MathArrays::copyOf</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>569</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>mutated return of Object value for org/apache/commons/math3/util/MathArrays::copyOf to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathArrays.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathArrays</mutatedClass><mutatedMethod>copyOf</mutatedMethod><methodDescription>([DI)[D</methodDescription><lineNumber>568</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>21</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.125</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to checkOrder([D)V with a call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>62</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to checkOrder([D)V with a call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>62</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to checkOrder([D)V with a call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>62</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to checkOrder([D)V with a call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>62</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to checkOrder([D)V with a call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>62</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to checkOrder([D)V with a call to checkOrder([DLorg/apache/commons/math3/util/MathArrays$OrderDirection;Z)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>62</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to copyOf([D)[D with a call to copyOf([DI)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to field abscissa is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>63</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to field ordinate is replaced by access to local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to field abscissa is replaced by access to local y</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>63</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>access to field ordinate is replaced by access to local y</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>8</block><killingTests>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to org/apache/commons/math3/util/MathArrays::copyOf with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>62</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to org/apache/commons/math3/util/MathArrays::copyOf with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::copyOf</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::copyOf</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.3779644730092272</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/apache/commons/math3/util/MathArrays::checkOrder</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>57</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Removed assignment to member variable abscissa</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D[D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>63</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>Removed assignment to member variable ordinate</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([CIIC)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([JJ)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([JJ)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([JJ)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([FIIF)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([FIIF)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([FIIF)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([FIIF)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([CIIC)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([FIIF)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([FIIF)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([Ljava/lang/Object;IILjava/lang/Object;Ljava/util/Comparator;)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([CIIC)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([JJ)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([JJ)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([CIIC)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([CIIC)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([CIIC)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced call to binarySearch([DD)I with a call to binarySearch([JJ)I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to abscissa is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to ordinate is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>43</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to ordinate is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to abscissa is guarded using field abscissa</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to ordinate is guarded using field abscissa</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>43</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to ordinate is guarded using field abscissa</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced access to abscissa with an access to ordinate</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced access to ordinate with an access to abscissa</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>43</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced access to ordinate with an access to abscissa</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local fx is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>46</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local fx is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>13</block><killingTests>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>local fx is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to abscissa is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to ordinate is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>43</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to ordinate is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to abscissa is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>20</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to ordinate is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>43</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>the access to ordinate is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>31</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted -1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>10</block><killingTests>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>44</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>22</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>10</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed call to java/util/Arrays::binarySearch</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>50</index><block>13</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/analysis/function/StepFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>31</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>31</index><block>11</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>StepFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.StepFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>99</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>13</block><killingTests>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</killingTests><suspValue>0.4472135954999579</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/analysis/function/StepFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.function.StepFunctionTest.testHeaviside(org.apache.commons.math3.analysis.function.StepFunctionTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041415768328129106</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03955938860646178</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor$1::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>replaced access to count with an access to maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>replaced access to maximalCount with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>access to field count is replaced by access to local max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>access to field maximalCount is replaced by access to local max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>access to field maxCountCallback is replaced by access to local cb</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>Removed assignment to member variable maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.03952847075210474</suspValue><description>Removed assignment to member variable maxCountCallback</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>the access to count is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>the access to count is guarded using field maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::getMaximalCount()I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::getCount()I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>replaced access to count with an access to maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>the access to count is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>the access to count is guarded returning field maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>replaced int return with 0 for org/apache/commons/math3/util/Incrementor::getCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>getCount</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>114</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0778498944161523</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to count is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to maximalCount is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to count is guarded using field maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to maximalCount is guarded using field maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::getMaximalCount()I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::getMaximalCount()I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::getCount()I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::getCount()I</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>replaced access to count with an access to maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>replaced access to count with an access to maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>replaced access to maximalCount with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to count is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to maximalCount is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to count is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to maximalCount is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to count is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>the access to maximalCount is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>incrementCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04130961923860138</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04068942293855797</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04068942293855797</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04068942293855797</suspValue><description>replaced access to count with an access to maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04068942293855797</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.04068942293855797</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>117ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041959067914834454</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041959067914834454</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041959067914834454</suspValue><description>replaced access to maximalCount with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041959067914834454</suspValue><description>access to field maximalCount is replaced by access to local max</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041959067914834454</suspValue><description>access to local max is replaced by access to field maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041959067914834454</suspValue><description>access to local max is replaced by access to field count</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.041959067914834454</suspValue><description>Removed assignment to member variable maximalCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DDD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFF)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(FFI)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals(DDI)Z with a call to equals(DD)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced call to equals with a call to equalsIncludingNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced boolean return with false for org/apache/commons/math3/util/Precision::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced boolean return with true for org/apache/commons/math3/util/Precision::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>removed call to org/apache/commons/math3/util/Precision::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>88ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DD)Z</methodDescription><lineNumber>244</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.0827605888602368</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>308</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>312</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>local xInt is replaced by local yInt to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>local yInt is replaced by local xInt to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>local xInt is replaced by local yInt to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>local yInt is replaced by local xInt to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>308</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>312</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local xInt is replaced by access to field EXPONENT_OFFSET</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local yInt is replaced by access to field EXPONENT_OFFSET</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local xInt is replaced by access to field EXPONENT_OFFSET</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local yInt is replaced by access to field EXPONENT_OFFSET</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local maxUlps is replaced by access to field SGN_MASK_FLOAT</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>55</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local x is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local y is replaced by access to field EPSILON</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>308</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>312</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local xInt is replaced by access to field SGN_MASK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>25</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local yInt is replaced by access to field SGN_MASK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local xInt is replaced by access to field SGN_MASK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local yInt is replaced by access to field SGN_MASK</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>55</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local x is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>access to local y is replaced by access to field SAFE_MIN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>308</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>replaced call to doubleToLongBits with a call to doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>replaced call to doubleToLongBits with a call to doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>56</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>59</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>replaced boolean return with false for org/apache/commons/math3/util/Precision::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>replaced boolean return with true for org/apache/commons/math3/util/Precision::equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>4</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>8</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>39</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>60</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed call to java/lang/Double::doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed call to java/lang/Double::doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>56</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>57</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>60</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>57</index><block>6</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>60</index><block>7</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>44</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>312</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>319</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>44</index><block>3</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Precision.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Precision</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(DDI)Z</methodDescription><lineNumber>321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>66</index><block>9</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.036810508691615514</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/analysis/UnivariateFunction;)V</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Removed assignment to member variable val$f</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded using field val$f</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded using field val$f</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded using field val$f</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local r is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local x is replaced by local r to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local r is replaced by local x to be defined</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>148</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>3</block><killingTests>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>local r is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to org.apache.commons.math3.analysis.UnivariateFunction::value(D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to org.apache.commons.math3.analysis.UnivariateFunction::value(D)D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to val$f is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to value(D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to value(D)D is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to value(D)D is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to value(D)D is guarded returning local x</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to value(D)D is guarded returning local r</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to org/apache/commons/math3/analysis/UnivariateFunction::value with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to org/apache/commons/math3/analysis/UnivariateFunction::value with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>144</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/math3/analysis/UnivariateFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/math3/analysis/UnivariateFunction::value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/analysis/FunctionUtils$4::value</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>145</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$4</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>148</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>3</block><killingTests>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/analysis/FunctionUtils$4::value</description><testsExecutionTime><test><name>org.apache.commons.math3.analysis.FunctionUtilsTest.testAdd(org.apache.commons.math3.analysis.FunctionUtilsTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field point is replaced by access to local point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field value is replaced by access to local point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field point is replaced by access to local value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>access to field value is replaced by access to local value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local point is replaced by local value to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>local value is replaced by local point to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>46</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Removed assignment to member variable point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>Removed assignment to member variable value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to point is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to point is guarded using field point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.point is replaced by the call to org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair::getPoint()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.point is replaced by the call to org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair::getValue()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced access to point with an access to value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to point is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to point is guarded returning field point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair::getPoint</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getPoint</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>56</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair::getPoint</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to value is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to value is guarded using field point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.value is replaced by the call to org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair::getPoint()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to field org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair.value is replaced by the call to org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair::getValue()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced access to value with an access to point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to value is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>the access to value is guarded returning field point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>UnivariatePointValuePair.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.univariate.UnivariatePointValuePair</mutatedClass><mutatedMethod>getValue</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.25</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/univariate/UnivariatePointValuePair::getValue</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to sin with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::sin with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::sin</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/analysis/function/Sin::value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Sin.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.function.Sin</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>36</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.1125087900926024</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/analysis/function/Sin::value</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to org/apache/commons/math3/analysis/FunctionUtils$4::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced return value with null for org/apache/commons/math3/analysis/FunctionUtils::add</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>add</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/analysis/UnivariateFunction;)Lorg/apache/commons/math3/analysis/UnivariateFunction;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>mutated return of Object value for org/apache/commons/math3/analysis/FunctionUtils::add to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.univariate.BrentOptimizerTest.testKeepInitIfBest(org.apache.commons.math3.optimization.univariate.BrentOptimizerTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
</mutations>
