<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field real is replaced by access to local real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field imaginary is replaced by access to local real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field real is replaced by access to local imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testpowNull(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>access to field imaginary is replaced by access to local imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>local real is replaced by local imaginary to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='3'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>local imaginary is replaced by local real to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testpowNull(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>Removed assignment to member variable real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DD)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.08192319205190406</suspValue><description>Removed assignment to member variable imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>local real is replaced by local imaginary to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>local imaginary is replaced by local real to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>access to local real is replaced by access to field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>access to local imaginary is replaced by access to field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>5</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testAddInfinite(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>access to local real is replaced by access to field real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAddInfinite(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>access to local imaginary is replaced by access to field real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>removed call to org/apache/commons/math/complex/Complex::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>replaced return value with null for org/apache/commons/math/complex/Complex::createComplex</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>createComplex</mutatedMethod><methodDescription>(DD)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>872</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>29</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1270001270001905</suspValue><description>mutated return of Object value for org/apache/commons/math/complex/Complex::createComplex to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>66</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17407765595569785</suspValue><description>catch type java/lang/ClassCastException is replaced with java/lang/RuntimeException</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>41</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>41</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>41</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>41</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>41</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>41</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>29</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>41</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>44</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>49</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>52</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>30</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to doubleToRawLongBits with a call to doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to getReal with a call to abs</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>46</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to doubleToRawLongBits with a call to doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to doubleToRawLongBits with a call to doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>53</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to getImaginary with a call to abs</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>54</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to doubleToRawLongBits with a call to doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to getReal with a call to getImaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>53</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to getImaginary with a call to getReal</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>the call to org.apache.commons.math.complex.Complex::isNaN()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.math.complex.Complex::getReal()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>53</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.math.complex.Complex::getImaginary()D is guarded using default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>42</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to real is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>50</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to imaginary is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>the call to isNaN()Z is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to getReal()D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>53</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to getImaginary()D is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>76</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced boolean return with false for org/apache/commons/math/complex/Complex::equals</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>76</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsClass(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced boolean return with true for org/apache/commons/math/complex/Complex::equals</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsClass(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>9</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>10</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsClass(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsClass(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to java/lang/Double::doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/math/complex/Complex::getReal</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to java/lang/Double::doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to java/lang/Double::doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>53</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/math/complex/Complex::getImaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>54</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to java/lang/Double::doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsClass(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsClass(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>250</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.1690308509457033</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.17149858514250882</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>48</index><block>7</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsRealDifference(org.apache.commons.math.complex.ComplexTest)</name><time>36ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>56</index><block>8</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>266</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>76</index><block>11</block><killingTests>org.apache.commons.math.complex.ComplexTest.testEqualsClass(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testEqualsClass(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testAddInfinite(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAddInfinite(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testAddInfinite(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAddInfinite(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>the access to real is guarded returning default value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>the access to real is guarded returning field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testAddInfinite(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/complex/Complex::getReal</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAddInfinite(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>getReal</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>299</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>15</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.09284766908852593</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/complex/Complex::getReal</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>16</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>16</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>16</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>16</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>16</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>16</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to hash(D)I with a call to hash([D)I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>15</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>19</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>15</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>19</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>19</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>14</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>18</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to org.apache.commons.math.complex.Complex::isNaN()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to imaginary is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to real is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to isNaN()Z is guarded returning default value 0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 37 with 38</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Substituted 17 with 18</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::hash</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to org/apache/commons/math/util/MathUtils::hash</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>23</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced int return with 0 for org/apache/commons/math/complex/Complex::hashCode</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>277</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>12</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>hashCode</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>280</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>14</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAcosNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConjugateNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAsinNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAcosNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConjugateNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAsinNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>7</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>9</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to real is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>8</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>the access to imaginary is guarded returning default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>17</index><block>19</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced boolean return with false for org/apache/commons/math/complex/Complex::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>17</index><block>19</block><killingTests>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced boolean return with true for org/apache/commons/math/complex/Complex::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAcosNaN(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConjugateNaN(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAsinNaN(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>18</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>19</block><killingTests>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAcosNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConjugateNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAsinNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAcosNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConjugateNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAsinNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed call to java/lang/Double::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAcosNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConjugateNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAsinNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>16</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='6'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>17</block><killingTests>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAbsNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAcosNaN(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConjugateNaN(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testConstructorNaN(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testAsinNaN(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>isNaN</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>17</index><block>19</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.0949157995752499</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>MethodNameMutator_0</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to factory method org.apache.commons.math.complex.Complex.createComplex(DD)Lorg/apache/commons/math/complex/Complex; is replaced by an instantiation of type org.apache.commons.math.complex.Complex using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded using value 0.D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded using field imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::abs()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getImaginary()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.imaginary is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math.complex.Complex.real is replaced by the call to org.apache.commons.math.complex.Complex::getReal()D</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced access to imaginary with an access to real</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced access to real with an access to imaginary</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>37</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>38</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>40</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local this is replaced by local rhs to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>56</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>local rhs is replaced by local this to be used</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>37</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>40</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>43</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>45</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>51</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>54</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>56</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>15</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>37</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>40</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>43</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>45</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>49</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>51</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>54</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>56</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>15</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>23</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>37</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>40</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>43</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>45</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>49</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>51</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>54</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>56</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field INF</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>15</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>23</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>37</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>40</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>43</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>45</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>49</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>51</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>54</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>56</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field ONE</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>15</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>19</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>23</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>37</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>40</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>43</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>45</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>49</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>51</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>54</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local this is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>56</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to local rhs is replaced by access to field ZERO</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>6</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>15</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>19</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>23</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>27</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>37</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>38</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>40</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>43</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>45</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>49</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>51</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>54</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local this is replaced a call this.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>56</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to the local rhs is replaced a call rhs.conjugate()</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced call to isNaN with a call to isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>25</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>29</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to isInfinite with a call to isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.math.complex.Complex::isNaN()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to org.apache.commons.math.complex.Complex::isNaN()Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to org.apache.commons.math.complex.Complex::createComplex(DD)Lorg/apache/commons/math/complex/Complex; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>16</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to real is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>28</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to imaginary is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>39</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>41</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>44</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>46</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>50</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>52</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>55</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to imaginary is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>57</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to real is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to createComplex(DD)Lorg/apache/commons/math/complex/Complex; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to createComplex(DD)Lorg/apache/commons/math/complex/Complex; is guarded returning local this</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>4</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning local rhs</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning local rhs</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to createComplex(DD)Lorg/apache/commons/math/complex/Complex; is guarded returning local rhs</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to createComplex(DD)Lorg/apache/commons/math/complex/Complex; is guarded returning field I</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to isNaN()Z is guarded returning field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to createComplex(DD)Lorg/apache/commons/math/complex/Complex; is guarded returning field NaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>48</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>38ms</time></test><test><name>org.apache.commons.math.complex.ComplexTest.testMultiply(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>58</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>59</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/apache/commons/math/complex/Complex::isNaN</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to java/lang/Double::isInfinite</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to org/apache/commons/math/complex/Complex::createComplex</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>61</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced return value with null for org/apache/commons/math/complex/Complex::multiply</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>18</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>22</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>20</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>21</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>18</index><block>23</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>22</index><block>24</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>25</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>26</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>61</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>mutated return of Object value for org/apache/commons/math/complex/Complex::multiply to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Complex.java</sourceFile><mutatedClass>org.apache.commons.math.complex.Complex</mutatedClass><mutatedMethod>multiply</mutatedMethod><methodDescription>(Lorg/apache/commons/math/complex/Complex;)Lorg/apache/commons/math/complex/Complex;</methodDescription><lineNumber>363</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>60</index><block>28</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to org/apache/commons/math/complex/Complex::createComplex with receiver</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>access to local value is replaced by access to field TWO_PI</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced call to doubleToLongBits with a call to doubleToRawLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Substituted 32 with 33</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Replaced Unsigned Shift Right with Shift Left</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>removed call to java/lang/Double::doubleToLongBits</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced int return with 0 for org/apache/commons/math/util/MathUtils::hash</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math.util.MathUtils</mutatedClass><mutatedMethod>hash</mutatedMethod><methodDescription>(D)I</methodDescription><lineNumber>460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>0</block><killingTests>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</killingTests><suspValue>0.14744195615489714</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.complex.ComplexTest.testMath221(org.apache.commons.math.complex.ComplexTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
</mutations>
