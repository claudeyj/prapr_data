<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/SortedMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Comparator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Comparator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Comparator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/SortedMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Map;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/SortedMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Comparator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Comparator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/SortedMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/SortedMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/SortedMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Comparator;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>removed call to java/util/TreeMap::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.18569533817705186</suspValue><description>Removed assignment to member variable freqTable</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>MethodNameMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to factory method java.util.TreeMap.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>MethodNameMutator_1</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to factory method java.util.TreeMap.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math.estimation.GaussNewtonEstimatorTest$Circle using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>MethodNameMutator_3</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to factory method java.util.TreeMap.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math.estimation.LevenbergMarquardtEstimatorTest$Circle using (DD)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to freqTable is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to freqTable is guarded using field freqTable</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>local v is replaced by local obj to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>local obj is replaced by local v to be used</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to get with a call to lowerKey</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to get with a call to floorKey</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to get with a call to ceilingKey</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to get with a call to higherKey</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to java.util.TreeMap::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to freqTable is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to freqTable is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the access to freqTable is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>replaced call to java/util/TreeMap::get with argument</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>62</index><block>5</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed call to java/util/TreeMap::get</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>1</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Frequency.java</sourceFile><mutatedClass>org.apache.commons.math.stat.Frequency</mutatedClass><mutatedMethod>addValue</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>2</block><killingTests>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</killingTests><suspValue>0.1889822365046136</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.stat.FrequencyTest.testAddNonComparable(org.apache.commons.math.stat.FrequencyTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
</mutations>
