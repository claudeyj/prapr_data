<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07516460280028289</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07516460280028289</suspValue><description>access to local y is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07516460280028289</suspValue><description>access to local y is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07516460280028289</suspValue><description>access to local y is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07516460280028289</suspValue><description>access to local y is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local y is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>19</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3350</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>24</index><block>13</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07516460280028289</suspValue><description>access to local y is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to doubleHighPart</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to floor with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::floor with argument</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed call to org/apache/commons/math/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07516460280028289</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::ceil</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>21</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>10</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>21</index><block>12</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07235746052924216</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>ceil</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>13</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.07516460280028289</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::ceil</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>36</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>49</index><block>7</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.05521576303742327</suspValue><description>access to local y is replaced by access to field HEX_40000000</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>36</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>49</index><block>7</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>62</index><block>9</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.05521576303742327</suspValue><description>access to local y is replaced by access to field MASK_30BITS</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3325</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>27</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>38</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>access to local x is replaced by access to field TWO_POWER_52</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>Substituted 4.503599627370496E15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>Substituted -4.503599627370496E15 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>7</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>52</index><block>7</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.05521576303742327</suspValue><description>replaced double return with 0.0d for org/apache/commons/math/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>40</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>52</index><block>7</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3317</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>40</index><block>6</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>52</index><block>7</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3321</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051502620262460476</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3326</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>35</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051639777949432225</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math.util.FastMath</mutatedClass><mutatedMethod>floor</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3334</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>64</index><block>9</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.05521576303742327</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math/util/FastMath::floor</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>5ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced call to &#60;init&#62;(ID)V with a call to &#60;init&#62;(D)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(D)V</methodDescription><lineNumber>100</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.14433756729740646</suspValue><description>Substituted 16 with 17</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>replaced access to mask with an access to size</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>replaced access to mask with an access to count</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>access to field missingEntries is replaced by access to local missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>access to field mask is replaced by access to local expectedSize</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>access to field mask is replaced by access to local capacity</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>replaced call to computeCapacity with a call to nextPowerOfTwo</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>replaced call to computeCapacity with a call to perturb</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>replaced call to computeCapacity with a call to changeIndexSign</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>replaced call to computeCapacity with a call to hashOf</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>replaced call to org/apache/commons/math/util/OpenIntToDoubleHashMap::computeCapacity with argument</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>37</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>38</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>118</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap::computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>Removed assignment to member variable keys</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>Removed assignment to member variable values</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>27</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>Removed assignment to member variable states</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>32</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>Removed assignment to member variable missingEntries</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ID)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>Removed assignment to member variable mask</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>local powerOfTwo is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local capacity is replaced by local expectedSize to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>local powerOfTwo is replaced by local capacity to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>local capacity is replaced by local powerOfTwo to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>local capacity is replaced by local powerOfTwo to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>access to local expectedSize is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local expectedSize is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local capacity is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local powerOfTwo is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local capacity is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local capacity is replaced by access to field DEFAULT_EXPECTED_SIZE</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>access to local expectedSize is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local expectedSize is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local capacity is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local powerOfTwo is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local capacity is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local capacity is replaced by access to field RESIZE_MULTIPLIER</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>access to local expectedSize is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local expectedSize is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>21</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local capacity is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>26</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local powerOfTwo is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>access to local capacity is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>access to local capacity is replaced by access to field PERTURB_SHIFT</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to sqrt</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to highestOneBit with a call to lowestOneBit</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to cosh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to highestOneBit with a call to numberOfLeadingZeros</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to highestOneBit with a call to numberOfTrailingZeros</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to tanh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to highestOneBit with a call to bitCount</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to acosh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to highestOneBit with a call to reverse</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to asinh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to highestOneBit with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to atanh</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to highestOneBit with a call to reverseBytes</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to signum</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to nextUp</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to ceil with a call to exp</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to org/apache/commons/math/util/FastMath::ceil with argument</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>replaced call to java/lang/Integer::highestOneBit with argument</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>13</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>Substituted 0.5 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>Replaced float division with multiplication</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>removed call to org/apache/commons/math/util/FastMath::ceil</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>removed call to java/lang/Integer::highestOneBit</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>replaced int return with 0 for org/apache/commons/math/util/OpenIntToDoubleHashMap::computeCapacity</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.12403473458920847</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>155</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.125</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenIntToDoubleHashMap.java</sourceFile><mutatedClass>org.apache.commons.math.util.OpenIntToDoubleHashMap</mutatedClass><mutatedMethod>computeCapacity</mutatedMethod><methodDescription>(I)I</methodDescription><lineNumber>156</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>5</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1259881576697424</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051298917604257706</suspValue><description>local rowDimension is replaced by local columnDimension to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>57</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051366549693751415</suspValue><description>local columnDimension is replaced by local rowDimension to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051298917604257706</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051366549693751415</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051298917604257706</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051366549693751415</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051298917604257706</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051366549693751415</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051298917604257706</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051366549693751415</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051298917604257706</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>57</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>22</index><block>2</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.051366549693751415</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(Lorg/apache/commons/math/util/OpenIntToDoubleHashMap;)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>replaced call to &#60;init&#62;(D)V with a call to &#60;init&#62;(ID)V</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>access to field rows is replaced by access to local rowDimension</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>access to field columns is replaced by access to local rowDimension</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>access to field rows is replaced by access to local columnDimension</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>access to field columns is replaced by access to local columnDimension</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>local rowDimension is replaced by local columnDimension to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>local columnDimension is replaced by local rowDimension to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>local rowDimension is replaced by local columnDimension to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>15</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>local columnDimension is replaced by local rowDimension to be used</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>23</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>removed call to org/apache/commons/math/util/OpenIntToDoubleHashMap::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>Removed assignment to member variable rows</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>Removed assignment to member variable columns</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>OpenMapRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math.linear.OpenMapRealMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(II)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTests>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>Removed assignment to member variable entries</description><testsExecutionTime><test><name>org.apache.commons.math.linear.OpenMapRealMatrixTest.testMath679(org.apache.commons.math.linear.OpenMapRealMatrixTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
</mutations>
