<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;I)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;I)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;I)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;I)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;I)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;I)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>removed call to java/util/Collections::emptyList</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>63</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to chromosomes is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>63</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to chromosomes is guarded using local chromosomes</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.populationLimit is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::setPopulationLimit(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>59</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::setChromosomes(Ljava/util/List;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>63</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testGetFittestChromosome(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getChromosomes()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testGetFittestChromosome(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>63</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getChromosomeList()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to field populationLimit is replaced by access to local populationLimit</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>59</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to field chromosomes is replaced by access to local chromosomes</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>63</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>access to field chromosomes is replaced by access to local chromosomes</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll with a call to containsAll</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll with a call to removeAll</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to addAll with a call to retainAll</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to java.util.List::addAll(Ljava/util/Collection;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>63</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>63</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>63</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>58</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>65</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to java/util/List::addAll</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>65</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.20851441405707477</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>33</index><block>5</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>51</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Removed assignment to member variable populationLimit</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;I)V</methodDescription><lineNumber>76</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>59</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.22360679774997896</suspValue><description>Removed assignment to member variable chromosomes</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll(Ljava/util/Collection;)Z with a call to addAll(ILjava/util/Collection;)Z</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to chromosomes is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to populationLimit is guarded using value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to chromosomes is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to chromosomes is guarded using field chromosomes</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to populationLimit is guarded using field populationLimit</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to chromosomes is guarded using field chromosomes</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getChromosomes()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.populationLimit is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getPopulationLimit()I</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testChromosomes(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getChromosomes()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testChromosomes(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getChromosomeList()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.populationLimit is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getPopulationSize()I</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getChromosomeList()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll with a call to containsAll</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll with a call to removeAll</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced call to addAll with a call to retainAll</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to java.util.Collection::size()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.util.List::addAll(Ljava/util/Collection;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to populationLimit is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to populationLimit is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>10</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the access to populationLimit is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>30</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to chromosomes is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>the call to size()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to addAll(Ljava/util/Collection;)Z is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>8</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed call to java/util/Collection::size</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>32</index><block>10</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/util/List::addAll</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>addChromosomes</mutatedMethod><methodDescription>(Ljava/util/Collection;)V</methodDescription><lineNumber>108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>11</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.5773502691896258</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to chromosomes is guarded using value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to chromosomes is guarded using field chromosomes</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='false' status='SURVIVED' numberOfTestsRun='2'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getChromosomes()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.genetics.ChromosomeTest.testFindSameChromosome(org.apache.commons.math3.genetics.ChromosomeTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.apache.commons.math3.genetics.ListPopulation.chromosomes is replaced by the call to org.apache.commons.math3.genetics.ListPopulation::getChromosomeList()Ljava/util/List;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to java.util.List::iterator()Ljava/util/Iterator; is guarded using default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to chromosomes is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>the call to iterator()Ljava/util/Iterator; is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>removed call to java/util/List::iterator</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/apache/commons/math3/genetics/ListPopulation::iterator</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ListPopulation.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.ListPopulation</mutatedClass><mutatedMethod>iterator</mutatedMethod><methodDescription>()Ljava/util/Iterator;</methodDescription><lineNumber>209</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>11</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/apache/commons/math3/genetics/ListPopulation::iterator to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;)V with a call to &#60;init&#62;([Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;)V with a call to &#60;init&#62;([Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;)V with a call to &#60;init&#62;([Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;)V with a call to &#60;init&#62;([Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;)V with a call to &#60;init&#62;([Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>39</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2886751345948129</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/List;)V with a call to &#60;init&#62;([Ljava/lang/Object;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>84ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>the call to intValue()I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>58</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>2</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>checkValidity</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>21</index><block>3</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.2672612419124244</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_0</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_1</mutator><index>19</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator; is replaced by an instantiation of type org.apache.commons.math3.random.RandomAdaptorTest$ConstantGenerator using (D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_2</mutator><index>19</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator; is replaced by an instantiation of type org.apache.commons.math3.random.BitsStreamGenerator using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_3</mutator><index>19</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator; is replaced by an instantiation of type org.apache.commons.math3.random.RandomAdaptor using (Lorg/apache/commons/math3/random/RandomGenerator;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_4</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_5</mutator><index>19</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.apache.commons.math3.genetics.GeneticAlgorithm.getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator; is replaced by an instantiation of type org.apache.commons.math3.random.RandomAdaptorTest$ConstantGenerator using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to nextInt(I)I with a call to nextInt()I</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to nextInt(I)I with a call to nextInt()I</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to nextInt(I)I with a call to nextInt()I</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to nextInt(I)I with a call to nextInt()I</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to nextInt(I)I with a call to nextInt()I</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to nextInt(I)I with a call to nextInt()I</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local j is replaced by local length to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>local length is replaced by local j to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to add with a call to equals</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.apache.commons.math3.random.RandomGenerator::nextInt(I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to java.util.List::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to nextInt(I)I is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to nextInt(I)I is guarded returning local rList</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning local rList</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to org/apache/commons/math3/random/RandomGenerator::nextInt with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced return value with Collections.emptyList for org/apache/commons/math3/genetics/BinaryChromosome::randomBinaryRepresentation</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>27</index><block>8</block><killingTests/><suspValue>0.30151134457776363</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math3/genetics/GeneticAlgorithm::getRandomGenerator</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/apache/commons/math3/random/RandomGenerator::nextInt</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/lang/Integer::valueOf</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>8</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to java/util/List::add</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>15</index><block>7</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>15</index><block>7</block><killingTests/><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BinaryChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.BinaryChromosome</mutatedClass><mutatedMethod>randomBinaryRepresentation</mutatedMethod><methodDescription>(I)Ljava/util/List;</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>32</index><block>9</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.30151134457776363</suspValue><description>mutated return of Object value for org/apache/commons/math3/genetics/BinaryChromosome::randomBinaryRepresentation to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to &#60;init&#62;(Ljava/util/Collection;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>the access to field org.apache.commons.math3.genetics.AbstractListChromosome.representation is replaced by the call to org.apache.commons.math3.genetics.AbstractListChromosome::checkValidity(Ljava/util/List;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>access to field representation is replaced by access to local representation</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to unmodifiableList with a call to synchronizedList</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>the call to checkValidity(Ljava/util/List;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>93ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>the call to checkValidity(Ljava/util/List;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>the call to checkValidity(Ljava/util/List;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>the call to checkValidity(Ljava/util/List;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>the call to checkValidity(Ljava/util/List;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>the call to org.apache.commons.math3.genetics.AbstractListChromosome::checkValidity(Ljava/util/List;)V is guarded</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>replaced call to java/util/Collections::unmodifiableList with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>16</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>removed call to java/util/Collections::unmodifiableList</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>43</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>removed call to org/apache/commons/math3/genetics/AbstractListChromosome::checkValidity</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractListChromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.AbstractListChromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/util/List;)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>18</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.19611613513818404</suspValue><description>Removed assignment to member variable representation</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeneticAlgorithm.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.GeneticAlgorithm</mutatedClass><mutatedMethod>getRandomGenerator</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/random/RandomGenerator;</methodDescription><lineNumber>104</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>the access to field org.apache.commons.math3.genetics.GeneticAlgorithm.randomGenerator is replaced by the call to org.apache.commons.math3.genetics.GeneticAlgorithm::getRandomGenerator()Lorg/apache/commons/math3/random/RandomGenerator;</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeneticAlgorithm.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.GeneticAlgorithm</mutatedClass><mutatedMethod>getRandomGenerator</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/random/RandomGenerator;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>replaced return value with null for org/apache/commons/math3/genetics/GeneticAlgorithm::getRandomGenerator</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GeneticAlgorithm.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.GeneticAlgorithm</mutatedClass><mutatedMethod>getRandomGenerator</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/random/RandomGenerator;</methodDescription><lineNumber>104</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.25</suspValue><description>mutated return of Object value for org/apache/commons/math3/genetics/GeneticAlgorithm::getRandomGenerator to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Chromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.Chromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>Substituted -Infinity with 1.0</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>80ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Chromosome.java</sourceFile><mutatedClass>org.apache.commons.math3.genetics.Chromosome</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>33</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</killingTests><suspValue>0.1796053020267749</suspValue><description>Removed assignment to member variable fitness</description><testsExecutionTime><test><name>org.apache.commons.math3.genetics.ListPopulationTest.testIterator(org.apache.commons.math3.genetics.ListPopulationTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
</mutations>
