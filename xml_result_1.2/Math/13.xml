<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>49</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>replaced access to cachedQ with an access to cachedQt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>54</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>replaced access to cachedQt with an access to cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>59</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>replaced access to cachedT with an access to cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>49</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>replaced access to cachedQ with an access to cachedT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>54</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>replaced access to cachedQt with an access to cachedT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>59</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>replaced access to cachedT with an access to cachedQt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>49</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>access to field cachedQ is replaced by access to local matrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>54</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>access to field cachedQt is replaced by access to local matrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>59</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>access to field cachedT is replaced by access to local matrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07808688094430304</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::isSquare()Z is guarded using default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>23</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getData()[[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07808688094430304</suspValue><description>the call to isSquare()Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>63</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to transform()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07808688094430304</suspValue><description>the call to isSquare()Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>23</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>63</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to transform()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07808688094430304</suspValue><description>the call to isSquare()Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>23</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>63</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to transform()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07808688094430304</suspValue><description>the call to isSquare()Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>23</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>63</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to transform()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07808688094430304</suspValue><description>the call to isSquare()Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>23</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>63</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to transform()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>63</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the call to org.apache.commons.math3.linear.TriDiagonalTransformer::transform()V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>41</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>42</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2062ms</time></test></testsExecutionTime><patchExecutionTime>2122ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::isSquare</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2105ms</time></test></testsExecutionTime><patchExecutionTime>2164ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7231ms</time></test></testsExecutionTime><patchExecutionTime>7297ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getData</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2053ms</time></test></testsExecutionTime><patchExecutionTime>2114ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07808688094430304</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07808688094430304</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2073ms</time></test></testsExecutionTime><patchExecutionTime>2133ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>63</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>removed call to org/apache/commons/math3/linear/TriDiagonalTransformer::transform</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>69</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Removed assignment to member variable householderVectors</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7231ms</time></test></testsExecutionTime><patchExecutionTime>7294ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>36</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Removed assignment to member variable main</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7582ms</time></test></testsExecutionTime><patchExecutionTime>7642ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>44</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Removed assignment to member variable secondary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7147ms</time></test></testsExecutionTime><patchExecutionTime>7208ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>49</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>Removed assignment to member variable cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>54</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>Removed assignment to member variable cachedQt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>59</index><block>2</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>Removed assignment to member variable cachedT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to main is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to main is guarded using field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.main is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getMainDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.main is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getSecondaryDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>replaced access to main with an access to secondary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to main is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to main is guarded returning field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>replaced return value with null for org/apache/commons/math3/linear/TriDiagonalTransformer::getMainDiagonalRef</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getMainDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>18</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>mutated return of Object value for org/apache/commons/math3/linear/TriDiagonalTransformer::getMainDiagonalRef to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the access to cachedQ is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the access to cachedQ is guarded using field cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07905694150420949</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.cachedQ is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getQ()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7935ms</time></test></testsExecutionTime><patchExecutionTime>8004ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.cachedQ is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getQT()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.cachedQ is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getT()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced access to cachedQ with an access to cachedQt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>12</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced access to cachedQ with an access to cachedQt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced access to cachedQ with an access to cachedT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>12</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced access to cachedQ with an access to cachedT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07905694150420949</suspValue><description>replaced call to getQT with a call to getQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7943ms</time></test></testsExecutionTime><patchExecutionTime>8039ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced call to transpose with a call to copy</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>10</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced call to getQT with a call to getT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getQT()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::transpose()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the access to cachedQ is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the access to cachedQ is guarded returning field cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the call to getQT()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the call to transpose()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the call to getQT()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning field cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the call to transpose()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning field cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the call to getQT()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning field cachedQt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>the call to transpose()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning field cachedQt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07905694150420949</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8293ms</time></test></testsExecutionTime><patchExecutionTime>8358ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07905694150420949</suspValue><description>removed call to org/apache/commons/math3/linear/TriDiagonalTransformer::getQT</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8224ms</time></test></testsExecutionTime><patchExecutionTime>8290ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::transpose</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07905694150420949</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8277ms</time></test></testsExecutionTime><patchExecutionTime>8338ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>Removed assignment to member variable cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQ</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced call to org/apache/commons/math3/linear/RealMatrix::transpose with receiver</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to cachedQt is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to householderVectors is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to cachedQt is guarded using field cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to householderVectors is guarded using field householderVectors</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.cachedQt is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getQ()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>9974ms</time></test></testsExecutionTime><patchExecutionTime>9997ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.householderVectors is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getHouseholderVectorsRef()[[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.cachedQt is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getQT()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>9272ms</time></test></testsExecutionTime><patchExecutionTime>9334ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.cachedQt is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getT()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>replaced access to cachedQt with an access to cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>replaced access to cachedQt with an access to cachedT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>local k is replaced by local m to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to cachedQt is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to householderVectors is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to cachedQt is guarded returning field cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>99</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>the access to householderVectors is guarded returning field cachedQ</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>27</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>214</index><block>16</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8280ms</time></test></testsExecutionTime><patchExecutionTime>8347ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>27</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07881104062391006</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8582ms</time></test></testsExecutionTime><patchExecutionTime>8642ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>98</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>5</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>27</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>27</index><block>6</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getQT</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>214</index><block>16</block><killingTests/><suspValue>0.07881104062391006</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to secondary is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to secondary is guarded using field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.secondary is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getMainDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.secondary is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getSecondaryDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>replaced access to secondary with an access to main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to secondary is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>the access to secondary is guarded returning field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>replaced return value with null for org/apache/commons/math3/linear/TriDiagonalTransformer::getSecondaryDiagonalRef</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>getSecondaryDiagonalRef</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>185</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>19</block><killingTests/><suspValue>0.08006407690254357</suspValue><description>mutated return of Object value for org/apache/commons/math3/linear/TriDiagonalTransformer::getSecondaryDiagonalRef to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>25</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to householderVectors is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to main is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to secondary is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to main is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>355</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to main is guarded using local z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to secondary is guarded using local z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to main is guarded using local z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded using field householderVectors</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>25</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to householderVectors is guarded using field householderVectors</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to main is guarded using field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to secondary is guarded using field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to main is guarded using field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>355</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded using field householderVectors</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.householderVectors is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getHouseholderVectorsRef()[[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.householderVectors is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getHouseholderVectorsRef()[[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.main is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getMainDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.secondary is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getMainDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.main is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getMainDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>355</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.householderVectors is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getHouseholderVectorsRef()[[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.main is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getSecondaryDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.secondary is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getSecondaryDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to field org.apache.commons.math3.linear.TriDiagonalTransformer.main is replaced by the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getSecondaryDiagonalRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced access to main with an access to secondary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced access to secondary with an access to main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>350</index><block>39</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>replaced access to main with an access to secondary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8616ms</time></test></testsExecutionTime><patchExecutionTime>8681ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>access to field main is replaced by access to local z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>access to field secondary is replaced by access to local z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>access to field main is replaced by access to local z</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>access to field main is replaced by access to local hK</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>access to field secondary is replaced by access to local hK</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>local k is replaced by local m to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>local m is replaced by local k to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>26</index><block>21</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>local k is replaced by local m to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>6027ms</time></test></testsExecutionTime><patchExecutionTime>6076ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>21</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>local k is replaced by local m to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>6899ms</time></test></testsExecutionTime><patchExecutionTime>6978ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local hK is replaced by local z to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>21</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>local k is replaced by local m to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7334ms</time></test></testsExecutionTime><patchExecutionTime>7419ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local k is replaced by local m to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>49</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local j is replaced by local m to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>50</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local m is replaced by local k to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local hK is replaced by local z to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>55</index><block>22</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>local j is replaced by local m to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7413ms</time></test></testsExecutionTime><patchExecutionTime>7496ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>60</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local xNormSqr is replaced by local c to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>61</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local c is replaced by local xNormSqr to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local c is replaced by local xNormSqr to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>65</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local xNormSqr is replaced by local c to be defined</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>23</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local hK is replaced by local z to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>73</index><block>23</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>local k is replaced by local m to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>6936ms</time></test></testsExecutionTime><patchExecutionTime>6983ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>93</index><block>25</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>local k is replaced by local m to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7634ms</time></test></testsExecutionTime><patchExecutionTime>7711ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>49</index><block>21</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>local j is replaced by local k to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8565ms</time></test></testsExecutionTime><patchExecutionTime>8639ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>50</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local m is replaced by local j to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>55</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>local j is replaced by local k to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>34</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>access to local hK is replaced by access to field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>54</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>access to local hK is replaced by access to field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>72</index><block>23</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>access to local hK is replaced by access to field main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>34</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>access to local hK is replaced by access to field secondary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>202</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>54</index><block>22</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>access to local hK is replaced by access to field secondary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7746ms</time></test></testsExecutionTime><patchExecutionTime>7815ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>72</index><block>23</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>access to local hK is replaced by access to field secondary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8277ms</time></test></testsExecutionTime><patchExecutionTime>8344ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to cosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to cosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to sinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to sinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to tanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to tanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to acosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to acosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to asinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to asinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to atanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to atanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to signum</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to signum</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to nextUp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to nextUp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to expm1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to sqrt with a call to expm1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>25</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to main is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to secondary is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to main is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>355</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>25</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to main is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to secondary is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to main is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>355</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>193</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>198</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>25</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>199</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>32</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to main is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>92</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>the access to secondary is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>350</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to main is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>355</index><block>39</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>the access to householderVectors is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::sqrt with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>20</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8716ms</time></test></testsExecutionTime><patchExecutionTime>8775ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>51</index><block>21</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>6799ms</time></test></testsExecutionTime><patchExecutionTime>6861ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>79</index><block>23</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><block>22</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7259ms</time></test></testsExecutionTime><patchExecutionTime>7319ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>345</index><block>38</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7619ms</time></test></testsExecutionTime><patchExecutionTime>7675ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>20</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8113ms</time></test></testsExecutionTime><patchExecutionTime>8173ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>200</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>74</index><block>23</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>77</index><block>23</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>99</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>352</index><block>39</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7930ms</time></test></testsExecutionTime><patchExecutionTime>8003ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>357</index><block>39</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8499ms</time></test></testsExecutionTime><patchExecutionTime>8566ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>361</index><block>39</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8169ms</time></test></testsExecutionTime><patchExecutionTime>8230ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>82</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>removed negation</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>20</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>9685ms</time></test></testsExecutionTime><patchExecutionTime>9755ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>21</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7578ms</time></test></testsExecutionTime><patchExecutionTime>7646ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>63</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>64</index><block>22</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>Replaced double addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>75</index><block>23</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7478ms</time></test></testsExecutionTime><patchExecutionTime>7539ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>353</index><block>39</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7893ms</time></test></testsExecutionTime><patchExecutionTime>7961ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>358</index><block>39</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8261ms</time></test></testsExecutionTime><patchExecutionTime>8324ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>362</index><block>39</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8128ms</time></test></testsExecutionTime><patchExecutionTime>8190ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>51</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>23</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>81</index><block>24</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>86</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::sqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>101</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>207</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>101</index><block>25</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>21</index><block>20</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>51</index><block>21</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>79</index><block>23</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>21</index><block>20</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07832604499879574</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8001ms</time></test></testsExecutionTime><patchExecutionTime>8760ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>201</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>51</index><block>21</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08058229640253803</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7510ms</time></test></testsExecutionTime><patchExecutionTime>7566ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>79</index><block>23</block><killingTests/><suspValue>0.08058229640253803</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>TriDiagonalTransformer.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.TriDiagonalTransformer</mutatedClass><mutatedMethod>transform</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>345</index><block>38</block><killingTests/><suspValue>0.07832604499879574</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>replaced call to getColumnDimension with a call to getRowDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>the call to org.apache.commons.math3.linear.AnyMatrix::getColumnDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>19</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03916302249939787</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>19</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03916302249939787</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>96ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>20</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03916302249939787</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>97ms</time></test></testsExecutionTime><patchExecutionTime>171ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>20</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03916302249939787</suspValue><description>removed call to org/apache/commons/math3/linear/AnyMatrix::getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>19</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03916302249939787</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>101ms</time></test></testsExecutionTime><patchExecutionTime>176ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>20</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>19</block><killingTests/><suspValue>0.03916302249939787</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkColumnIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>484</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>20</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03916302249939787</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>14</block><killingTests/><suspValue>0.040225899335456484</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>14</block><killingTests/><suspValue>0.040225899335456484</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>455</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>14</block><killingTests/><suspValue>0.040225899335456484</suspValue><description>replaced call to checkRowIndex with a call to checkColumnIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>10</index><block>14</block><killingTests/><suspValue>0.040225899335456484</suspValue><description>replaced call to checkColumnIndex with a call to checkRowIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>5</index><block>14</block><killingTests/><suspValue>0.040225899335456484</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::checkRowIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkMatrixIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;II)V</methodDescription><lineNumber>456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>10</index><block>14</block><killingTests/><suspValue>0.040225899335456484</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::checkColumnIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>replaced call to getRowDimension with a call to getColumnDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to org.apache.commons.math3.linear.AnyMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>7</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>96ms</time></test></testsExecutionTime><patchExecutionTime>211ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>111ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>97ms</time></test></testsExecutionTime><patchExecutionTime>170ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>16</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>removed call to org/apache/commons/math3/linear/AnyMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>177ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>97ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>16</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>15</block><killingTests/><suspValue>0.03919309008348103</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>checkRowIndex</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/AnyMatrix;I)V</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>16</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03919309008348103</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>168ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetric</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;D)Z</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>13</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced call to org/apache/commons/math3/linear/MatrixUtils::isSymmetricInternal with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetric</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;D)Z</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>7</index><block>13</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced boolean return with false for org/apache/commons/math3/linear/MatrixUtils::isSymmetric</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetric</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;D)Z</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>7</index><block>13</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced boolean return with true for org/apache/commons/math3/linear/MatrixUtils::isSymmetric</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetric</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;D)Z</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>13</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetric</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;D)Z</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>13</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::isSymmetricInternal</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetric</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;D)Z</methodDescription><lineNumber>440</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>13</block><killingTests/><suspValue>0.07905694150420949</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>34</index><block>4</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>local i is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>4</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>local rows is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>39</index><block>5</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>local i is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>44</index><block>5</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>local j is replaced by local rows to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>45</index><block>5</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>local rows is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>50</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08084520834544433</suspValue><description>local i is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>109ms</time></test></testsExecutionTime><patchExecutionTime>181ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>51</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08084520834544433</suspValue><description>local j is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>118ms</time></test></testsExecutionTime><patchExecutionTime>185ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>57</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08084520834544433</suspValue><description>local j is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>181ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>58</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08084520834544433</suspValue><description>local i is replaced by local rows to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>113ms</time></test></testsExecutionTime><patchExecutionTime>181ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>63</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local mij is replaced by local relativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>64</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local mji is replaced by local relativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>67</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local mij is replaced by local relativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local mji is replaced by local relativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>72</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local relativeTolerance is replaced by local mij to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>44</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>125ms</time></test></testsExecutionTime><patchExecutionTime>212ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>45</index><block>5</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>local rows is replaced by local j to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>50</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>51</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>57</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local j is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>58</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local i is replaced by local j to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>63</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local mij is replaced by local mji to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>64</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local mji is replaced by local mij to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>67</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local mij is replaced by local mji to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local mji is replaced by local mij to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>72</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>local relativeTolerance is replaced by local mji to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to sqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to max with a call to log</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to cosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to max with a call to pow</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>68</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>29684ms</time></test></testsExecutionTime><patchExecutionTime>29846ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to sinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to max with a call to atan2</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to tanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to max with a call to nextAfter</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to acosh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to max with a call to min</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to asinh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to max with a call to hypot</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to atanh</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to max with a call to IEEEremainder</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to signum</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to max with a call to copySign</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to nextUp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to abs with a call to exp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getColumnDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>52</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>59</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>the call to getRowDimension()I is guarded returning default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>the call to getColumnDimension()I is guarded returning default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>52</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>the call to getEntry(II)D is guarded returning default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>59</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>the call to getEntry(II)D is guarded returning default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>the call to getRowDimension()I is guarded returning local raiseException</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>the call to getColumnDimension()I is guarded returning local raiseException</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>401</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>52</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>the call to getEntry(II)D is guarded returning local raiseException</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>402</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>59</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>the call to getEntry(II)D is guarded returning local raiseException</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::abs with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>replaced call to org/apache/commons/math3/util/FastMath::max with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>104</index><block>12</block><killingTests/><suspValue>0.079555728417573</suspValue><description>replaced boolean return with false for org/apache/commons/math3/linear/MatrixUtils::isSymmetricInternal</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>4</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>46</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>137ms</time></test></testsExecutionTime><patchExecutionTime>208ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>75</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>95</index><block>10</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>99</index><block>11</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>124ms</time></test></testsExecutionTime><patchExecutionTime>190ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>4</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>5</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>12</block><killingTests/><suspValue>0.079555728417573</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>182ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>65</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>Replaced double subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>4</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>46</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>111ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>75</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>391</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getRowDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getColumnDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>52</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>402</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>66</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>removed call to org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>392</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>36</index><block>4</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>46</index><block>5</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>75</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>3233ms</time></test></testsExecutionTime><patchExecutionTime>3312ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>46</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07856742013183861</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>123ms</time></test></testsExecutionTime><patchExecutionTime>189ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>403</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>75</index><block>6</block><killingTests/><suspValue>0.08084520834544433</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>413</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>104</index><block>12</block><killingTests/><suspValue>0.079555728417573</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>MatrixUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.MatrixUtils</mutatedClass><mutatedMethod>isSymmetricInternal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;DZ)Z</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>99</index><block>11</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>114ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>120ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>access to field checker is replaced by access to local checker</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>107ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.10425720702853739</suspValue><description>Removed assignment to member variable evaluations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>171ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>0</block><killingTests/><suspValue>0.10425720702853739</suspValue><description>Removed assignment to member variable checker</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>7</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded using field target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>7</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded using field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.target is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getStartPoint()[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>118ms</time></test></testsExecutionTime><patchExecutionTime>179ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>7</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.weightMatrix is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getWeight()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.target is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getTarget()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.target is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getTargetRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.target is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getWeightRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>107ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to target with an access to weight</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to target with an access to start</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getColumnDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>7</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>7</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>7</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>8</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>111ms</time></test></testsExecutionTime><patchExecutionTime>174ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>15</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>checkParameters</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>15</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>85ms</time></test></testsExecutionTime><patchExecutionTime>142ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded using field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.weightMatrix is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getWeight()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>130ms</time></test></testsExecutionTime><patchExecutionTime>193ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to copy with a call to transpose</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>27ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::copy</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>127ms</time></test></testsExecutionTime><patchExecutionTime>193ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::getWeight</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::getWeight to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>109ms</time></test></testsExecutionTime><patchExecutionTime>180ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to org/apache/commons/math3/linear/RealMatrix::copy with receiver</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>241</lineNumber><mutator>MethodNameMutator_0</mutator><index>33</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to factory method org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.PointVectorValuePair using ([D[D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>241</lineNumber><mutator>MethodNameMutator_4</mutator><index>33</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to factory method org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.PointVectorValuePair using ([D[DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to evaluations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to evaluations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to evaluations is guarded using field evaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to evaluations is guarded using field evaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>16</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>access to field function is replaced by access to local f</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>access to local f is replaced by access to field function</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to setMaximalCount with a call to incrementCount</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>70ms</time></test></testsExecutionTime><patchExecutionTime>137ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to resetCount with a call to incrementCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to checkParameters with a call to setUp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to setUp with a call to checkParameters</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>109ms</time></test></testsExecutionTime><patchExecutionTime>182ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>33</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to evaluations is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to evaluations is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to setMaximalCount(I)V is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to resetCount()V is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to checkParameters()V is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to setUp()V is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>241</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>33</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to doOptimize()Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>231</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.util.Incrementor::resetCount()V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>235</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>21</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::parseOptimizationData([Lorg/apache/commons/math3/optimization/OptimizationData;)V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::checkParameters()V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>239</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::setUp()V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::doOptimize</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::optimizeInternal</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>34</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::optimizeInternal to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>231</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::setMaximalCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor::resetCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>235</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::parseOptimizationData</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::checkParameters</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>239</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>29</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::setUp</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>114ms</time></test></testsExecutionTime><patchExecutionTime>177ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>16</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable function</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to target with an access to weight</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>61</index><block>12</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to start with an access to target</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>114ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to target with an access to start</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>106ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>61</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to start with an access to weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.105999788000636</suspValue><description>local arr$ is replaced by local optData to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local i$ is replaced by local len$ to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local len$ is replaced by local i$ to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>16</index><block>7</block><killingTests/><suspValue>0.105999788000636</suspValue><description>local arr$ is replaced by local optData to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>7</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local i$ is replaced by local len$ to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>109ms</time></test></testsExecutionTime><patchExecutionTime>170ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>8</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.Target::getTarget()[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>10</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.Weight::getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>60</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.InitialGuess::getInitialGuess()[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>8</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>10</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>60</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getInitialGuess()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>30</index><block>8</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>45</index><block>10</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>60</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getInitialGuess()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>30</index><block>8</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>45</index><block>10</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>60</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getInitialGuess()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>30</index><block>8</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>45</index><block>10</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>60</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getInitialGuess()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>30</index><block>8</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>45</index><block>10</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>60</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getInitialGuess()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>67</index><block>13</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>106ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>106ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>162ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>11</block><killingTests/><suspValue>0.105999788000636</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>8</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/Target::getTarget</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>79ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>10</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/Weight::getWeight</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>175ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/InitialGuess::getInitialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>176ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>166ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>54</index><block>11</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>24</index><block>7</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>54</index><block>11</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>15</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>107ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>344</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>8</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable target</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>99ms</time></test></testsExecutionTime><patchExecutionTime>165ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>348</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>46</index><block>10</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable weightMatrix</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>parseOptimizationData</mutatedMethod><methodDescription>([Lorg/apache/commons/math3/optimization/OptimizationData;)V</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>61</index><block>12</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable start</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weight is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded using field target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weight is guarded using field target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded using field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.target is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getStartPoint()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.weight is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getStartPoint()[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>118ms</time></test></testsExecutionTime><patchExecutionTime>177ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>27</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.weightMatrix is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getWeight()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.target is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getTarget()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.weight is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getTarget()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.target is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getTargetRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.weight is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getTargetRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.target is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getWeightRef()[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>111ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.weight is replaced by the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::getWeightRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to target with an access to weight</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>85ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to weight with an access to target</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to weight with an access to target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to target with an access to start</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to weight with an access to start</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>115ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced access to weight with an access to start</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>local dim is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>118ms</time></test></testsExecutionTime><patchExecutionTime>184ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getEntry(II)D is guarded using default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weight is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weight is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>27</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>321</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weight is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>27</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>30</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>30</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>30</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>30</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getEntry(II)D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>134ms</time></test></testsExecutionTime><patchExecutionTime>191ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>34</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>324</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getEntry</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>323</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>55ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseAbstractMultivariateVectorOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>322</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable weight</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/util/Collection;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>access to field oldOptimizer is replaced by access to local optimizer</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>97ms</time></test></testsExecutionTime><patchExecutionTime>159ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>20</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>removed call to java/util/ArrayList::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable oldOptimizer</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>71</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable optimizer</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>21</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.19245008972987526</suspValue><description>Removed assignment to member variable observations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>37ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the access to observations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the access to observations is guarded using field observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>local weight is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>local x is replaced by local weight to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>local y is replaced by local weight to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>local weight is replaced by local y to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to add with a call to contains</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>58ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to add with a call to remove</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>170ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2</suspValue><description>replaced call to add with a call to equals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the call to java.util.List::add(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the access to observations is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the access to observations is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the access to observations is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>11</index><block>1</block><killingTests/><suspValue>0.2</suspValue><description>the call to add(Ljava/lang/Object;)Z is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2</suspValue><description>removed call to org/apache/commons/math3/optimization/fitting/WeightedObservedPoint::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>58ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>addObservedPoint</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2</suspValue><description>removed call to java/util/List::add</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>94ms</time></test></testsExecutionTime><patchExecutionTime>164ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>MethodNameMutator_0</mutator><index>71</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to factory method org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.PointVectorValuePair using ([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>MethodNameMutator_4</mutator><index>71</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to factory method org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer.optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.PointVectorValuePair using ([D[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutatorSecondPhase_0</mutator><index>71</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair; with a call to optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>81ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutatorSecondPhase_1</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced call to optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair; with a call to optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>56</index><block>5</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to optimizer is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>61</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to oldOptimizer is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded using field observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded using field observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded using field observations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>56</index><block>5</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to optimizer is guarded using field optimizer</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>61</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to oldOptimizer is guarded using field oldOptimizer</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>35</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local target is replaced by local initialGuess to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local i is replaced by local maxEval to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>42</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local weights is replaced by local initialGuess to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>81ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>43</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local i is replaced by local maxEval to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>66ms</time></test></testsExecutionTime><patchExecutionTime>126ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>62</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local maxEval is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>68</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local target is replaced by local initialGuess to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>62ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>69</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local weights is replaced by local initialGuess to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>115ms</time></test></testsExecutionTime><patchExecutionTime>176ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local initialGuess is replaced by local target to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>35</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local target is replaced by local weights to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>42</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local weights is replaced by local target to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>68</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local target is replaced by local weights to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>69</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local weights is replaced by local target to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>70</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local initialGuess is replaced by local weights to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>4436ms</time></test></testsExecutionTime><patchExecutionTime>4451ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to size with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>4723ms</time></test></testsExecutionTime><patchExecutionTime>4784ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced call to getY with a call to getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced call to getWeight with a call to getX</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced call to getY with a call to getX</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced call to getWeight with a call to getY</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to java.util.List::size()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to org.apache.commons.math3.optimization.fitting.WeightedObservedPoint::getY()D is guarded using default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to org.apache.commons.math3.optimization.fitting.WeightedObservedPoint::getWeight()D is guarded using default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to org.apache.commons.math3.optimization.DifferentiableMultivariateVectorOptimizer::optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>56</index><block>5</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to optimizer is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>61</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to oldOptimizer is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>179</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to observations is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>187</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>56</index><block>5</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to optimizer is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>61</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to oldOptimizer is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to size()I is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to getY()D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to getWeight()D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>5</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to size()I is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to size()I is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to getY()D is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to getWeight()D is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to size()I is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to getY()D is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to getWeight()D is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>71</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to optimize(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded returning local target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>67</index><block>6</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/optimization/fitting/CurveFitter$OldTheoreticalValuesFunction::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>49</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>82ms</time></test></testsExecutionTime><patchExecutionTime>149ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>178</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>97ms</time></test></testsExecutionTime><patchExecutionTime>155ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>57</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>96ms</time></test></testsExecutionTime><patchExecutionTime>163ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>69ms</time></test></testsExecutionTime><patchExecutionTime>127ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>177</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to java/util/List::size</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>81ms</time></test></testsExecutionTime><patchExecutionTime>145ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>180</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/optimization/fitting/WeightedObservedPoint::getY</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>181</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/optimization/fitting/WeightedObservedPoint::getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>189</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>71</index><block>6</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer::optimize</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>154ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>57</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>155ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>187</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>57</index><block>5</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>182</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>49</index><block>4</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>Removed increment 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>84ms</time></test></testsExecutionTime><patchExecutionTime>158ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>84ms</time></test></testsExecutionTime><patchExecutionTime>153ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>84ms</time></test></testsExecutionTime><patchExecutionTime>149ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>the call to org.apache.commons.math3.optimization.fitting.CurveFitter::fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>the call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>the call to fit(ILorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded returning local initialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>replaced call to org/apache/commons/math3/optimization/fitting/CurveFitter::fit with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>63ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>Substituted 2147483647 with -2147483648</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2182178902359924</suspValue><description>removed call to org/apache/commons/math3/optimization/fitting/CurveFitter::fit</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>68ms</time></test></testsExecutionTime><patchExecutionTime>132ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/fitting/CurveFitter::fit</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D</methodDescription><lineNumber>153</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.2182178902359924</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/fitting/CurveFitter::fit to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>MethodNameMutator_0</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to factory method org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.PointVectorValuePair using ([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>MethodNameMutator_2</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to factory method org.apache.commons.math3.analysis.FunctionUtils.toMultivariateDifferentiableVectorFunction(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction; is replaced by an instantiation of type org.apache.commons.math3.optimization.general.StraightLineProblem using (D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>MethodNameMutator_4</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to factory method org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.PointVectorValuePair using ([D[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>186ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local target is replaced by local weights to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local weights is replaced by local target to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>27</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local startPoint is replaced by local target to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local target is replaced by local startPoint to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>111ms</time></test></testsExecutionTime><patchExecutionTime>183ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>local weights is replaced by local startPoint to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>88ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>27</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>local startPoint is replaced by local weights to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>access to local maxEval is replaced by access to field cols</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local target is replaced by access to field point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>95ms</time></test></testsExecutionTime><patchExecutionTime>165ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local weights is replaced by access to field point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>27</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local startPoint is replaced by access to field point</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>access to local maxEval is replaced by access to field rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local target is replaced by access to field objective</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local weights is replaced by access to field objective</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>27</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local startPoint is replaced by access to field objective</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>access to local maxEval is replaced by access to field jacobianEvaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local target is replaced by access to field weightedResiduals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>94ms</time></test></testsExecutionTime><patchExecutionTime>166ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>20</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local weights is replaced by access to field weightedResiduals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>27</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>access to local startPoint is replaced by access to field weightedResiduals</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>103ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer::optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the call to optimizeInternal(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>14</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/optimization/Target::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>21</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/optimization/Weight::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>96ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>28</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/optimization/InitialGuess::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>Substituted 3 with 4</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>10</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>91ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>97ms</time></test></testsExecutionTime><patchExecutionTime>159ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/analysis/FunctionUtils::toMultivariateDifferentiableVectorFunction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::optimizeInternal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>104ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>31</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::optimize</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimize</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;[D[D[D)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>423</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::optimize to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>MethodNameMutator_0</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the call to factory method org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.PointVectorValuePair using ([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>174ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>MethodNameMutator_1</mutator><index>6</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the call to factory method org.apache.commons.math3.analysis.FunctionUtils.toDifferentiableMultivariateVectorFunction(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction; is replaced by an instantiation of type org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction using (Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>MethodNameMutator_4</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the call to factory method org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer.optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is replaced by an instantiation of type org.apache.commons.math3.optimization.PointVectorValuePair using ([D[DZ)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>114ms</time></test></testsExecutionTime><patchExecutionTime>183ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>access to local maxEval is replaced by access to field cols</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>access to local f is replaced by access to field jF</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>access to local maxEval is replaced by access to field rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>access to local maxEval is replaced by access to field jacobianEvaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to optimizeInternal(ILorg/apache/commons/math3/analysis/MultivariateVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/analysis/FunctionUtils::toDifferentiableMultivariateVectorFunction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::optimizeInternal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::optimizeInternal</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>optimizeInternal</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;[Lorg/apache/commons/math3/optimization/OptimizationData;)Lorg/apache/commons/math3/optimization/PointVectorValuePair;</methodDescription><lineNumber>496</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::optimizeInternal to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>MethodNameMutator_2</mutator><index>24</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to factory method org.apache.commons.math3.analysis.FunctionUtils.toMultivariateDifferentiableVectorFunction(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction; is replaced by an instantiation of type org.apache.commons.math3.optimization.general.StraightLineProblem using (D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>43</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to point is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>43</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to point is guarded using field point</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>43</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer.point is replaced by the call to org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer::guessParametersErrors()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to jacobianEvaluations with an access to cols</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>31</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to point with an access to objective</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>38</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to rows with an access to cols</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>43</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to point with an access to objective</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>45</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to cols with an access to rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>9</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to jacobianEvaluations with an access to rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>31</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to point with an access to weightedResiduals</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>38</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to rows with an access to jacobianEvaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>43</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to point with an access to weightedResiduals</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>45</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced access to cols with an access to jacobianEvaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to getWeight with a call to getWeightSquareRoot</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>139ms</time></test></testsExecutionTime><patchExecutionTime>212ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>30</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to getStartPoint with a call to guessParametersErrors</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>36</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to getTarget with a call to guessParametersErrors</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer::getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>16</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer::squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer::getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>30</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer::getStartPoint()[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>36</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer::getTarget()[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>43</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to point is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>43</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to point is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>43</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to point is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to setUp()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>30</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getStartPoint()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>36</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to setUp()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>16</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>30</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getStartPoint()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>36</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to setUp()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>16</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>30</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getStartPoint()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>36</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to setUp()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>16</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>30</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getStartPoint()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>36</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to setUp()V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getWeight()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>16</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to squareRoot(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getObjectiveFunction()Lorg/apache/commons/math3/analysis/MultivariateVectorFunction; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>30</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getStartPoint()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>36</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getTarget()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>502</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.optimization.direct.BaseAbstractMultivariateVectorOptimizer::setUp()V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='71'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testBevington(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::squareRoot with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testQRColumnsPermutation(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testInconsistentSizes1(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackChebyquad(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>24ms</time></test><test><name>org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest.testTrivial(org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testInconsistentSizes2(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.CurveFitterTest.testMath304(org.apache.commons.math3.optimization.fitting.CurveFitterTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.CurveFitterTest.testMath303(org.apache.commons.math3.optimization.fitting.CurveFitterTest)</name><time>2ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit01(org.apache.commons.math3.optimization.fitting.GaussianFitterTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testNoDependency(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest.testNoOptimum(org.apache.commons.math3.optimization.MultivariateDifferentiableVectorMultiStartOptimizerTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest.testComputeSigma(org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest)</name><time>20ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testKirby2(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>19ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testNonInvertible(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testNoError(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>3572ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingBadInit(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackOsborne1(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>16ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackHelicalValley(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>11ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testCircleFittingBadInit(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFitting2(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>14ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testOneSet(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackJennrichSampson(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testIllConditioned(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackPowellSingular(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>40ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackFreudensteinRoth(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes2(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>22ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testMoreEstimatedParametersSimple(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testMath798(org.apache.commons.math3.optimization.fitting.GaussianFitterTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testMaxEvaluations(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>25ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testNoDependency(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.CurveFitterTest.testMath372(org.apache.commons.math3.optimization.fitting.CurveFitterTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentSizes1(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest.testGetRMS(org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest)</name><time>13ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testMoreEstimatedParametersUnsorted(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation.testParametersErrorMonteCarloParameters(org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTestValidation)</name><time>29ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testInconsistentEquations(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackOsborne2(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>30ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testMath798(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testNonInvertible(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testTwoSets(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testTwoSets(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>3ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackBard(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>19ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testFit(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackBox3Dimensional(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>22ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testUnsorted(org.apache.commons.math3.optimization.fitting.HarmonicFitterTest)</name><time>11ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testInitialGuess(org.apache.commons.math3.optimization.fitting.HarmonicFitterTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest.testGetChiSquare(org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizerTest)</name><time>28ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit06(org.apache.commons.math3.optimization.fitting.GaussianFitterTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testInconsistentEquations(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit07(org.apache.commons.math3.optimization.fitting.GaussianFitterTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit05(org.apache.commons.math3.optimization.fitting.GaussianFitterTest)</name><time>44ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testBevington(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>11ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackRosenbrok(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testTrivial(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testCircleFittingGoodInit(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>34ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testTrivial(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testRedundantEquations(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>8ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testRedundantEquations(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testControlParameters(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackLinearRank1ZeroColsAndRows(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>5ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testQRColumnsPermutation(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackLinearRank1(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>4ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.GaussianFitterTest.testFit04(org.apache.commons.math3.optimization.fitting.GaussianFitterTest)</name><time>10ms</time></test><test><name>org.apache.commons.math3.optimization.general.MinpackTest.testMinpackLinearFullRank(org.apache.commons.math3.optimization.general.MinpackTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest.testOneSet(org.apache.commons.math3.optimization.general.GaussNewtonOptimizerTest)</name><time>6ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testCircleFittingGoodInit(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>14ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.test1PercentError(org.apache.commons.math3.optimization.fitting.HarmonicFitterTest)</name><time>9ms</time></test><test><name>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest.testIllConditioned(org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizerTest)</name><time>7ms</time></test><test><name>org.apache.commons.math3.optimization.fitting.HarmonicFitterTest.testNoError(org.apache.commons.math3.optimization.fitting.HarmonicFitterTest)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>4445ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::getWeight</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>126ms</time></test></testsExecutionTime><patchExecutionTime>219ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::squareRoot</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>66ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::getObjectiveFunction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/analysis/FunctionUtils::toMultivariateDifferentiableVectorFunction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>30</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::getStartPoint</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>36</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::getTarget</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>502</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/optimization/direct/BaseAbstractMultivariateVectorOptimizer::setUp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable jacobianEvaluations</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>508</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>17</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable weightMatrixSqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>516</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable jF</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>519</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>31</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable point</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>520</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>38</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable rows</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>setUp</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>45</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable cols</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>47ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>91ms</time></test></testsExecutionTime><patchExecutionTime>176ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>125ms</time></test></testsExecutionTime><patchExecutionTime>212ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>136ms</time></test></testsExecutionTime><patchExecutionTime>218ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>129ms</time></test></testsExecutionTime><patchExecutionTime>216ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>124ms</time></test></testsExecutionTime><patchExecutionTime>205ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[DD)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>131ms</time></test></testsExecutionTime><patchExecutionTime>211ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>67ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;D)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/linear/RealMatrix;)V with a call to &#60;init&#62;([D[D)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>52ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>5</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>access to local m is replaced by access to field weightMatrixSqrt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>121ms</time></test></testsExecutionTime><patchExecutionTime>190ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>5</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to the local m is replaced a call m.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to getSquareRoot with a call to getV</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to getSquareRoot with a call to getD</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to getSquareRoot with a call to getVT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.linear.EigenDecomposition::getSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning local m</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getSquareRoot()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning field weightMatrixSqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/linear/EigenDecomposition::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>125ms</time></test></testsExecutionTime><patchExecutionTime>188ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/linear/EigenDecomposition::getSquareRoot</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>12</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::squareRoot</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractLeastSquaresOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.AbstractLeastSquaresOptimizer</mutatedClass><mutatedMethod>squareRoot</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>4</block><killingTests/><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/general/AbstractLeastSquaresOptimizer::squareRoot to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>18</index><block>5</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>18</index><block>5</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>18</index><block>5</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>18</index><block>5</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>7</index><block>2</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>18</index><block>5</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>access to local x is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>3</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>4</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>removed negation</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>5</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.023137240669137377</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>19560ms</time></test></testsExecutionTime><patchExecutionTime>19655ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>abs</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>3017</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>5</block><killingTests/><suspValue>0.023137240669137377</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::abs</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>3</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>local b is replaced by local a to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>33</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3548</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>48</index><block>14</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>local a is replaced by local b to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>13</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>14</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>23</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>24</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local b is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>33</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>38</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local bits is replaced by access to field HEX_40000000</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3548</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>48</index><block>14</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>13</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>14</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>23</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>24</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local b is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>33</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3545</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>38</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local bits is replaced by access to field MASK_30BITS</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3548</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>48</index><block>14</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local a is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local b is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>13</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local a is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>14</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local b is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>23</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local a is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>24</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local b is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>33</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3548</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>48</index><block>14</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>13</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>14</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>23</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>24</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local b is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>33</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3548</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>48</index><block>14</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>13</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>14</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>23</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>24</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>access to local b is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>33</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3548</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>48</index><block>14</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3544</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>34</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>replaced call to doubleToRawLongBits with a call to doubleToLongBits</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>Substituted -9223372036854775808 with -9223372036854775807</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3544</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>removed call to java/lang/Double::doubleToRawLongBits</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>49</index><block>14</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>26</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>41</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3539</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>26</index><block>10</block><killingTests/><suspValue>0.04315318520021031</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3545</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>41</index><block>12</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3532</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.03340765523905305</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3535</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>8</block><killingTests/><suspValue>0.034179296351233165</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>max</mutatedMethod><methodDescription>(DD)D</methodDescription><lineNumber>3548</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>49</index><block>14</block><killingTests/><suspValue>0.04327423224079154</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>access to local a is replaced by access to field PI</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>access to local a is replaced by access to field E</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>access to local a is replaced by access to field LOG_MAX_VALUE</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_3</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>access to local a is replaced by access to field LN_2_A</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_4</mutator><index>3</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>access to local a is replaced by access to field LN_2_B</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to sin</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to cos</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to tan</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to asin</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to acos</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to atan</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to toRadians</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to toDegrees</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to exp</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to sqrt with a call to log</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced call to java/lang/Math::sqrt with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>removed call to java/lang/Math::sqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/util/FastMath::sqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FastMath.java</sourceFile><mutatedClass>org.apache.commons.math3.util.FastMath</mutatedClass><mutatedMethod>sqrt</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.02400768368836718</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/util/FastMath::sqrt</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>33</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the access to isSymmetric is guarded using value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>44</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>33</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.079555728417573</suspValue><description>the access to field org.apache.commons.math3.linear.EigenDecomposition.isSymmetric is replaced by the call to org.apache.commons.math3.linear.EigenDecomposition::hasComplexEigenvalues()Z</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>1969ms</time></test></testsExecutionTime><patchExecutionTime>1999ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>replaced access to EPSILON with an access to SAFE_MIN</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>45</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>replaced call to getQ with a call to getQT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>45</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>replaced call to getQ with a call to getT</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getColumnDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>45</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getQ()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>46</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::getData()[[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>33</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the access to isSymmetric is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>44</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>33</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the access to isSymmetric is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>44</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>33</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the access to isSymmetric is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>44</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>39</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>45</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getQ()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>46</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>47</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to findEigenVectors([[D)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>39</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>45</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getQ()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>46</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>47</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to findEigenVectors([[D)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>39</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>45</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getQ()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>46</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>47</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to findEigenVectors([[D)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>39</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>45</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getQ()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>46</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>47</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to findEigenVectors([[D)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getRowDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>the call to getColumnDimension()I is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>39</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>45</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getQ()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>46</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getData()[[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>47</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to findEigenVectors([[D)V is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>39</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to org.apache.commons.math3.linear.EigenDecomposition::transformToTridiagonal(Lorg/apache/commons/math3/linear/RealMatrix;)V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>47</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to org.apache.commons.math3.linear.EigenDecomposition::findEigenVectors([[D)V is guarded</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>Substituted 30 with 31</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>Substituted 10 with 11</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>Replaced double multiplication with division</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>34</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getRowDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getColumnDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.079555728417573</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::isSymmetric</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>26147ms</time></test></testsExecutionTime><patchExecutionTime>26220ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>45</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>removed call to org/apache/commons/math3/linear/TriDiagonalTransformer::getQ</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8215ms</time></test></testsExecutionTime><patchExecutionTime>8286ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::getData</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>34</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>34</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>39</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>removed call to org/apache/commons/math3/linear/EigenDecomposition::transformToTridiagonal</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2081ms</time></test></testsExecutionTime><patchExecutionTime>2150ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>47</index><block>1</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>removed call to org/apache/commons/math3/linear/EigenDecomposition::findEigenVectors</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07856742013183861</suspValue><description>Removed assignment to member variable maxIter</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>0</block><killingTests/><suspValue>0.079555728417573</suspValue><description>Removed assignment to member variable isSymmetric</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded using field transformer</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded using field transformer</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>replaced access to main with an access to secondary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>replaced access to secondary with an access to main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>replaced access to main with an access to realEigenvalues</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>replaced access to secondary with an access to realEigenvalues</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>replaced access to main with an access to imagEigenvalues</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>replaced access to secondary with an access to imagEigenvalues</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>access to local matrix is replaced by access to field cachedV</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2099ms</time></test></testsExecutionTime><patchExecutionTime>2165ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>access to local matrix is replaced by access to field cachedD</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>1934ms</time></test></testsExecutionTime><patchExecutionTime>1960ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_2</mutator><index>6</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>access to local matrix is replaced by access to field cachedVt</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>1985ms</time></test></testsExecutionTime><patchExecutionTime>2010ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>561</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>6</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to the local matrix is replaced a call matrix.copy()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getMainDiagonalRef()[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to org.apache.commons.math3.linear.TriDiagonalTransformer::getSecondaryDiagonalRef()[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>13</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>20</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the access to transformer is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getMainDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getSecondaryDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getMainDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getSecondaryDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getMainDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>21</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getSecondaryDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getMainDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getSecondaryDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getMainDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>21</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>the call to getSecondaryDiagonalRef()[D is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>removed call to org/apache/commons/math3/linear/TriDiagonalTransformer::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2026ms</time></test></testsExecutionTime><patchExecutionTime>2094ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>removed call to org/apache/commons/math3/linear/TriDiagonalTransformer::getMainDiagonalRef</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>removed call to org/apache/commons/math3/linear/TriDiagonalTransformer::getSecondaryDiagonalRef</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>561</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>8</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.08032193289024989</suspValue><description>Removed assignment to member variable transformer</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8122ms</time></test></testsExecutionTime><patchExecutionTime>8188ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>562</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>Removed assignment to member variable main</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>EigenDecomposition.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.EigenDecomposition</mutatedClass><mutatedMethod>transformToTridiagonal</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/linear/RealMatrix;)V</methodDescription><lineNumber>563</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>22</index><block>3</block><killingTests/><suspValue>0.08032193289024989</suspValue><description>Removed assignment to member variable secondary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>the access to coefficients is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_1</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>the access to coefficients is guarded using local c</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>the access to field org.apache.commons.math3.analysis.polynomials.PolynomialFunction.coefficients is replaced by the call to org.apache.commons.math3.analysis.polynomials.PolynomialFunction::getCoefficients()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>47</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11396057645963795</suspValue><description>access to field coefficients is replaced by access to local c</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>access to field coefficients is replaced by access to local c</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>the access to coefficients is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>the access to coefficients is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>53</index><block>5</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>the access to coefficients is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>28</index><block>2</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>3</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>Substituted 1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>3</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11396057645963795</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11396057645963795</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>3</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11396057645963795</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>3</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>0</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>3</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11396057645963795</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>3</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>29</index><block>2</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>56</index><block>5</block><killingTests/><suspValue>0.11396057645963795</suspValue><description>removed call to java/lang/System::arraycopy</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>78</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>47</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.11396057645963795</suspValue><description>Removed assignment to member variable coefficients</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>23ms</time></test></testsExecutionTime><patchExecutionTime>79ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>replaced call to checkNotNull(Ljava/lang/Object;)V with a call to checkNotNull(Ljava/lang/Object;Lorg/apache/commons/math3/exception/util/Localizable;[Ljava/lang/Object;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>36</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>local j is replaced by local n to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>54</index><block>11</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>local result is replaced by local argument to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>9</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>changed conditional boundary</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>50</index><block>10</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>9</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>Substituted 2 with 3</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>26</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>112ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>55</index><block>11</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/analysis/polynomials/PolynomialFunction::evaluate</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>7</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>7</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>37</index><block>9</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>37</index><block>9</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.12909944487358055</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>55</index><block>11</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/analysis/polynomials/PolynomialFunction::evaluate</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>4</index><block>7</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>removed call to org/apache/commons/math3/util/MathUtils::checkNotNull</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>evaluate</mutatedMethod><methodDescription>([DD)D</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>50</index><block>10</block><killingTests/><suspValue>0.12909944487358055</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>the access to coefficients is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>the access to coefficients is guarded using field coefficients</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>the access to field org.apache.commons.math3.analysis.polynomials.PolynomialFunction.coefficients is replaced by the call to org.apache.commons.math3.analysis.polynomials.PolynomialFunction::getCoefficients()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToMethodCallMutator_0</mutator><index>3</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>the access to the local this is replaced a call this.negate()</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>the access to coefficients is guarded returning default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>the access to coefficients is guarded returning local x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>replaced call to org/apache/commons/math3/analysis/polynomials/PolynomialFunction::evaluate with argument</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>removed call to org/apache/commons/math3/analysis/polynomials/PolynomialFunction::evaluate</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/analysis/polynomials/PolynomialFunction::value</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFunction.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.polynomials.PolynomialFunction</mutatedClass><mutatedMethod>value</mutatedMethod><methodDescription>(D)D</methodDescription><lineNumber>94</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>6</block><killingTests/><suspValue>0.13608276348795434</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/analysis/polynomials/PolynomialFunction::value</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>access to field data is replaced by access to local d</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>Removed assignment to member variable data</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>104ms</time></test></testsExecutionTime><patchExecutionTime>176ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>103ms</time></test></testsExecutionTime><patchExecutionTime>181ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>101ms</time></test></testsExecutionTime><patchExecutionTime>183ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>103ms</time></test></testsExecutionTime><patchExecutionTime>180ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>104ms</time></test></testsExecutionTime><patchExecutionTime>175ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>185ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to field org.apache.commons.math3.linear.DiagonalMatrix.data is replaced by the call to org.apache.commons.math3.linear.DiagonalMatrix::getDataRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>removed call to org/apache/commons/math3/linear/DiagonalMatrix::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>79ms</time></test></testsExecutionTime><patchExecutionTime>149ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced return value with null for org/apache/commons/math3/linear/DiagonalMatrix::copy</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>94ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>copy</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>mutated return of Object value for org/apache/commons/math3/linear/DiagonalMatrix::copy to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>66ms</time></test></testsExecutionTime><patchExecutionTime>132ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced call to getRowDimension with a call to getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the call to org.apache.commons.math3.linear.DiagonalMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>296</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>11</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the call to getRowDimension()I is guarded returning default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>11</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>removed call to org/apache/commons/math3/linear/DiagonalMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced int return with 0 for org/apache/commons/math3/linear/DiagonalMatrix::getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>163ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getColumnDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>296</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>167ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>27</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.linear.DiagonalMatrix.data is replaced by the call to org.apache.commons.math3.linear.DiagonalMatrix::getDataRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>17</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>206</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>local dim is replaced by local i to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>23</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7287ms</time></test></testsExecutionTime><patchExecutionTime>7309ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>25</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7558ms</time></test></testsExecutionTime><patchExecutionTime>7635ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>28</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>local i is replaced by local dim to be used</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>6945ms</time></test></testsExecutionTime><patchExecutionTime>6965ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to getRowDimension with a call to getColumnDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.linear.DiagonalMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to data is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>207</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>27</index><block>3</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to data is guarded returning local out</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>203</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to getRowDimension()I is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7878ms</time></test></testsExecutionTime><patchExecutionTime>7950ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>33</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7295ms</time></test></testsExecutionTime><patchExecutionTime>7356ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>203</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/linear/DiagonalMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>1964ms</time></test></testsExecutionTime><patchExecutionTime>1985ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>38</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/linear/DiagonalMatrix::getData</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7585ms</time></test></testsExecutionTime><patchExecutionTime>7654ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>19</index><block>2</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>206</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>19</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7914ms</time></test></testsExecutionTime><patchExecutionTime>7987ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getData</mutatedMethod><methodDescription>()[[D</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/linear/DiagonalMatrix::getData to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7464ms</time></test></testsExecutionTime><patchExecutionTime>7539ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>6</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>6</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>13</index><block>6</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to field org.apache.commons.math3.linear.DiagonalMatrix.data is replaced by the call to org.apache.commons.math3.linear.DiagonalMatrix::getDataRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>237</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>5</index><block>5</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>5</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>10</index><block>5</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>local column is replaced by local row to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>6</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>local row is replaced by local column to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>6</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded returning default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>7</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>Substituted 0.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>5</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>20</index><block>7</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/linear/DiagonalMatrix::getEntry</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>5</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>5</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>238</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>7</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/linear/DiagonalMatrix::getEntry</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getEntry</mutatedMethod><methodDescription>(II)D</methodDescription><lineNumber>237</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>6</index><block>5</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>removed call to org/apache/commons/math3/linear/MatrixUtils::checkMatrixIndex</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>10</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>10</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded using field data</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>8</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to field org.apache.commons.math3.linear.DiagonalMatrix.data is replaced by the call to org.apache.commons.math3.linear.DiagonalMatrix::getDataRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>10</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to field org.apache.commons.math3.linear.DiagonalMatrix.data is replaced by the call to org.apache.commons.math3.linear.DiagonalMatrix::getDataRef()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded returning default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>10</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>the access to data is guarded returning default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>9</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>10</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced int return with 0 for org/apache/commons/math3/linear/DiagonalMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>5</index><block>8</block><killingTests/><suspValue>0.07432941462471664</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>8</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>102ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DiagonalMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.DiagonalMatrix</mutatedClass><mutatedMethod>getRowDimension</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>290</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>10</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07432941462471664</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>165ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>110ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/ConvergenceChecker;)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced call to &#60;init&#62;(DDDDD)V with a call to &#60;init&#62;(DLorg/apache/commons/math3/optimization/ConvergenceChecker;DDDD)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>replaced access to SAFE_MIN with an access to EPSILON</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Substituted 100.0 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Substituted 1.0E-10 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Substituted 1.0E-10 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>158</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.15249857033260467</suspValue><description>Substituted 1.0E-10 with 1.0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to initialStepBoundFactor with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to costRelativeTolerance with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to parRelativeTolerance with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to orthoTolerance with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>replaced access to qrRankingThreshold with an access to lmPar</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field initialStepBoundFactor is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field costRelativeTolerance is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field parRelativeTolerance is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field orthoTolerance is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field qrRankingThreshold is replaced by access to local initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field initialStepBoundFactor is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field costRelativeTolerance is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field parRelativeTolerance is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field orthoTolerance is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field qrRankingThreshold is replaced by access to local costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field initialStepBoundFactor is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field costRelativeTolerance is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field parRelativeTolerance is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field orthoTolerance is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>access to field qrRankingThreshold is replaced by access to local parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local initialStepBoundFactor is replaced by local costRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local costRelativeTolerance is replaced by local initialStepBoundFactor to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local parRelativeTolerance is replaced by local initialStepBoundFactor to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local orthoTolerance is replaced by local initialStepBoundFactor to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local threshold is replaced by local initialStepBoundFactor to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local initialStepBoundFactor is replaced by local parRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local costRelativeTolerance is replaced by local parRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local parRelativeTolerance is replaced by local costRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local orthoTolerance is replaced by local costRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local threshold is replaced by local costRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local initialStepBoundFactor is replaced by local orthoTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local costRelativeTolerance is replaced by local orthoTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local parRelativeTolerance is replaced by local orthoTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local orthoTolerance is replaced by local parRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_2</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local threshold is replaced by local parRelativeTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local initialStepBoundFactor is replaced by local threshold to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>14</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local costRelativeTolerance is replaced by local threshold to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>19</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local parRelativeTolerance is replaced by local threshold to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>24</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local orthoTolerance is replaced by local threshold to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_3</mutator><index>29</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>local threshold is replaced by local orthoTolerance to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>271</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable initialStepBoundFactor</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>272</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable costRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable parRelativeTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>274</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>25</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable orthoTolerance</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>LevenbergMarquardtOptimizer.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.general.LevenbergMarquardtOptimizer</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDDDD)V</methodDescription><lineNumber>275</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>30</index><block>1</block><killingTests/><suspValue>0.1270001270001905</suspValue><description>Removed assignment to member variable qrRankingThreshold</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.04062222318511938</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>53</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.04062222318511938</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>92ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>replaced call to &#60;init&#62;(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>32ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.038866103716823586</suspValue><description>removed call to org/apache/commons/math3/util/Incrementor$1::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>4</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03394221166510653</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>23386ms</time></test></testsExecutionTime><patchExecutionTime>23580ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>replaced access to count with an access to maximalCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>replaced access to maximalCount with an access to count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>access to field count is replaced by access to local max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>access to field maximalCount is replaced by access to local max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>29</index><block>4</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>access to field maxCountCallback is replaced by access to local cb</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03394221166510653</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>89ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>2</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>81</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03394221166510653</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>91ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>2</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>84</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>4</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>Removed assignment to member variable maximalCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(ILorg/apache/commons/math3/util/Incrementor$MaxCountExceededCallback;)V</methodDescription><lineNumber>85</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>4</block><killingTests/><suspValue>0.03394221166510653</suspValue><description>Removed assignment to member variable maxCountCallback</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>6</block><killingTests/><suspValue>0.03479445003196105</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>6</block><killingTests/><suspValue>0.03479445003196105</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.count is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>6</block><killingTests/><suspValue>0.03479445003196105</suspValue><description>replaced access to count with an access to maximalCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>6</block><killingTests/><suspValue>0.03479445003196105</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>resetCount</mutatedMethod><methodDescription>()V</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>6</block><killingTests/><suspValue>0.03479445003196105</suspValue><description>Removed assignment to member variable count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03560094272544522</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::setMaximalCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>96ms</time></test></testsExecutionTime><patchExecutionTime>159ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>5</index><block>5</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03560094272544522</suspValue><description>the access to field org.apache.commons.math3.util.Incrementor.maximalCount is replaced by the call to org.apache.commons.math3.util.Incrementor::incrementCount(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>103ms</time></test></testsExecutionTime><patchExecutionTime>157ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>5</index><block>5</block><killingTests/><suspValue>0.03560094272544522</suspValue><description>replaced access to maximalCount with an access to count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>5</index><block>5</block><killingTests/><suspValue>0.03560094272544522</suspValue><description>access to field maximalCount is replaced by access to local max</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_0</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.03560094272544522</suspValue><description>access to local max is replaced by access to field maximalCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalToFieldAccessMutator_1</mutator><index>4</index><block>5</block><killingTests/><suspValue>0.03560094272544522</suspValue><description>access to local max is replaced by access to field count</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Incrementor.java</sourceFile><mutatedClass>org.apache.commons.math3.util.Incrementor</mutatedClass><mutatedMethod>setMaximalCount</mutatedMethod><methodDescription>(I)V</methodDescription><lineNumber>96</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>5</block><killingTests/><suspValue>0.03560094272544522</suspValue><description>Removed assignment to member variable maximalCount</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field weight is replaced by access to local weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field x is replaced by access to local weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field y is replaced by access to local weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field weight is replaced by access to local x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field x is replaced by access to local x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_1</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field y is replaced by access to local x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field weight is replaced by access to local y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field x is replaced by access to local y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_2</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>access to field y is replaced by access to local y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>local weight is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>13</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>local x is replaced by local weight to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_0</mutator><index>18</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>local y is replaced by local weight to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>8</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>local weight is replaced by local y to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>13</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>local x is replaced by local y to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>52</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.LocalNameMutator_1</mutator><index>18</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>local y is replaced by local x to be used</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>Removed assignment to member variable weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>Removed assignment to member variable x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(DDD)V</methodDescription><lineNumber>52</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests/><suspValue>0.19611613513818404</suspValue><description>Removed assignment to member variable y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to weight is guarded using value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to weight is guarded using field weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.weight is replaced by the call to org.apache.commons.math3.optimization.fitting.WeightedObservedPoint::getWeight()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>83ms</time></test></testsExecutionTime><patchExecutionTime>138ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.weight is replaced by the call to org.apache.commons.math3.optimization.fitting.WeightedObservedPoint::getX()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to field org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.weight is replaced by the call to org.apache.commons.math3.optimization.fitting.WeightedObservedPoint::getY()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced access to weight with an access to x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced access to weight with an access to y</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to weight is guarded returning default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>the access to weight is guarded returning field weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/fitting/WeightedObservedPoint::getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>59</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/fitting/WeightedObservedPoint::getWeight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>the access to y is guarded using value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>the access to y is guarded using field weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>the access to field org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.y is replaced by the call to org.apache.commons.math3.optimization.fitting.WeightedObservedPoint::getWeight()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>the access to field org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.y is replaced by the call to org.apache.commons.math3.optimization.fitting.WeightedObservedPoint::getX()D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.2</suspValue><description>the access to field org.apache.commons.math3.optimization.fitting.WeightedObservedPoint.y is replaced by the call to org.apache.commons.math3.optimization.fitting.WeightedObservedPoint::getY()D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>82ms</time></test></testsExecutionTime><patchExecutionTime>136ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>replaced access to y with an access to weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>replaced access to y with an access to x</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>the access to y is guarded returning default value 0.D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>the access to y is guarded returning field weight</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>replaced double return with 0.0d for org/apache/commons/math3/optimization/fitting/WeightedObservedPoint::getY</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>WeightedObservedPoint.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.WeightedObservedPoint</mutatedClass><mutatedMethod>getY</mutatedMethod><methodDescription>()D</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests/><suspValue>0.2</suspValue><description>replaced return of double value with -(x + 1) for org/apache/commons/math3/optimization/fitting/WeightedObservedPoint::getY</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>99ms</time></test></testsExecutionTime><patchExecutionTime>165ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>153ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>97ms</time></test></testsExecutionTime><patchExecutionTime>170ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>98ms</time></test></testsExecutionTime><patchExecutionTime>159ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V with a call to &#60;init&#62;(Lorg/apache/commons/math3/optimization/MultivariateDifferentiableVectorOptimizer;)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>Substituted -1 with 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/DifferentiableMultivariateVectorOptimizer;)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>Removed assignment to member variable degree</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>50ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>87ms</time></test></testsExecutionTime><patchExecutionTime>147ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit()[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>85ms</time></test></testsExecutionTime><patchExecutionTime>152ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>86ms</time></test></testsExecutionTime><patchExecutionTime>153ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>86ms</time></test></testsExecutionTime><patchExecutionTime>143ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit([D)[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>86ms</time></test></testsExecutionTime><patchExecutionTime>142ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D with a call to fit(I[D)[D</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>the call to org.apache.commons.math3.optimization.fitting.PolynomialFitter::fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>the call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>the call to fit(Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;[D)[D is guarded returning local guess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to org/apache/commons/math3/optimization/fitting/PolynomialFitter::fit with argument</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>84ms</time></test></testsExecutionTime><patchExecutionTime>145ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>removed call to org/apache/commons/math3/analysis/polynomials/PolynomialFunction$Parametric::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/apache/commons/math3/optimization/fitting/PolynomialFitter::fit</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>88ms</time></test></testsExecutionTime><patchExecutionTime>148ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/fitting/PolynomialFitter::fit</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>PolynomialFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.PolynomialFitter</mutatedClass><mutatedMethod>fit</mutatedMethod><methodDescription>([D)[D</methodDescription><lineNumber>110</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>1</block><killingTests/><suspValue>0.4082482904638631</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/fitting/PolynomialFitter::fit to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>178ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>170ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>101ms</time></test></testsExecutionTime><patchExecutionTime>165ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>171ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>67ms</time></test></testsExecutionTime><patchExecutionTime>133ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>107ms</time></test></testsExecutionTime><patchExecutionTime>171ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>11</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to &#60;init&#62;([D)V with a call to &#60;init&#62;([DZ)V</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/linear/DiagonalMatrix::&#60;init&#62;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>44</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable weightMatrix</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>108ms</time></test></testsExecutionTime><patchExecutionTime>172ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded using field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.Weight.weightMatrix is replaced by the call to org.apache.commons.math3.optimization.Weight::getWeight()Lorg/apache/commons/math3/linear/RealMatrix;</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>174ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced call to copy with a call to transpose</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to org.apache.commons.math3.linear.RealMatrix::copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to weightMatrix is guarded returning field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to copy()Lorg/apache/commons/math3/linear/RealMatrix; is guarded returning field weightMatrix</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/linear/RealMatrix::copy</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/Weight::getWeight</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/Weight::getWeight to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Weight.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Weight</mutatedClass><mutatedMethod>getWeight</mutatedMethod><methodDescription>()Lorg/apache/commons/math3/linear/RealMatrix;</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced call to org/apache/commons/math3/linear/RealMatrix::copy with receiver</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>access to field target is replaced by access to local observations</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>160ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable target</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>169ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>MethodNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math3.optim.SimplePointCheckerTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>163ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>MethodNameMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math3.optim.PointVectorValuePairTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>MethodNameMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math3.optim.SimpleVectorValueCheckerTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded using field target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>the access to field org.apache.commons.math3.optimization.Target.target is replaced by the call to org.apache.commons.math3.optimization.Target::getTarget()[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the access to target is guarded returning field target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning field target</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>110ms</time></test></testsExecutionTime><patchExecutionTime>173ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/Target::getTarget</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>Target.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.Target</mutatedClass><mutatedMethod>getTarget</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>49</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/Target::getTarget to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07580980435789034</suspValue><description>access to field init is replaced by access to local startPoint</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>104ms</time></test></testsExecutionTime><patchExecutionTime>156ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07580980435789034</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07580980435789034</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07580980435789034</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07580980435789034</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07580980435789034</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>9</index><block>0</block><killingTests/><suspValue>0.07580980435789034</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning enclosing method</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07580980435789034</suspValue><description>removed call to [D::clone</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>100ms</time></test></testsExecutionTime><patchExecutionTime>154ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>([D)V</methodDescription><lineNumber>38</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07580980435789034</suspValue><description>Removed assignment to member variable init</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>73ms</time></test></testsExecutionTime><patchExecutionTime>135ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07602859212697055</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>96ms</time></test></testsExecutionTime><patchExecutionTime>150ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>MethodNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07602859212697055</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math3.optim.SimplePointCheckerTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>MethodNameMutator_2</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07602859212697055</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math3.optim.PointVectorValuePairTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>96ms</time></test></testsExecutionTime><patchExecutionTime>151ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>MethodNameMutator_3</mutator><index>5</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07602859212697055</suspValue><description>the call to factory method [D.clone()Ljava/lang/Object; is replaced by an instantiation of type org.apache.commons.math3.optim.SimpleVectorValueCheckerTest using ()V</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>102ms</time></test></testsExecutionTime><patchExecutionTime>164ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>the access to init is guarded using value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>the access to init is guarded using field init</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.07602859212697055</suspValue><description>the access to field org.apache.commons.math3.optimization.InitialGuess.init is replaced by the call to org.apache.commons.math3.optimization.InitialGuess::getInitialGuess()[D</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>105ms</time></test></testsExecutionTime><patchExecutionTime>157ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>the call to [D::clone()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>the access to init is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>the access to init is guarded returning field init</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>the call to clone()Ljava/lang/Object; is guarded returning field init</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>removed call to [D::clone</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>replaced return value with null for org/apache/commons/math3/optimization/InitialGuess::getInitialGuess</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>InitialGuess.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.InitialGuess</mutatedClass><mutatedMethod>getInitialGuess</mutatedMethod><methodDescription>()[D</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.07602859212697055</suspValue><description>mutated return of Object value for org/apache/commons/math3/optimization/InitialGuess::getInitialGuess to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>replaced call to getColumnDimension with a call to getRowDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>replaced call to getRowDimension with a call to getColumnDimension</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>replaced call to getColumnDimension with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7555ms</time></test></testsExecutionTime><patchExecutionTime>7586ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>replaced call to getRowDimension with a call to hashCode</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>7647ms</time></test></testsExecutionTime><patchExecutionTime>7721ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>the call to org.apache.commons.math3.linear.AbstractRealMatrix::getColumnDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>the call to org.apache.commons.math3.linear.AbstractRealMatrix::getRowDimension()I is guarded using default value 0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>1</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>the call to getColumnDimension()I is guarded returning default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>the call to getRowDimension()I is guarded returning default value false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>replaced boolean return with false for org/apache/commons/math3/linear/AbstractRealMatrix::isSquare</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2074ms</time></test></testsExecutionTime><patchExecutionTime>2148ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>13</index><block>3</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>replaced boolean return with true for org/apache/commons/math3/linear/AbstractRealMatrix::isSquare</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>1983ms</time></test></testsExecutionTime><patchExecutionTime>2014ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>11</index><block>3</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>Substituted 0 with 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>1932ms</time></test></testsExecutionTime><patchExecutionTime>1963ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>removed call to org/apache/commons/math3/linear/AbstractRealMatrix::getColumnDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2052ms</time></test></testsExecutionTime><patchExecutionTime>2131ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>removed call to org/apache/commons/math3/linear/AbstractRealMatrix::getRowDimension</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2047ms</time></test></testsExecutionTime><patchExecutionTime>2124ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2142ms</time></test></testsExecutionTime><patchExecutionTime>2220ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.06142951168339512</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractRealMatrix.java</sourceFile><mutatedClass>org.apache.commons.math3.linear.AbstractRealMatrix</mutatedClass><mutatedMethod>isSquare</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>3</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.06142951168339512</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>2071ms</time></test></testsExecutionTime><patchExecutionTime>2155ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03115884764248779</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests/><suspValue>0.03115884764248779</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MathUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.util.MathUtils</mutatedClass><mutatedMethod>checkNotNull</mutatedMethod><methodDescription>(Ljava/lang/Object;)V</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</killingTests><suspValue>0.03115884764248779</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.apache.commons.math3.optimization.fitting.PolynomialFitterTest.testLargeSample(org.apache.commons.math3.optimization.fitting.PolynomialFitterTest)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>toDifferentiableMultivariateVectorFunction</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/analysis/FunctionUtils$18::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>toDifferentiableMultivariateVectorFunction</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/analysis/FunctionUtils::toDifferentiableMultivariateVectorFunction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>toDifferentiableMultivariateVectorFunction</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/analysis/FunctionUtils::toDifferentiableMultivariateVectorFunction to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>toMultivariateDifferentiableVectorFunction</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>6</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>removed call to org/apache/commons/math3/analysis/FunctionUtils$19::&#60;init&#62;</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>toMultivariateDifferentiableVectorFunction</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>replaced return value with null for org/apache/commons/math3/analysis/FunctionUtils::toMultivariateDifferentiableVectorFunction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils</mutatedClass><mutatedMethod>toMultivariateDifferentiableVectorFunction</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>1</block><killingTests/><suspValue>0.105999788000636</suspValue><description>mutated return of Object value for org/apache/commons/math3/analysis/FunctionUtils::toMultivariateDifferentiableVectorFunction to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldToLocalAccessMutator_0</mutator><index>12</index><block>0</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>access to field f is replaced by access to local f</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V</methodDescription><lineNumber>210</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>Removed assignment to member variable this$0</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>CurveFitter.java</sourceFile><mutatedClass>org.apache.commons.math3.optimization.fitting.CurveFitter$OldTheoreticalValuesFunction</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/optimization/fitting/CurveFitter;Lorg/apache/commons/math3/analysis/ParametricUnivariateFunction;)V</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>12</index><block>0</block><killingTests/><suspValue>0.20412414523193154</suspValue><description>Removed assignment to member variable f</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$19</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/DifferentiableMultivariateVectorFunction;)V</methodDescription><lineNumber>727</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable val$f</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='MEMORY_ERROR' numberOfTestsRun='0'><sourceFile>FunctionUtils.java</sourceFile><mutatedClass>org.apache.commons.math3.analysis.FunctionUtils$18</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/apache/commons/math3/analysis/differentiation/MultivariateDifferentiableVectorFunction;)V</methodDescription><lineNumber>672</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>0</block><killingTests/><suspValue>0.105999788000636</suspValue><description>Removed assignment to member variable val$f</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
</mutations>
