<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>72ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1849</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>12</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>catch type java/io/IOException is replaced with java/lang/Exception</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>49ms</time></test></testsExecutionTime><patchExecutionTime>60ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>the call to org.joda.time.format.DateTimeFormatterBuilder$Fraction::printTo(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V is guarded</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1846</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14907119849998599</suspValue><description>removed call to org/joda/time/format/DateTimeFormatterBuilder$Fraction::printTo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>MethodNameMutator_0</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to factory method org.joda.time.DateTimeFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>MethodNameMutator_2</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to factory method org.joda.time.DateTimeFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>MethodNameMutator_6</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to factory method org.joda.time.DateTimeFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1892</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>22</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>catch type java/lang/RuntimeException is replaced with java/lang/Exception</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iFieldType is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iMinDigits is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iFieldType is guarded using field iFieldType</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iMinDigits is guarded using field iMinDigits</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMinDigits is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$Fraction::estimatePrintedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$Fraction.iMinDigits is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$Fraction::estimateParsedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced access to iMinDigits with an access to iMaxDigits</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced call to remainder with a call to roundFloor</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced call to remainder with a call to roundCeiling</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced call to remainder with a call to roundHalfFloor</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced call to remainder with a call to roundHalfCeiling</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced call to remainder with a call to roundHalfEven</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to org.joda.time.DateTimeFieldType::getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to org.joda.time.DateTimeField::remainder(J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iFieldType is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iMinDigits is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iFieldType is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iMinDigits is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iFieldType is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1880</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iMinDigits is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to remainder(J)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to remainder(J)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to remainder(J)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to remainder(J)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the call to remainder(J)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced call to org/joda/time/DateTimeField::remainder with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>95ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>48</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1879</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>removed call to org/joda/time/DateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1884</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>17</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>removed call to org/joda/time/DateTimeField::remainder</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>48</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Fraction</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Ljava/io/Writer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>1894</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>48</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>461</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>the call to factory method org.joda.time.DateTimeUtils.getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>MethodNameMutator_0</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>MethodNameMutator_0</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>MethodNameMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>MethodNameMutator_0</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>the call to factory method org.joda.time.Chronology.hourOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>MethodNameMutator_0</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>the call to factory method org.joda.time.Chronology.minuteOfHour()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>MethodNameMutator_0</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>the call to factory method org.joda.time.Chronology.secondOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>MethodNameMutator_0</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>the call to factory method org.joda.time.Chronology.secondOfMinute()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>MethodNameMutator_2</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>MethodNameMutator_2</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>MethodNameMutator_2</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>MethodNameMutator_2</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>the call to factory method org.joda.time.Chronology.hourOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>MethodNameMutator_2</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>the call to factory method org.joda.time.Chronology.minuteOfHour()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>MethodNameMutator_2</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>the call to factory method org.joda.time.Chronology.secondOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>MethodNameMutator_2</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>the call to factory method org.joda.time.Chronology.secondOfMinute()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>MethodNameMutator_6</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>the call to factory method org.joda.time.Chronology.year()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>MethodNameMutator_6</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>the call to factory method org.joda.time.Chronology.monthOfYear()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>MethodNameMutator_6</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>the call to factory method org.joda.time.Chronology.dayOfMonth()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>MethodNameMutator_6</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>the call to factory method org.joda.time.Chronology.hourOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>MethodNameMutator_6</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>the call to factory method org.joda.time.Chronology.minuteOfHour()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>MethodNameMutator_6</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>the call to factory method org.joda.time.Chronology.secondOfDay()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>MethodNameMutator_6</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>the call to factory method org.joda.time.Chronology.secondOfMinute()Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to iOrdinal is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to iOrdinal is guarded using field iOrdinal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>538ms</time></test></testsExecutionTime><patchExecutionTime>547ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>703ms</time></test></testsExecutionTime><patchExecutionTime>712ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to millisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>624ms</time></test></testsExecutionTime><patchExecutionTime>635ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>526ms</time></test></testsExecutionTime><patchExecutionTime>539ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to secondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>489ms</time></test></testsExecutionTime><patchExecutionTime>501ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>489ms</time></test></testsExecutionTime><patchExecutionTime>502ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to minuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>485ms</time></test></testsExecutionTime><patchExecutionTime>496ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>557ms</time></test></testsExecutionTime><patchExecutionTime>568ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to clockhourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>496ms</time></test></testsExecutionTime><patchExecutionTime>506ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to hourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced call to year with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>593ms</time></test></testsExecutionTime><patchExecutionTime>602ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced call to monthOfYear with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced call to dayOfMonth with a call to clockhourOfHalfday</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced call to hourOfDay with a call to halfdayOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced call to minuteOfHour with a call to halfdayOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced call to secondOfDay with a call to halfdayOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced call to secondOfMinute with a call to halfdayOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>the call to org.joda.time.Chronology::year()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>the call to org.joda.time.Chronology::monthOfYear()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>the call to org.joda.time.Chronology::dayOfMonth()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>the call to org.joda.time.Chronology::hourOfDay()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>the call to org.joda.time.Chronology::minuteOfHour()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>the call to org.joda.time.Chronology::secondOfDay()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>the call to org.joda.time.Chronology::secondOfMinute()Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>the access to iOrdinal is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>the call to year()Lorg/joda/time/DateTimeField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>the call to monthOfYear()Lorg/joda/time/DateTimeField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>the call to dayOfMonth()Lorg/joda/time/DateTimeField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>the call to hourOfDay()Lorg/joda/time/DateTimeField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>the call to minuteOfHour()Lorg/joda/time/DateTimeField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>the call to secondOfDay()Lorg/joda/time/DateTimeField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>the call to secondOfMinute()Lorg/joda/time/DateTimeField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>replaced call to org/joda/time/DateTimeUtils::getChronology with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>461</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>removed call to org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>34</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>removed call to org/joda/time/Chronology::year</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>44</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>removed call to org/joda/time/Chronology::monthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>49</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>removed call to org/joda/time/Chronology::dayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>94</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>removed call to org/joda/time/Chronology::hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>104</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>removed call to org/joda/time/Chronology::minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>109</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>removed call to org/joda/time/Chronology::secondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>114</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>removed call to org/joda/time/Chronology::secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>35</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>replaced return value with null for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>45</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>replaced return value with null for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>50</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>replaced return value with null for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>95</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>replaced return value with null for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>105</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>replaced return value with null for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>110</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>replaced return value with null for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>115</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>replaced return value with null for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>473</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>35</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10031397251510384</suspValue><description>mutated return of Object value for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>477</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>45</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10095089302501374</suspValue><description>mutated return of Object value for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>479</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>50</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10362555203016796</suspValue><description>mutated return of Object value for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>497</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>95</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1</suspValue><description>mutated return of Object value for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>501</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>105</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10173145278829236</suspValue><description>mutated return of Object value for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>503</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>110</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13468700594029479</suspValue><description>mutated return of Object value for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>505</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>115</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1068282181275267</suspValue><description>mutated return of Object value for org/joda/time/DateTimeFieldType$StandardDateTimeFieldType::getField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_0</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 0 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_1</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 1 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_10</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 10 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_11</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 11 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_12</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 12 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_13</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 13 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_14</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 14 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_15</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 15 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_16</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 16 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_17</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 17 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_18</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 18 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_19</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 19 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_2</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 2 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_20</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 20 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_21</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 21 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_22</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 22 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_3</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 3 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_4</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 4 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_5</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 5 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_6</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 6 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_7</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 7 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>6ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_8</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 8 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveSwitchMutator_9</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>RemoveSwitch 9 mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType$StandardDateTimeFieldType</mutatedClass><mutatedMethod>getField</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>463</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.SwitchMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08192319205190406</suspValue><description>Switch mutation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>MethodNameMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>MethodNameMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>MethodNameMutator_0</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>MethodNameMutator_0</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to factory method java.lang.Integer.toString(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>MethodNameMutator_0</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to factory method java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>MethodNameMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>MethodNameMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_4</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>55ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>MethodNameMutator_4</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>MethodNameMutator_4</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to factory method java.lang.Integer.toString(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>MethodNameMutator_4</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to factory method java.lang.StringBuffer.append(Ljava/lang/String;)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString(I)Ljava/lang/String; with a call to toString(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>156ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString(I)Ljava/lang/String; with a call to toString(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(C)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString(I)Ljava/lang/String; with a call to toString(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString(I)Ljava/lang/String; with a call to toString(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString(I)Ljava/lang/String; with a call to toString(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>54ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString(I)Ljava/lang/String; with a call to toString(II)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>150ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString with a call to toHexString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString with a call to toOctalString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to toString with a call to toBinaryString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to java.lang.StringBuffer::append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>111ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1208244186660354</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>139</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>149</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13592553320611697</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>170</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><block>8</block><killingTests/><suspValue>0.12475657231036107</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>179</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1208244186660354</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>99</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Substituted 13421772 with 13421773</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Substituted 27 with 28</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>110</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>120</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>138</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>Substituted 1000 with 1001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>148</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13592553320611697</suspValue><description>Substituted 10000 with 10001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>83</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>152</index><block>17</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1208244186660354</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>11</block><killingTests/><suspValue>0.13671718540493266</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>139</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13592553320611697</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>170</index><block>18</block><killingTests/><suspValue>0.1349934614125654</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>removed call to java/lang/Integer::toString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>80</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1208244186660354</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>85</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>139</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>149</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13592553320611697</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>170</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1148023155860583</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>55</index><block>7</block><killingTests/><suspValue>0.12475657231036107</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>80</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1208244186660354</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>85</index><block>11</block><killingTests/><suspValue>0.13671718540493266</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>139</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>82</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>149</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13592553320611697</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>170</index><block>18</block><killingTests/><suspValue>0.1349934614125654</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12487810821089254</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12475657231036107</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>90</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>186</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>64</index><block>8</block><killingTests/><suspValue>0.12475657231036107</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>94</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>87</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>179</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1349934614125654</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>MethodNameMutator_0</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>MethodNameMutator_4</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>58</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>109</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>58</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>109</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>58</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>109</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>58</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>109</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>58</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>109</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>58</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>109</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>13</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>the access to iZeroOffsetPrintText is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>62</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>81</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMinFields is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>96</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iShowSeparators is guarded using value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>the access to iMinFields is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>13</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>the access to iZeroOffsetPrintText is guarded using field iZeroOffsetPrintText</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>62</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded using field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>81</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMinFields is guarded using field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>96</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iShowSeparators is guarded using field iShowSeparators</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded using field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>the access to iMinFields is guarded using field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>62</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.iMaxFields is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::estimatePrintedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>81</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.iMinFields is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::estimatePrintedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.iMaxFields is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::estimatePrintedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>147ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.iMinFields is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::estimatePrintedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>62</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.iMaxFields is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::estimateParsedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>81</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.iMinFields is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::estimateParsedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.iMaxFields is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::estimateParsedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset.iMinFields is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::estimateParsedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>13</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>replaced access to iZeroOffsetPrintText with an access to iZeroOffsetParseText</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>62</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced access to iMaxFields with an access to iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>81</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced access to iMinFields with an access to iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>replaced access to iMaxFields with an access to iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>replaced access to iMinFields with an access to iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>13</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>the access to iZeroOffsetPrintText is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>62</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>81</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMinFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>96</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iShowSeparators is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>the access to iMinFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>13</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>the access to iZeroOffsetPrintText is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>62</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>81</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMinFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>96</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iShowSeparators is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>the access to iMinFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>13</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>the access to iZeroOffsetPrintText is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>62</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>81</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMinFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2108</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>96</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iShowSeparators is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>the access to iMaxFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>the access to iMinFields is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>83</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>50</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Substituted 3600000 with 3600001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>57</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>72</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Substituted 3600000 with 3600001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>82</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>90</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Substituted 60000 with 60001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>Substituted 58 with 59</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>108</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>114</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>123</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>Substituted 60000 with 60001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>133</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>61ms</time></test></testsExecutionTime><patchExecutionTime>69ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2097</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>51</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2102</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>74</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2107</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>91</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>124</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2115</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>64</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>79</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>83</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>97</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>115</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>130</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>64</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>79</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>97</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>115</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>130</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2083</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>11</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2086</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1484539238050411</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2099</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>64</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>79</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2108</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>97</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>115</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>130</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>83</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>134</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2090</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2103</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>83</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2116</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>134</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16302782918784448</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2098</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>58</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>109</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1598721533954863</suspValue><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2109</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.16275769175423188</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>33ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset with a call to getOffsetFromLocal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='2'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced call to getOffset with a call to getOffsetFromLocal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_NewYork_winter(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>the call to org.joda.time.DateTimeZone::getOffset(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>the call to org.joda.time.DateTimeZone::getOffset(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>the call to getOffset(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>the call to getOffset(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>the call to getOffset(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>the call to getOffset(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>126</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>133</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>131</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>995</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>117</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>123</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>126</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>133</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>960</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>removed call to org/joda/time/DateTimeZone::getOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>962</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>removed call to org/joda/time/DateTimeZone::getOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>144</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertLocalToUTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>964</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>126</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>133</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>126</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>997</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>133</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertLocalToUTC</mutatedMethod><methodDescription>(JZ)J</methodDescription><lineNumber>1000</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>144</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14509525002200233</suspValue><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::convertLocalToUTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced call to getOffset with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced call to getOffset with a call to getOffsetFromLocal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>the call to org.joda.time.DateTimeZone::getOffset(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>the call to getOffset(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>the call to getOffset(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>21</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>26</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>911</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>18</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>21</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>910</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>removed call to org/joda/time/DateTimeZone::getOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>39</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced long return with 0 for org/joda/time/DateTimeZone::convertUTCToLocal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>21</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>21</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>913</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>convertUTCToLocal</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>39</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10475656017578482</suspValue><description>replaced return of long value with value + 1 for org/joda/time/DateTimeZone::convertUTCToLocal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the access to iZone is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the access to iField is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the access to iZone is guarded using field iZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the access to iField is guarded using field iField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>replaced call to convertUTCToLocal with a call to nextTransition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>replaced call to get with a call to getLeapAmount</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>replaced call to convertUTCToLocal with a call to previousTransition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>replaced call to get with a call to getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>replaced call to get with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the call to org.joda.time.DateTimeZone::convertUTCToLocal(J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the call to org.joda.time.DateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the access to iZone is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the access to iField is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the call to convertUTCToLocal(J)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>the call to get(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>replaced call to org/joda/time/DateTimeZone::convertUTCToLocal with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>removed call to org/joda/time/DateTimeZone::convertUTCToLocal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>removed call to org/joda/time/DateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>replaced int return with 0 for org/joda/time/chrono/ZonedChronology$ZonedDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12367848282062127</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to convertLocalToUTC(JZ)J with a call to convertLocalToUTC(JZJ)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>66ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to convertLocalToUTC(JZ)J with a call to convertLocalToUTC(JZJ)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to convertLocalToUTC(JZ)J with a call to convertLocalToUTC(JZJ)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to convertLocalToUTC(JZ)J with a call to convertLocalToUTC(JZJ)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to convertLocalToUTC(JZ)J with a call to convertLocalToUTC(JZJ)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;Ljava/util/Locale;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to convertLocalToUTC(JZ)J with a call to convertLocalToUTC(JZJ)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set(JI)J with a call to set(JLjava/lang/String;)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iZone is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iField is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iZone is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iZone is guarded using field iZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iField is guarded using field iField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iZone is guarded using field iZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to convertUTCToLocal with a call to nextTransition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set with a call to add</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to get with a call to getLeapAmount</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to convertUTCToLocal with a call to previousTransition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to set with a call to addWrapField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to get with a call to getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to get with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to get with a call to getOffsetToAdd</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to org.joda.time.DateTimeZone::convertUTCToLocal(J)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to org.joda.time.DateTimeField::set(JI)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to org.joda.time.DateTimeZone::convertLocalToUTC(JZ)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to org.joda.time.chrono.ZonedChronology$ZonedDateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iZone is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iField is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iZone is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iZone is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iField is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the access to iZone is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to convertUTCToLocal(J)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to set(JI)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to convertLocalToUTC(JZ)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to get(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to convertUTCToLocal(J)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to set(JI)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to convertLocalToUTC(JZ)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>the call to get(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to org/joda/time/DateTimeZone::convertUTCToLocal with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to org/joda/time/DateTimeField::set with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>replaced call to org/joda/time/DateTimeZone::convertLocalToUTC with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>465</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>removed call to org/joda/time/DateTimeZone::convertUTCToLocal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>51ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>466</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>removed call to org/joda/time/DateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>467</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>removed call to org/joda/time/DateTimeZone::convertLocalToUTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>removed call to org/joda/time/chrono/ZonedChronology$ZonedDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>69</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.2301741350593744</suspValue><description>replaced long return with 0 for org/joda/time/chrono/ZonedChronology$ZonedDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>30</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>30</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21442250696755896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology$ZonedDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>474</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.2301741350593744</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/ZonedChronology$ZonedDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>582</lineNumber><mutator>MethodNameMutator_0</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to factory method java.lang.StringBuffer.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>582</lineNumber><mutator>MethodNameMutator_4</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to factory method java.lang.StringBuffer.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to &#60;init&#62;(I)V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced call to requirePrinter with a call to getPrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::requirePrinter()Lorg/joda/time/format/DateTimePrinter; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to org.joda.time.format.DateTimePrinter::estimatePrintedLength()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to java.lang.StringBuffer::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to requirePrinter()Lorg/joda/time/format/DateTimePrinter; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to estimatePrintedLength()I is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>582</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V is guarded</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>removed call to java/lang/StringBuffer::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>20</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/format/DateTimeFormatter::print</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::requirePrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>580</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>removed call to org/joda/time/format/DateTimePrinter::estimatePrintedLength</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>removed call to java/lang/StringBuffer::toString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>582</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>mutated return of Object value for org/joda/time/format/DateTimeFormatter::print to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>print</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Ljava/lang/String;</methodDescription><lineNumber>581</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1356127007241621</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::printTo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>MethodNameMutator_0</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to factory method org.joda.time.format.DateTimeFormatter.selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>MethodNameMutator_0</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to factory method org.joda.time.Chronology.withUTC()Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>MethodNameMutator_1</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to factory method org.joda.time.Chronology.getZone()Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.TestDateTimeZone$MockDateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>MethodNameMutator_2</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to factory method org.joda.time.Chronology.getZone()Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.MockZone using (JII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to getOffset(J)I with a call to getOffset(Lorg/joda/time/ReadableInstant;)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>123ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>67</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the access to iLocale is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>67</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the access to iLocale is guarded using field iLocale</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>67</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iLocale is replaced by the call to org.joda.time.format.DateTimeFormatter::getLocale()Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to requirePrinter with a call to getPrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to getOffset with a call to getStandardOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to getOffset with a call to getOffsetFromLocal</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::requirePrinter()Lorg/joda/time/format/DateTimePrinter; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to org.joda.time.Chronology::getZone()Lorg/joda/time/DateTimeZone; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to org.joda.time.DateTimeZone::getOffset(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to org.joda.time.Chronology::withUTC()Lorg/joda/time/Chronology; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>67</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the access to iLocale is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>67</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the access to iLocale is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>67</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the access to iLocale is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to requirePrinter()Lorg/joda/time/format/DateTimePrinter; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getOffset(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to requirePrinter()Lorg/joda/time/format/DateTimePrinter; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getOffset(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to requirePrinter()Lorg/joda/time/format/DateTimePrinter; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getOffset(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to requirePrinter()Lorg/joda/time/format/DateTimePrinter; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getOffset(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>616</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to requirePrinter()Lorg/joda/time/format/DateTimePrinter; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to getOffset(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>the call to org.joda.time.format.DateTimePrinter::printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to org/joda/time/format/DateTimeFormatter::selectChronology with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>37</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>35</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>622</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>28</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>34</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>41</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>616</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::requirePrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>617</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::selectChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>620</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed call to org/joda/time/Chronology::getZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>621</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>21</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed call to org/joda/time/DateTimeZone::getOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed call to org/joda/time/Chronology::withUTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>37</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>44</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>37</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>623</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>44</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>68</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>removed call to org/joda/time/format/DateTimePrinter::printTo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>629</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>63</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1345345587992625</suspValue><description>replaced call to org/joda/time/Chronology::withUTC with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>458</lineNumber><mutator>MethodNameMutator_0</mutator><index>9</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>the call to factory method org.joda.time.DateTimeUtils.getInstantChronology(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/lang/Appendable;Lorg/joda/time/ReadableInstant;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V with a call to printTo(Ljava/io/Writer;J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;)V is guarded</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>removed call to org/joda/time/DateTimeUtils::getInstantMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>458</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>removed call to org/joda/time/DateTimeUtils::getInstantChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;Lorg/joda/time/ReadableInstant;)V</methodDescription><lineNumber>459</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13545709229571928</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::printTo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>655</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>the access to iPrinter is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>655</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>the access to iPrinter is guarded using field iPrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>655</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iPrinter is replaced by the call to org.joda.time.format.DateTimeFormatter::getPrinter()Lorg/joda/time/format/DateTimePrinter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>655</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iPrinter is replaced by the call to org.joda.time.format.DateTimeFormatter::requirePrinter()Lorg/joda/time/format/DateTimePrinter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>655</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>the access to iPrinter is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>655</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>the access to iPrinter is guarded returning field iPrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>replaced return value with null for org/joda/time/format/DateTimeFormatter::requirePrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>656</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requirePrinter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimePrinter;</methodDescription><lineNumber>659</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11973686801784993</suspValue><description>mutated return of Object value for org/joda/time/format/DateTimeFormatter::requirePrinter to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>915</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the call to factory method org.joda.time.DateTimeUtils.getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to iChrono is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>919</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to iZone is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to iChrono is guarded using field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>919</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to iZone is guarded using field iZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronology()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>919</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iZone is replaced by the call to org.joda.time.format.DateTimeFormatter::getZone()Lorg/joda/time/DateTimeZone;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronolgy()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to iChrono is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>919</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to iZone is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to iChrono is guarded returning field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>919</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>the access to iZone is guarded returning field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>replaced call to org/joda/time/DateTimeUtils::getChronology with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>915</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>removed call to org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>31</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>replaced return value with null for org/joda/time/format/DateTimeFormatter::selectChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>916</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>919</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>922</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1064492590824699</suspValue><description>mutated return of Object value for org/joda/time/format/DateTimeFormatter::selectChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>14ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getDayOfMonth(JII)I with a call to getDayOfMonth(JI)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getYear with a call to getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear with a call to getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getYear with a call to getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear with a call to getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getYear with a call to getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear with a call to getWeekOfWeekyear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getYear with a call to getWeekyear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getMonthOfYear with a call to getDaysInMonthMaxForSet</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>30ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getYear with a call to getWeekOfWeekyear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getYear with a call to getDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getYear with a call to getMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to getYear with a call to getDaysInMonthMax</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMonthOfYear(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfMonth(JII)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getYear(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getYear(J)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getYear(J)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>the call to getDayOfMonth(JII)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getMonthOfYear with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getDayOfMonth with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>448</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>449</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>21</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>450</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09133467545550861</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>replaced call to getYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>replaced call to getTotalMillisByYearMonth with a call to getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>43ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>replaced call to getYearMillis with a call to calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getTotalMillisByYearMonth(II)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>106ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>12</block><killingTests/><suspValue>0.08618608271771433</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>20</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>468</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>469</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getTotalMillisByYearMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>26</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getDayOfMonth</mutatedMethod><methodDescription>(JII)I</methodDescription><lineNumber>470</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08618608271771433</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear(JI)I with a call to getMonthOfYear(J)I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>11ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getYear with a call to getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear with a call to getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getYear with a call to getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear with a call to getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getYear with a call to getDayOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear with a call to getWeekOfWeekyear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getYear with a call to getWeekyear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getMonthOfYear with a call to getDaysInMonthMaxForSet</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getYear with a call to getWeekOfWeekyear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getYear with a call to getDayOfWeek</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getYear with a call to getMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to getYear with a call to getDaysInMonthMax</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMonthOfYear(JI)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>the call to getYear(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>the call to getYear(J)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>the call to getYear(J)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>the call to getMonthOfYear(JI)I is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced call to org/joda/time/chrono/BasicChronology::getMonthOfYear with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>7</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>9</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>435</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09661723007927397</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced call to getAverageMillisPerYearDividedByTwo with a call to getAverageMillisPerYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced call to getApproxMillisAtEpochDividedByTwo with a call to getAverageMillisPerYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>40</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced call to getYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced call to getAverageMillisPerYearDividedByTwo with a call to getAverageMillisPerMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced call to getApproxMillisAtEpochDividedByTwo with a call to getAverageMillisPerYearDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>40</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced call to getYearMillis with a call to calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced call to getAverageMillisPerYearDividedByTwo with a call to getApproxMillisAtEpochDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced call to getApproxMillisAtEpochDividedByTwo with a call to getAverageMillisPerMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getAverageMillisPerYearDividedByTwo()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getApproxMillisAtEpochDividedByTwo()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>40</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getAverageMillisPerYearDividedByTwo()J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getApproxMillisAtEpochDividedByTwo()J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>40</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getAverageMillisPerYearDividedByTwo()J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getApproxMillisAtEpochDividedByTwo()J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>40</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getAverageMillisPerYearDividedByTwo()J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getApproxMillisAtEpochDividedByTwo()J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>40</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>the call to getYearMillis(I)J is guarded returning field CACHE_MASK</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>53</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>63</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>9</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>18</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>61</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>Substituted 31536000000 with 31536000001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>10</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>404</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>407</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>53</index><block>3</block><killingTests/><suspValue>0.07971354592720813</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>63</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>399</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getAverageMillisPerYearDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>400</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getApproxMillisAtEpochDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>406</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>97</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>53</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>63</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>401</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>53</index><block>3</block><killingTests/><suspValue>0.07971354592720813</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>411</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>63</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYear</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>428</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>97</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07971354592720813</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iYearInfoCache is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iYearInfoCache is guarded using field iYearInfoCache</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iYear is guarded using field CACHE_SIZE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iYearInfoCache is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>Substituted 1023 with 1024</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>738</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>13</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>40</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>replaced return value with null for org/joda/time/chrono/BasicChronology::getYearInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>13</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>13</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>739</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearInfo</mutatedMethod><methodDescription>(I)Lorg/joda/time/chrono/BasicChronology$YearInfo;</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>40</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>mutated return of Object value for org/joda/time/chrono/BasicChronology::getYearInfo to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iFirstDayMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iFirstDayMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iFirstDayMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the access to iFirstDayMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the call to getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>the call to getYearInfo(I)Lorg/joda/time/chrono/BasicChronology$YearInfo; is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearInfo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMillis</mutatedMethod><methodDescription>(I)J</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0730540297371785</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>replaced call to getYearMillis with a call to getFirstWeekOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>replaced call to getTotalMillisByYearMonth with a call to getYearMonthMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>replaced call to getYearMillis with a call to calculateFirstDayOfYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getTotalMillisByYearMonth(II)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>the call to getYearMillis(I)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>the call to getTotalMillisByYearMonth(II)J is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>23</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>Substituted 86400000 with 86400001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>24</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>386</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>1</block><killingTests/><suspValue>0.07838618016696206</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getTotalMillisByYearMonth</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>26</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>replaced long return with 0 for org/joda/time/chrono/BasicChronology::getYearMonthDayMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicChronology</mutatedClass><mutatedMethod>getYearMonthDayMillis</mutatedMethod><methodDescription>(III)J</methodDescription><lineNumber>387</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07838618016696206</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/BasicChronology::getYearMonthDayMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to iDayOfMonth is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to iDayOfMonth is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfMonth is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>replaced access to iDayOfMonth with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>replaced access to iDayOfMonth with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>replaced access to iDayOfMonth with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>replaced access to iDayOfMonth with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>replaced access to iDayOfMonth with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>replaced access to iDayOfMonth with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to iDayOfMonth is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>the access to iDayOfMonth is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::dayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfMonth</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>228</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0774693511983531</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::dayOfMonth to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to iDayOfYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to iDayOfYear is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDayOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>replaced access to iDayOfYear with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>replaced access to iDayOfYear with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>replaced access to iDayOfYear with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>replaced access to iDayOfYear with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>replaced access to iDayOfYear with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>replaced access to iDayOfYear with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to iDayOfYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>the access to iDayOfYear is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::dayOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>dayOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>232</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1708715315433522</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::dayOfYear to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to iDays is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to iDays is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::millis()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::seconds()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::minutes()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::hours()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iDays is replaced by the call to org.joda.time.chrono.AssembledChronology::halfdays()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to iDays with an access to iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to iDays with an access to iSeconds</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to iDays with an access to iMinutes</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to iDays with an access to iHours</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to iDays with an access to iHalfdays</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced access to iDays with an access to iWeeks</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to iDays is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>the access to iDays is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::days</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>days</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10846522890932808</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::days to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>getParam</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>the access to iParam is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>getParam</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>the access to iParam is guarded using field iParam</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>getParam</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iParam is replaced by the call to org.joda.time.chrono.AssembledChronology::getParam()Ljava/lang/Object;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>getParam</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>the access to iParam is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>getParam</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>the access to iParam is guarded returning field iParam</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>getParam</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::getParam</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>getParam</mutatedMethod><methodDescription>()Ljava/lang/Object;</methodDescription><lineNumber>315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::getParam to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to iHourOfDay is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to iHourOfDay is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iHourOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iHourOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iHourOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iHourOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iHourOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>replaced access to iHourOfDay with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>replaced access to iHourOfDay with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>replaced access to iHourOfDay with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>replaced access to iHourOfDay with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>replaced access to iHourOfDay with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>replaced access to iHourOfDay with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to iHourOfDay is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>the access to iHourOfDay is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::hourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>hourOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07977693643100509</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::hourOfDay to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to iMinuteOfHour is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to iMinuteOfHour is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMinuteOfHour is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMinuteOfHour is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMinuteOfHour is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMinuteOfHour is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMinuteOfHour is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>replaced access to iMinuteOfHour with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>replaced access to iMinuteOfHour with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>replaced access to iMinuteOfHour with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>replaced access to iMinuteOfHour with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>replaced access to iMinuteOfHour with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>replaced access to iMinuteOfHour with an access to iHourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to iMinuteOfHour is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>the access to iMinuteOfHour is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::minuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>minuteOfHour</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>184</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08107737967818576</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::minuteOfHour to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to iMonthOfYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to iMonthOfYear is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonthOfYear is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>replaced access to iMonthOfYear with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>replaced access to iMonthOfYear with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>replaced access to iMonthOfYear with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>replaced access to iMonthOfYear with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>replaced access to iMonthOfYear with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>replaced access to iMonthOfYear with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to iMonthOfYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>the access to iMonthOfYear is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::monthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>monthOfYear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07703712157713453</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::monthOfYear to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to iMonths is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to iMonths is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::millis()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::seconds()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::minutes()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::hours()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iMonths is replaced by the call to org.joda.time.chrono.AssembledChronology::halfdays()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>replaced access to iMonths with an access to iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>replaced access to iMonths with an access to iSeconds</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>replaced access to iMonths with an access to iMinutes</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>replaced access to iMonths with an access to iHours</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>replaced access to iMonths with an access to iHalfdays</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>replaced access to iMonths with an access to iDays</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to iMonths is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>the access to iMonths is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::months</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>472ms</time></test></testsExecutionTime><patchExecutionTime>481ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>months</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11206636293610515</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::months to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>775ms</time></test></testsExecutionTime><patchExecutionTime>787ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to iSecondOfDay is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to iSecondOfDay is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfDay is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>replaced access to iSecondOfDay with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>replaced access to iSecondOfDay with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>replaced access to iSecondOfDay with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>replaced access to iSecondOfDay with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>replaced access to iSecondOfDay with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>replaced access to iSecondOfDay with an access to iHourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to iSecondOfDay is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>the access to iSecondOfDay is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::secondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfDay</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12297509238026913</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::secondOfDay to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to iSecondOfMinute is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to iSecondOfMinute is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfMinute is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfMinute is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfMinute is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfMinute is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iSecondOfMinute is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>replaced access to iSecondOfMinute with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>replaced access to iSecondOfMinute with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>replaced access to iSecondOfMinute with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>replaced access to iSecondOfMinute with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>replaced access to iSecondOfMinute with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>replaced access to iSecondOfMinute with an access to iHourOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to iSecondOfMinute is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>the access to iSecondOfMinute is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::secondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>secondOfMinute</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>172</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08206099398622181</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::secondOfMinute to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to iWeekyear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to iWeekyear is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iWeekyear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iWeekyear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iWeekyear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iWeekyear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iWeekyear is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>replaced access to iWeekyear with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>replaced access to iWeekyear with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>replaced access to iWeekyear with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>replaced access to iWeekyear with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>replaced access to iWeekyear with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>replaced access to iWeekyear with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to iWeekyear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>the access to iWeekyear is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::weekyear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>weekyear</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>248</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1718147118350231</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::weekyear to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to iYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to iYear is guarded using field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfSecond()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>687ms</time></test></testsExecutionTime><patchExecutionTime>701ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::millisOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>864ms</time></test></testsExecutionTime><patchExecutionTime>878ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfMinute()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>879ms</time></test></testsExecutionTime><patchExecutionTime>889ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::secondOfDay()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>738ms</time></test></testsExecutionTime><patchExecutionTime>754ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYear is replaced by the call to org.joda.time.chrono.AssembledChronology::minuteOfHour()Lorg/joda/time/DateTimeField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>548ms</time></test></testsExecutionTime><patchExecutionTime>563ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>replaced access to iYear with an access to iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>932ms</time></test></testsExecutionTime><patchExecutionTime>942ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>replaced access to iYear with an access to iMillisOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1009ms</time></test></testsExecutionTime><patchExecutionTime>1022ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>replaced access to iYear with an access to iSecondOfMinute</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1068ms</time></test></testsExecutionTime><patchExecutionTime>1082ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>replaced access to iYear with an access to iSecondOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1049ms</time></test></testsExecutionTime><patchExecutionTime>1064ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>replaced access to iYear with an access to iMinuteOfHour</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1032ms</time></test></testsExecutionTime><patchExecutionTime>1045ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>replaced access to iYear with an access to iMinuteOfDay</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1062ms</time></test></testsExecutionTime><patchExecutionTime>1075ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to iYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the access to iYear is guarded returning field iMillisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::year</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>year</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeField;</methodDescription><lineNumber>268</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::year to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to iYears is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to iYears is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::millis()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::seconds()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::minutes()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::hours()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to field org.joda.time.chrono.AssembledChronology.iYears is replaced by the call to org.joda.time.chrono.AssembledChronology::halfdays()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>replaced access to iYears with an access to iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>replaced access to iYears with an access to iSeconds</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>replaced access to iYears with an access to iMinutes</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>replaced access to iYears with an access to iHours</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>replaced access to iYears with an access to iHalfdays</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>replaced access to iYears with an access to iDays</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to iYears is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>the access to iYears is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>replaced return value with null for org/joda/time/chrono/AssembledChronology::years</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AssembledChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.AssembledChronology</mutatedClass><mutatedMethod>years</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12251277836633775</suspValue><description>mutated return of Object value for org/joda/time/chrono/AssembledChronology::years to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>47</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>47</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>47</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>47</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>47</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getDaysInYearMonth</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>47</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07865851282345626</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::getYearMillis(I)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>the call to getYearMillis(I)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>23</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>26</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>32</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>41</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>47</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>56</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>59</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>65</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>74</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>21</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>89</index><block>24</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>92</index><block>25</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>95</index><block>26</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>101</index><block>28</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>110</index><block>31</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>116</index><block>33</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>125</index><block>36</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>128</index><block>37</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><block>39</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>143</index><block>42</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>149</index><block>44</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 15356250 with 15356251</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>22</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 7678125 with 7678126</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>25</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 2615625 with 2615626</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>27</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 5062500 with 5062501</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>33</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>36</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>40</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 10209375 with 10209376</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>42</index><block>9</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>46</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 12825000 with 12825001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>11</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>51</index><block>12</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>55</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 23118750 with 23118751</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 17971875 with 17971876</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>60</index><block>15</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 7 with 8</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>64</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 20587500 with 20587501</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>66</index><block>17</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>69</index><block>18</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 9 with 10</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>73</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 25734375 with 25734376</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>75</index><block>20</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>21</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 28265625 with 28265626</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>81</index><block>22</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 11 with 12</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>23</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 12 with 13</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>88</index><block>24</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 15271875 with 15271876</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>91</index><block>25</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 7593750 with 7593751</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>26</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 2615625 with 2615626</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>96</index><block>27</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>100</index><block>28</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 4978125 with 4978126</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>102</index><block>29</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>105</index><block>30</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>109</index><block>31</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 10125000 with 10125001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>111</index><block>32</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 4 with 5</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>115</index><block>33</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 12740625 with 12740626</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>117</index><block>34</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 5 with 6</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>120</index><block>35</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 6 with 7</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>36</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 23034375 with 23034376</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>37</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 17887500 with 17887501</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>129</index><block>38</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 7 with 8</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>133</index><block>39</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 20503125 with 20503126</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>135</index><block>40</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>138</index><block>41</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 9 with 10</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>142</index><block>42</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 25650000 with 25650001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>144</index><block>43</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>148</index><block>44</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 28181250 with 28181251</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>150</index><block>45</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 11 with 12</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>153</index><block>46</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Substituted 12 with 13</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>23</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>26</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>32</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>41</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>47</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>56</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>59</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>65</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>74</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>21</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>89</index><block>24</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>92</index><block>25</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>95</index><block>26</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>101</index><block>28</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>110</index><block>31</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>33</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>125</index><block>36</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>128</index><block>37</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>39</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>143</index><block>42</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>149</index><block>44</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::getYearMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>155</index><block>46</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicGJChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>23</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>26</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>32</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>41</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>47</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>56</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>59</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>65</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>74</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>80</index><block>21</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>89</index><block>24</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>92</index><block>25</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>95</index><block>26</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>101</index><block>28</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>110</index><block>31</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>116</index><block>33</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>125</index><block>36</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>128</index><block>37</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>134</index><block>39</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>143</index><block>42</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>149</index><block>44</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>23</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>26</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>32</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>41</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>47</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>56</index><block>13</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>59</index><block>14</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>65</index><block>16</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>74</index><block>19</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>80</index><block>21</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>89</index><block>24</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>92</index><block>25</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>95</index><block>26</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>101</index><block>28</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>110</index><block>31</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>116</index><block>33</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>125</index><block>36</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>128</index><block>37</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>134</index><block>39</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>143</index><block>42</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>149</index><block>44</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getMonthOfYear</mutatedMethod><methodDescription>(JI)I</methodDescription><lineNumber>93</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>155</index><block>46</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08570991287109667</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>50</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07619393177594593</suspValue><description>the call to org.joda.time.chrono.BasicGJChronology::isLeapYear(I)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>50</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07619393177594593</suspValue><description>the call to isLeapYear(I)Z is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>5</index><block>50</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07619393177594593</suspValue><description>the call to isLeapYear(I)Z is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>5</index><block>50</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07619393177594593</suspValue><description>the call to isLeapYear(I)Z is guarded returning field FEB_29</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>50</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07619393177594593</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>50</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07619393177594593</suspValue><description>removed call to org/joda/time/chrono/BasicGJChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>50</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07619393177594593</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicGJChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicGJChronology</mutatedClass><mutatedMethod>getTotalMillisByYearMonth</mutatedMethod><methodDescription>(II)J</methodDescription><lineNumber>139</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>50</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07619393177594593</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::dateParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::dateParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::localDateParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::localDateParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::dateElementParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::dateElementParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::timeParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::timeParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::localTimeParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>the access to field org.joda.time.format.ISODateTimeFormat.dt is replaced by the call to org.joda.time.format.ISODateTimeFormat::localTimeParser()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to ye</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to ye</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to mye</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to mye</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to dme</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to dme</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to we</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to we</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to wwe</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to wwe</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to dwe</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced access to dt with an access to dwe</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>replaced return value with null for org/joda/time/format/ISODateTimeFormat::dateTime</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>936</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ISODateTimeFormat.java</sourceFile><mutatedClass>org.joda.time.format.ISODateTimeFormat</mutatedClass><mutatedMethod>dateTime</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>942</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>19</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.15339299776947407</suspValue><description>mutated return of Object value for org/joda/time/format/ISODateTimeFormat::dateTime to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the access to iRange is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the access to iRange is guarded using field iRange</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getRange()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the call to org.joda.time.field.PreciseDateTimeField::getUnitMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the access to iRange is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>14</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the access to iRange is guarded returning field iRange</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the call to getUnitMillis()J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>the call to getUnitMillis()J is guarded returning field iRange</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08447772061910234</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08447772061910234</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>Replaced long division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>Replaced long modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08447772061910234</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>removed call to org/joda/time/field/PreciseDateTimeField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>replaced int return with 0 for org/joda/time/field/PreciseDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08447772061910234</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>79</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08447772061910234</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08834522085987723</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>the access to iRange is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>25ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>the access to iRange is guarded using field iRange</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getMaximumValue()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRange is replaced by the call to org.joda.time.field.PreciseDateTimeField::getRange()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>the access to iRange is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>the access to iRange is guarded returning field iRange</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>replaced int return with 0 for org/joda/time/field/PreciseDateTimeField::getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getMaximumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09788175684647929</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.17888543819998318</suspValue><description>the access to iRangeField is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.17888543819998318</suspValue><description>the access to iRangeField is guarded using field iRangeField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.17888543819998318</suspValue><description>the access to field org.joda.time.field.PreciseDateTimeField.iRangeField is replaced by the call to org.joda.time.field.PreciseDateTimeField::getRangeDurationField()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.17888543819998318</suspValue><description>the access to iRangeField is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>122</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.17888543819998318</suspValue><description>the access to iRangeField is guarded returning field iRangeField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.17888543819998318</suspValue><description>replaced return value with null for org/joda/time/field/PreciseDateTimeField::getRangeDurationField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.17888543819998318</suspValue><description>mutated return of Object value for org/joda/time/field/PreciseDateTimeField::getRangeDurationField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Ljava/lang/String;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to verifyValueBounds(Lorg/joda/time/DateTimeField;III)V with a call to verifyValueBounds(Lorg/joda/time/DateTimeFieldType;III)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to getMinimumValue with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to getMaximumValue with a call to getRange</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>6</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced call to getMinimumValue with a call to getRange</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to org.joda.time.field.PreciseDateTimeField::getMinimumValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>8</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to org.joda.time.field.PreciseDateTimeField::getMaximumValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to org.joda.time.field.PreciseDateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>20</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to getMinimumValue()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>8</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to getMaximumValue()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to get(J)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to getMinimumValue()I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>8</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to getMaximumValue()I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>the call to get(J)I is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>22</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>Replaced long addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>removed call to org/joda/time/field/PreciseDateTimeField::getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>removed call to org/joda/time/field/PreciseDateTimeField::getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>removed call to org/joda/time/field/PreciseDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>23</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>112</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDateTimeField::set</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDateTimeField</mutatedClass><mutatedMethod>set</mutatedMethod><methodDescription>(JI)J</methodDescription><lineNumber>111</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>9</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12216944435630522</suspValue><description>removed call to org/joda/time/field/FieldUtils::verifyValueBounds</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>the access to iPrintedLengthEstimate is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>the access to iPrintedLengthEstimate is guarded using field iPrintedLengthEstimate</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$Composite.iPrintedLengthEstimate is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$Composite::estimatePrintedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$Composite.iPrintedLengthEstimate is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$Composite::estimateParsedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>replaced access to iPrintedLengthEstimate with an access to iParsedLengthEstimate</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>the access to iPrintedLengthEstimate is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>the access to iPrintedLengthEstimate is guarded returning field iPrintedLengthEstimate</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>replaced int return with 0 for org/joda/time/format/DateTimeFormatterBuilder$Composite::estimatePrintedLength</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>estimatePrintedLength</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>2504</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12391564216175795</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>MethodNameMutator_0</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>the call to factory method java.util.Locale.getDefault()Ljava/util/Locale; is replaced by an instantiation of type java.util.Locale using (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>MethodNameMutator_4</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>the call to factory method java.util.Locale.getDefault()Ljava/util/Locale; is replaced by an instantiation of type java.util.Locale using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/lang/StringBuffer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V with a call to printTo(Ljava/io/Writer;Lorg/joda/time/ReadablePartial;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iPrinters is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iPrinters is guarded using field iPrinters</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iPrinters is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iPrinters is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2510</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iPrinters is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to org.joda.time.format.DateTimePrinter::printTo(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V is guarded</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>36</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>51</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>31</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>36</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2517</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13850867221288873</suspValue><description>removed call to java/util/Locale::getDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2511</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2515</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>36</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2521</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>36</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$Composite</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>2522</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>48</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed call to org/joda/time/format/DateTimePrinter::printTo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09025873648130484</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09025873648130484</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09025873648130484</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09025873648130484</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09025873648130484</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09025873648130484</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09025873648130484</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>verifyValueBounds</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeField;III)V</methodDescription><lineNumber>214</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09025873648130484</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Ljava/lang/Object;Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>44ms</time></test></testsExecutionTime><patchExecutionTime>119ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>174</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13005121775247103</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>MethodNameMutator_0</mutator><index>15</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to factory method org.joda.time.DateTime.getChronology()Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIILorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIILorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIILorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>57ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIILorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIILorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;)V with a call to &#60;init&#62;(IIIIILorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to org.joda.time.DateTime::getMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to org.joda.time.DateTime::getChronology()Lorg/joda/time/Chronology; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to getMillis()J is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>the call to getChronology()Lorg/joda/time/Chronology; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to org/joda/time/DateTime::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to org/joda/time/DateTime::getMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed call to org/joda/time/DateTime::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>18</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>replaced return value with null for org/joda/time/DateTime::withMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>7</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTime.java</sourceFile><mutatedClass>org.joda.time.DateTime</mutatedClass><mutatedMethod>withMillis</mutatedMethod><methodDescription>(J)Lorg/joda/time/DateTime;</methodDescription><lineNumber>536</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>18</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.20412414523193154</suspValue><description>mutated return of Object value for org/joda/time/DateTime::withMillis to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.053009201208046315</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>12</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0569571771811174</suspValue><description>replaced return value with null for org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.053009201208046315</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>252</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.053009201208046315</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>10</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0569571771811174</suspValue><description>mutated return of Object value for org/joda/time/DateTimeUtils::getChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>167</lineNumber><mutator>MethodNameMutator_0</mutator><index>12</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>the call to factory method org.joda.time.ReadableInstant.getChronology()Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>the call to org.joda.time.ReadableInstant::getChronology()Lorg/joda/time/Chronology; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>167</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>the call to getChronology()Lorg/joda/time/Chronology; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1149919149152138</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>167</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>removed call to org/joda/time/ReadableInstant::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>25</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>replaced return value with null for org/joda/time/DateTimeUtils::getInstantChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1149919149152138</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>17</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>164</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1149919149152138</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>168</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>17</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantChronology</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>171</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>25</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11754541987684666</suspValue><description>mutated return of Object value for org/joda/time/DateTimeUtils::getInstantChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantMillis</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)J</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11377602479771486</suspValue><description>the call to org.joda.time.ReadableInstant::getMillis()J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantMillis</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)J</methodDescription><lineNumber>149</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11377602479771486</suspValue><description>the call to getMillis()J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>39ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantMillis</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11128297681493145</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantMillis</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)J</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11377602479771486</suspValue><description>removed call to org/joda/time/ReadableInstant::getMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantMillis</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)J</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11377602479771486</suspValue><description>replaced long return with 0 for org/joda/time/DateTimeUtils::getInstantMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantMillis</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11128297681493145</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantMillis</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)J</methodDescription><lineNumber>146</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11128297681493145</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getInstantMillis</mutatedMethod><methodDescription>(Lorg/joda/time/ReadableInstant;)J</methodDescription><lineNumber>149</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11377602479771486</suspValue><description>replaced return of long value with value + 1 for org/joda/time/DateTimeUtils::getInstantMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1273859510596964</suspValue><description>the access to iUnitField is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1273859510596964</suspValue><description>the access to iUnitField is guarded using field iUnitField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1273859510596964</suspValue><description>the access to field org.joda.time.field.PreciseDurationDateTimeField.iUnitField is replaced by the call to org.joda.time.field.PreciseDurationDateTimeField::getDurationField()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1273859510596964</suspValue><description>the access to iUnitField is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1273859510596964</suspValue><description>the access to iUnitField is guarded returning field iUnitField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1273859510596964</suspValue><description>replaced return value with null for org/joda/time/field/PreciseDurationDateTimeField::getDurationField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1273859510596964</suspValue><description>mutated return of Object value for org/joda/time/field/PreciseDurationDateTimeField::getDurationField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getMinimumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09889363528682975</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getMinimumValue</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>150</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09889363528682975</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>40ms</time></test></testsExecutionTime><patchExecutionTime>101ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0832250378576479</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0832250378576479</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0832250378576479</suspValue><description>the access to field org.joda.time.field.PreciseDurationDateTimeField.iUnitMillis is replaced by the call to org.joda.time.field.PreciseDurationDateTimeField::getUnitMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0832250378576479</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0832250378576479</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0832250378576479</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDurationDateTimeField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>154</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0832250378576479</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDurationDateTimeField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to field org.joda.time.field.PreciseDurationDateTimeField.iUnitMillis is replaced by the call to org.joda.time.field.PreciseDurationDateTimeField::getUnitMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14433756729740646</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1424940999758193</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1424940999758193</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>12</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14433756729740646</suspValue><description>Replaced long modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1424940999758193</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>13</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDurationDateTimeField::remainder</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1424940999758193</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1424940999758193</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationDateTimeField</mutatedClass><mutatedMethod>remainder</mutatedMethod><methodDescription>(J)J</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>13</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.14433756729740646</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDurationDateTimeField::remainder</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the access to field org.joda.time.base.BaseDateTime.iChronology is replaced by the call to org.joda.time.base.BaseDateTime::setChronology(Lorg/joda/time/Chronology;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the access to field org.joda.time.base.BaseDateTime.iChronology is replaced by the call to org.joda.time.base.BaseDateTime::getChronology()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the access to field org.joda.time.base.BaseDateTime.iMillis is replaced by the call to org.joda.time.base.BaseDateTime::setMillis(J)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to org.joda.time.base.BaseDateTime::checkChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to org.joda.time.base.BaseDateTime::checkInstant(JLorg/joda/time/Chronology;)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the access to iChronology is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>18</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the access to iChronology is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>18</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the access to iChronology is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkInstant(JLorg/joda/time/Chronology;)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkInstant(JLorg/joda/time/Chronology;)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkInstant(JLorg/joda/time/Chronology;)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkInstant(JLorg/joda/time/Chronology;)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>the call to checkInstant(JLorg/joda/time/Chronology;)J is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>replaced call to org/joda/time/base/BaseDateTime::checkChronology with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>replaced call to org/joda/time/base/BaseDateTime::checkInstant with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>removed call to org/joda/time/base/BaseDateTime::checkChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>removed call to org/joda/time/base/BaseDateTime::checkInstant</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>Removed assignment to member variable iChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.10127393670836667</suspValue><description>Removed assignment to member variable iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>checkChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>270</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07767356373806174</suspValue><description>the call to factory method org.joda.time.DateTimeUtils.getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>checkChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07767356373806174</suspValue><description>replaced call to org/joda/time/DateTimeUtils::getChronology with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>38ms</time></test></testsExecutionTime><patchExecutionTime>46ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>checkChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07767356373806174</suspValue><description>removed call to org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>checkChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07767356373806174</suspValue><description>replaced return value with null for org/joda/time/base/BaseDateTime::checkChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>checkChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>270</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07767356373806174</suspValue><description>mutated return of Object value for org/joda/time/base/BaseDateTime::checkChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>checkInstant</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)J</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08188884990323429</suspValue><description>replaced long return with 0 for org/joda/time/base/BaseDateTime::checkInstant</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>checkInstant</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;)J</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08188884990323429</suspValue><description>replaced return of long value with value + 1 for org/joda/time/base/BaseDateTime::checkInstant</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08351476906593233</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08351476906593233</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08351476906593233</suspValue><description>the access to field org.joda.time.base.BaseDateTime.iChronology is replaced by the call to org.joda.time.base.BaseDateTime::getChronology()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08351476906593233</suspValue><description>the access to iChronology is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>304</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08351476906593233</suspValue><description>the access to iChronology is guarded returning field iChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08351476906593233</suspValue><description>replaced return value with null for org/joda/time/base/BaseDateTime::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>304</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08351476906593233</suspValue><description>mutated return of Object value for org/joda/time/base/BaseDateTime::getChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07591896180011233</suspValue><description>the access to iMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07591896180011233</suspValue><description>the access to iMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>109ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07591896180011233</suspValue><description>the access to field org.joda.time.base.BaseDateTime.iMillis is replaced by the call to org.joda.time.base.BaseDateTime::getMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07591896180011233</suspValue><description>the access to iMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>295</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07591896180011233</suspValue><description>the access to iMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07591896180011233</suspValue><description>replaced long return with 0 for org/joda/time/base/BaseDateTime::getMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTime.java</sourceFile><mutatedClass>org.joda.time.base.BaseDateTime</mutatedClass><mutatedMethod>getMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>295</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07591896180011233</suspValue><description>replaced return of long value with value + 1 for org/joda/time/base/BaseDateTime::getMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>MethodNameMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to factory method org.joda.time.DateTimeFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.DateTimeField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>MethodNameMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to factory method org.joda.time.DateTimeFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;Lorg/joda/time/DateTimeFieldType;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>MethodNameMutator_6</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to factory method org.joda.time.DateTimeFieldType.getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is replaced by an instantiation of type org.joda.time.field.DelegatedDateTimeField using (Lorg/joda/time/DateTimeField;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1412</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>20</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>catch type java/lang/RuntimeException is replaced with java/lang/Exception</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iFieldType is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>15</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iMinPrintedDigits is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>15</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iMinPrintedDigits is guarded using field iMinPrintedDigits</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>15</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to field org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber.iMinPrintedDigits is replaced by the call to org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber::estimatePrintedLength()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to get with a call to getLeapAmount</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to get with a call to getMinimumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>replaced call to get with a call to getMaximumValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to org.joda.time.DateTimeFieldType::getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to org.joda.time.DateTimeField::get(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iFieldType is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>15</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iMinPrintedDigits is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iFieldType is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>15</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iMinPrintedDigits is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iFieldType is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>15</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the access to iMinPrintedDigits is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to get(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to get(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to get(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to get(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to getField(Lorg/joda/time/Chronology;)Lorg/joda/time/DateTimeField; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>the call to get(J)I is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1408</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed call to org/joda/time/DateTimeFieldType::getField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed call to org/joda/time/DateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$PaddedNumber</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1409</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>16</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13608276348795434</suspValue><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>113ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>MethodNameMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>MethodNameMutator_4</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the access to iValue is guarded using value &#39;\0&#39;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the access to iValue is guarded using field iValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the access to iValue is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_1</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the access to iValue is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the access to iValue is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$CharacterLiteral</mutatedClass><mutatedMethod>printTo</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;JLorg/joda/time/Chronology;ILorg/joda/time/DateTimeZone;Ljava/util/Locale;)V</methodDescription><lineNumber>1151</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.13671718540493266</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getApproxMillisAtEpochDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0823736084286954</suspValue><description>Substituted 31083597720000 with 31083597720001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getApproxMillisAtEpochDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0823736084286954</suspValue><description>replaced long return with 0 for org/joda/time/chrono/GregorianChronology::getApproxMillisAtEpochDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getApproxMillisAtEpochDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>241</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0823736084286954</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/GregorianChronology::getApproxMillisAtEpochDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>99ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getAverageMillisPerYearDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0823736084286954</suspValue><description>Substituted 15778476000 with 15778476001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getAverageMillisPerYearDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0823736084286954</suspValue><description>replaced long return with 0 for org/joda/time/chrono/GregorianChronology::getAverageMillisPerYearDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getAverageMillisPerYearDividedByTwo</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>233</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>7</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.0823736084286954</suspValue><description>replaced return of long value with value + 1 for org/joda/time/chrono/GregorianChronology::getAverageMillisPerYearDividedByTwo</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMaxYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07758584652912108</suspValue><description>Substituted 292278993 with 292278994</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMaxYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07758584652912108</suspValue><description>replaced int return with 0 for org/joda/time/chrono/GregorianChronology::getMaxYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMaxYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>225</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>6</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07758584652912108</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMinYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07761505257063328</suspValue><description>Substituted -292275054 with -292275053</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMinYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07761505257063328</suspValue><description>replaced int return with 0 for org/joda/time/chrono/GregorianChronology::getMinYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>getMinYear</mutatedMethod><methodDescription>()I</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>5</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07761505257063328</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>21</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>replaced boolean return with false for org/joda/time/chrono/GregorianChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanTrueReturnValsMutator</mutator><index>21</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>replaced boolean return with true for org/joda/time/chrono/GregorianChronology::isLeapYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>Substituted 400 with 401</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>19</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>Replaced bitwise AND with OR</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>9</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>Replaced integer modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>Replaced integer modulus with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>GregorianChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.GregorianChronology</mutatedClass><mutatedMethod>isLeapYear</mutatedMethod><methodDescription>(I)Z</methodDescription><lineNumber>197</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>21</index><block>4</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.07382134705255622</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>MethodNameMutator_0</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>the call to factory method org.joda.time.format.ISODateTimeFormat.dateTime()Lorg/joda/time/format/DateTimeFormatter; is replaced by an instantiation of type org.joda.time.format.DateTimeFormatter using (Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>the call to factory method org.joda.time.format.DateTimeFormatter.print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>MethodNameMutator_4</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>the call to factory method org.joda.time.format.DateTimeFormatter.print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(J)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(J)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(J)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(J)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(J)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(J)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; with a call to print(Lorg/joda/time/ReadablePartial;)Ljava/lang/String;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to dateParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to localDateParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to dateElementParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_3</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to timeParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_4</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to localTimeParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_5</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to timeElementParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_6</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to dateTimeParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_7</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to dateOptionalTimeParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_8</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to localDateOptionalTimeParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_9</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced call to dateTime with a call to date</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>the call to print(Lorg/joda/time/ReadableInstant;)Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/base/AbstractInstant::toString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>removed call to org/joda/time/format/ISODateTimeFormat::dateTime</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::print</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>AbstractInstant.java</sourceFile><mutatedClass>org.joda.time.base.AbstractInstant</mutatedClass><mutatedMethod>toString</mutatedMethod><methodDescription>()Ljava/lang/String;</methodDescription><lineNumber>424</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1920061442949277</suspValue><description>mutated return of Object value for org/joda/time/base/AbstractInstant::toString to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeFieldType;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1531679162134967</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeFieldType;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1531679162134967</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>105ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeFieldType;)V</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1531679162134967</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDateTimeField</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeFieldType;)V</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>2</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1531679162134967</suspValue><description>Removed assignment to member variable iType</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getMonthOfYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>the access to iChronology is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>the access to iChronology is guarded returning field MIN</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>the call to getMonthOfYear(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>the call to getMonthOfYear(J)I is guarded returning field MIN</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>the call to getMonthOfYear(J)I is guarded returning field iMax</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getMonthOfYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicMonthOfYearDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>72</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.09309881282314554</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>the call to factory method org.joda.time.chrono.BasicChronology.years()Lorg/joda/time/DurationField; is replaced by an instantiation of type org.joda.time.DurationField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>the call to org.joda.time.chrono.BasicChronology::years()Lorg/joda/time/DurationField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>the access to iChronology is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>the call to years()Lorg/joda/time/DurationField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::years</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>replaced return value with null for org/joda/time/chrono/BasicMonthOfYearDateTimeField::getRangeDurationField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicMonthOfYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicMonthOfYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18772930178557284</suspValue><description>mutated return of Object value for org/joda/time/chrono/BasicMonthOfYearDateTimeField::getRangeDurationField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08843153765707637</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08843153765707637</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08843153765707637</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getDayOfMonth(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08843153765707637</suspValue><description>the access to iChronology is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08843153765707637</suspValue><description>the call to getDayOfMonth(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08843153765707637</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getDayOfMonth</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08843153765707637</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicDayOfMonthDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>47</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08843153765707637</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>MethodNameMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>the call to factory method org.joda.time.chrono.BasicChronology.months()Lorg/joda/time/DurationField; is replaced by an instantiation of type org.joda.time.DurationField using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>the call to org.joda.time.chrono.BasicChronology::months()Lorg/joda/time/DurationField; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>the access to iChronology is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>the call to months()Lorg/joda/time/DurationField; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::months</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>replaced return value with null for org/joda/time/chrono/BasicDayOfMonthDateTimeField::getRangeDurationField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicDayOfMonthDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicDayOfMonthDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>51</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18856180831641267</suspValue><description>mutated return of Object value for org/joda/time/chrono/BasicDayOfMonthDateTimeField::getRangeDurationField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>the access to field org.joda.time.DateTimeFieldType.MILLIS_OF_SECOND_TYPE is replaced by the call to org.joda.time.DateTimeFieldType::millisOfSecond()Lorg/joda/time/DateTimeFieldType;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>the access to field org.joda.time.DateTimeFieldType.MILLIS_OF_SECOND_TYPE is replaced by the call to org.joda.time.DateTimeFieldType::millisOfDay()Lorg/joda/time/DateTimeFieldType;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>the access to field org.joda.time.DateTimeFieldType.MILLIS_OF_SECOND_TYPE is replaced by the call to org.joda.time.DateTimeFieldType::secondOfMinute()Lorg/joda/time/DateTimeFieldType;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_3</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>the access to field org.joda.time.DateTimeFieldType.MILLIS_OF_SECOND_TYPE is replaced by the call to org.joda.time.DateTimeFieldType::secondOfDay()Lorg/joda/time/DateTimeFieldType;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_4</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>the access to field org.joda.time.DateTimeFieldType.MILLIS_OF_SECOND_TYPE is replaced by the call to org.joda.time.DateTimeFieldType::minuteOfHour()Lorg/joda/time/DateTimeFieldType;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>replaced access to MILLIS_OF_SECOND_TYPE with an access to ERA_TYPE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_1</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>replaced access to MILLIS_OF_SECOND_TYPE with an access to YEAR_OF_ERA_TYPE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_2</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>replaced access to MILLIS_OF_SECOND_TYPE with an access to CENTURY_OF_ERA_TYPE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_3</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>replaced access to MILLIS_OF_SECOND_TYPE with an access to YEAR_OF_CENTURY_TYPE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_4</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>replaced access to MILLIS_OF_SECOND_TYPE with an access to YEAR_TYPE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_5</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>replaced access to MILLIS_OF_SECOND_TYPE with an access to DAY_OF_YEAR_TYPE</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>replaced return value with null for org/joda/time/DateTimeFieldType::millisOfSecond</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFieldType.java</sourceFile><mutatedClass>org.joda.time.DateTimeFieldType</mutatedClass><mutatedMethod>millisOfSecond</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeFieldType;</methodDescription><lineNumber>163</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08455318085801516</suspValue><description>mutated return of Object value for org/joda/time/DateTimeFieldType::millisOfSecond to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to this$0 is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to this$0 is guarded using field this$0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to this$0 is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to this$0 is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced long return with 0 for org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField$LinkedDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>160</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1460593486680443</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/ImpreciseDateTimeField$LinkedDurationField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08489527199560178</suspValue><description>the access to iChronology is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08489527199560178</suspValue><description>the access to iChronology is guarded using field iChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08489527199560178</suspValue><description>the call to org.joda.time.chrono.BasicChronology::getYear(J)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08489527199560178</suspValue><description>the access to iChronology is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08489527199560178</suspValue><description>the call to getYear(J)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08489527199560178</suspValue><description>removed call to org/joda/time/chrono/BasicChronology::getYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08489527199560178</suspValue><description>replaced int return with 0 for org/joda/time/chrono/BasicYearDateTimeField::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>get</mutatedMethod><methodDescription>(J)I</methodDescription><lineNumber>54</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>7</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.08489527199560178</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BasicYearDateTimeField.java</sourceFile><mutatedClass>org.joda.time.chrono.BasicYearDateTimeField</mutatedClass><mutatedMethod>getRangeDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>95</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.18650096164806276</suspValue><description>mutated return of Object value for org/joda/time/chrono/BasicYearDateTimeField::getRangeDurationField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to iDurationField is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to iDurationField is guarded using field iDurationField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to field org.joda.time.field.ImpreciseDateTimeField.iDurationField is replaced by the call to org.joda.time.field.ImpreciseDateTimeField::getDurationField()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>9ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to field org.joda.time.field.ImpreciseDateTimeField.iDurationField is replaced by the call to org.joda.time.field.ImpreciseDateTimeField::getRangeDurationField()Lorg/joda/time/DurationField;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to iDurationField is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>137</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1649572197684645</suspValue><description>the access to iDurationField is guarded returning field iDurationField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1649572197684645</suspValue><description>replaced return value with null for org/joda/time/field/ImpreciseDateTimeField::getDurationField</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ImpreciseDateTimeField.java</sourceFile><mutatedClass>org.joda.time.field.ImpreciseDateTimeField</mutatedClass><mutatedMethod>getDurationField</mutatedMethod><methodDescription>()Lorg/joda/time/DurationField;</methodDescription><lineNumber>137</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.1649572197684645</suspValue><description>mutated return of Object value for org/joda/time/field/ImpreciseDateTimeField::getDurationField to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>108ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11764705882352941</suspValue><description>the access to iUnitMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>42ms</time></test></testsExecutionTime><patchExecutionTime>97ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11764705882352941</suspValue><description>the access to iUnitMillis is guarded using field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11764705882352941</suspValue><description>the access to field org.joda.time.field.PreciseDurationField.iUnitMillis is replaced by the call to org.joda.time.field.PreciseDurationField::getUnitMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11764705882352941</suspValue><description>the access to iUnitMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>63</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11764705882352941</suspValue><description>the access to iUnitMillis is guarded returning field serialVersionUID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11764705882352941</suspValue><description>replaced long return with 0 for org/joda/time/field/PreciseDurationField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>PreciseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.PreciseDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.11764705882352941</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/PreciseDurationField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>86</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>the call to factory method org.joda.time.chrono.ZonedChronology.getParam()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>the call to org.joda.time.chrono.ZonedChronology::getParam()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>86</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>the call to getParam()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>41ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>removed call to org/joda/time/chrono/ZonedChronology::getParam</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>replaced return value with null for org/joda/time/chrono/ZonedChronology::getZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZonedChronology.java</sourceFile><mutatedClass>org.joda.time.chrono.ZonedChronology</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>86</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.06038466786391684</suspValue><description>mutated return of Object value for org/joda/time/chrono/ZonedChronology::getZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>isSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12182898077463453</suspValue><description>replaced boolean return with false for org/joda/time/field/BaseDurationField::isSupported</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>546ms</time></test></testsExecutionTime><patchExecutionTime>559ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>isSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12182898077463453</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>397ms</time></test></testsExecutionTime><patchExecutionTime>408ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>BaseDurationField.java</sourceFile><mutatedClass>org.joda.time.field.BaseDurationField</mutatedClass><mutatedMethod>isSupported</mutatedMethod><methodDescription>()Z</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.12182898077463453</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>427ms</time></test></testsExecutionTime><patchExecutionTime>487ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21320071635561041</suspValue><description>Substituted 1 with 2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>103ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced long return with 0 for org/joda/time/field/MillisDurationField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>MillisDurationField.java</sourceFile><mutatedClass>org.joda.time.field.MillisDurationField</mutatedClass><mutatedMethod>getUnitMillis</mutatedMethod><methodDescription>()J</methodDescription><lineNumber>80</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</killingTests><suspValue>0.21320071635561041</suspValue><description>replaced return of long value with value + 1 for org/joda/time/field/MillisDurationField::getUnitMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZoneCutover.testWithMillisOfSecondInDstChange_Paris_summer(org.joda.time.TestDateTimeZoneCutover)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
</mutations>
