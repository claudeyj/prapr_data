<?xml version="1.0" encoding="UTF-8"?>
<mutations>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>57</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.14744195615489714</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>57</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.14744195615489714</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>691</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>57</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.14744195615489714</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;)V</methodDescription><lineNumber>694</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>59</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.14907119849998599</suspValue><description>Removed assignment to member variable iID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>MethodNameMutator_0</mutator><index>23</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to factory method java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>359</lineNumber><mutator>MethodNameMutator_0</mutator><index>33</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to factory method java.lang.ref.Reference.get()Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>MethodNameMutator_0</mutator><index>62</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to factory method java.util.Map.put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>61</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>61</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>61</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>61</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>61</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>61</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/Object;)V with a call to &#60;init&#62;(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>42</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced access to iFixedOffsetCache with an access to cZoneIdConversion</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>21</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced access to iFixedOffsetCache with an access to cZoneIdConversion</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>56</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced access to iFixedOffsetCache with an access to cZoneIdConversion</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>23</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>23</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to java.util.Map::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>33</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to java.lang.ref.Reference::get()Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>62</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to java.util.Map::put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>33</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to get()Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>62</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>23</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>33</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to get()Ljava/lang/Object; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>62</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>23</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>359</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>33</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>the call to get()Ljava/lang/Object; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>62</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>the call to put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>23</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced call to java/util/Map::get with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>62</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced call to java/util/Map::put with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>364</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>52</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to org/joda/time/tz/FixedDateTimeZone::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>61</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to java/lang/ref/SoftReference::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>40</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>42</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>29</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>39</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed call to java/util/Map::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>359</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed call to java/lang/ref/Reference::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>removed call to java/util/Map::put</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>43</index><block>45</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::fixedOffsetZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>67</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::fixedOffsetZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>40</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>42</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>29</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>39</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>350</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>40</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>42</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>29</index><block>43</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>360</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>39</index><block>44</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>361</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>43</index><block>45</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16222142113076254</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::fixedOffsetZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>fixedOffsetZone</mutatedMethod><methodDescription>(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>366</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>67</index><block>46</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.31622776601683794</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::fixedOffsetZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>MethodNameMutator_0</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.DateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>220</lineNumber><mutator>MethodNameMutator_0</mutator><index>62</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>221</lineNumber><mutator>MethodNameMutator_0</mutator><index>68</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.joda.time.DateTimeZone.fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.DateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>MethodNameMutator_1</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.TestDateTimeZone$MockDateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>221</lineNumber><mutator>MethodNameMutator_1</mutator><index>68</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.joda.time.DateTimeZone.fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.TestDateTimeZone$MockDateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>MethodNameMutator_2</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the call to factory method org.joda.time.tz.Provider.getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.MockZone using (JII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>221</lineNumber><mutator>MethodNameMutator_2</mutator><index>68</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.joda.time.DateTimeZone.fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.MockZone using (JII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>220</lineNumber><mutator>MethodNameMutator_4</mutator><index>62</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to factory method org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>35ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith(Ljava/lang/String;)Z with a call to startsWith(Ljava/lang/String;I)Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>21</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the access to field org.joda.time.DateTimeZone.cProvider is replaced by the call to org.joda.time.DateTimeZone::getProvider()Lorg/joda/time/tz/Provider;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>21</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the access to field org.joda.time.DateTimeZone.cProvider is replaced by the call to org.joda.time.DateTimeZone::getDefaultProvider()Lorg/joda/time/tz/Provider;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>31ms</time></test></testsExecutionTime><patchExecutionTime>49ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to equalsIgnoreCase</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>56ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to endsWith</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>125ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_2</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced call to startsWith with a call to matches</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>the call to java.lang.String::equals(Ljava/lang/Object;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the call to org.joda.time.tz.Provider::getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to java.lang.String::startsWith(Ljava/lang/String;)Z is guarded using default value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>the call to equals(Ljava/lang/Object;)Z is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>the call to getZone(Ljava/lang/String;)Lorg/joda/time/DateTimeZone; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>the call to startsWith(Ljava/lang/String;)Z is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>24</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>28</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>42</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>54</index><block>24</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>removed call to java/lang/String::equals</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>211</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>23</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>removed call to org/joda/time/tz/Provider::getZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>37</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>41</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to java/lang/String::startsWith</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>216</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>46</index><block>24</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/joda/time/DateTimeZone::parseOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>220</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>62</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/joda/time/DateTimeZone::printOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>68</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed call to org/joda/time/DateTimeZone::fixedOffsetZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>69</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::forID</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>14</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>28</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>38</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>42</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>54</index><block>24</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>205</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>208</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>14</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08006407690254357</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>212</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>28</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08164965809277261</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>38</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>215</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>42</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>48ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>217</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>54</index><block>24</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forID</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>221</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>69</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.3333333333333333</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::forID to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>MethodNameMutator_0</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>MethodNameMutator_0</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>MethodNameMutator_0</mutator><index>29</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>MethodNameMutator_0</mutator><index>82</index><block>38</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to factory method org.joda.time.DateTimeZone.forOffsetMillis(I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.DateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>MethodNameMutator_1</mutator><index>82</index><block>38</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to factory method org.joda.time.DateTimeZone.forOffsetMillis(I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.TestDateTimeZone$MockDateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>MethodNameMutator_2</mutator><index>82</index><block>38</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>the call to factory method org.joda.time.DateTimeZone.forOffsetMillis(I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.MockZone using (JII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>MethodNameMutator_4</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.append(Ljava/lang/String;)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>MethodNameMutator_4</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.append(I)Ljava/lang/StringBuilder; is replaced by an instantiation of type java.lang.StringBuilder using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>MethodNameMutator_4</mutator><index>29</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to factory method java.lang.StringBuilder.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>67ms</time></test></testsExecutionTime><patchExecutionTime>86ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>124ms</time></test></testsExecutionTime><patchExecutionTime>146ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>207ms</time></test></testsExecutionTime><patchExecutionTime>246ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>228ms</time></test></testsExecutionTime><patchExecutionTime>269ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(I)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/String;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(C)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/String;Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append(I)Ljava/lang/StringBuilder; with a call to append(Ljava/lang/StringBuffer;)Ljava/lang/StringBuilder;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to &#60;init&#62;(Ljava/lang/String;)V with a call to &#60;init&#62;(Ljava/lang/Throwable;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>272</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>69</index><block>37</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>catch type java/lang/ArithmeticException is replaced with java/lang/RuntimeException</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>the access to field org.joda.time.DateTimeZone.UTC is replaced by the call to org.joda.time.DateTimeZone::getDefault()Lorg/joda/time/DateTimeZone;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>256</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced access to UTC with an access to cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append with a call to appendCodePoint</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>263</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>40</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to safeMultiply with a call to safeAdd</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>265</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>51</index><block>35</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to safeAdd with a call to safeMultiply</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>52ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>267</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>58</index><block>36</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.25</suspValue><description>replaced call to safeAdd with a call to safeMultiply</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>269</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>64</index><block>36</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to safeMultiply with a call to safeAdd</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>82</index><block>38</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to forOffsetMillis with a call to forOffsetHours</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_1</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to append with a call to deleteCharAt</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to java.lang.StringBuilder::append(Ljava/lang/String;)Ljava/lang/StringBuilder; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to java.lang.StringBuilder::append(I)Ljava/lang/StringBuilder; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>29</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to java.lang.StringBuilder::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to append(I)Ljava/lang/StringBuilder; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>29</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to append(I)Ljava/lang/StringBuilder; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>29</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning field UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to append(Ljava/lang/String;)Ljava/lang/StringBuilder; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to append(I)Ljava/lang/StringBuilder; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>29</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning field cDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>40</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to org/joda/time/field/FieldUtils::safeMultiply with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>51</index><block>35</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.4082482904638631</suspValue><description>replaced call to org/joda/time/field/FieldUtils::safeAdd with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>58</index><block>36</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.25</suspValue><description>replaced call to org/joda/time/field/FieldUtils::safeAdd with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>64</index><block>36</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced call to org/joda/time/field/FieldUtils::safeMultiply with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>45</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>24</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/StringBuilder::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>30</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/IllegalArgumentException::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>Substituted 59 with 60</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>261</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>34</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>Substituted 60 with 61</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>63</index><block>36</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>Substituted 60000 with 60001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>50</index><block>35</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>45</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/StringBuilder::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/StringBuilder::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>29</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>removed call to java/lang/StringBuilder::toString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>263</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>40</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeMultiply</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>265</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>51</index><block>35</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.4082482904638631</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>267</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>58</index><block>36</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.25</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>269</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>64</index><block>36</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to org/joda/time/field/FieldUtils::safeMultiply</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>38</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed call to org/joda/time/DateTimeZone::forOffsetMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>10</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetHoursMinutes</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>83</index><block>38</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetHoursMinutes</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>255</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>14</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>17</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>45</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>14</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>258</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>17</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>264</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>45</index><block>34</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>256</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>10</index><block>30</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.7071067811865475</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::forOffsetHoursMinutes to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>273</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>38</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.22360679774997896</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::forOffsetHoursMinutes to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>26</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to java/lang/StringBuilder::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetHoursMinutes</mutatedMethod><methodDescription>(II)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>259</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>28</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>1.0</suspValue><description>replaced call to java/lang/StringBuilder::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>283</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to factory method org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>284</lineNumber><mutator>MethodNameMutator_0</mutator><index>10</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to factory method org.joda.time.DateTimeZone.fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.DateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>284</lineNumber><mutator>MethodNameMutator_1</mutator><index>10</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to factory method org.joda.time.DateTimeZone.fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.TestDateTimeZone$MockDateTimeZone using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>284</lineNumber><mutator>MethodNameMutator_2</mutator><index>10</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to factory method org.joda.time.DateTimeZone.fixedOffsetZone(Ljava/lang/String;I)Lorg/joda/time/DateTimeZone; is replaced by an instantiation of type org.joda.time.MockZone using (JII)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>36ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>283</lineNumber><mutator>MethodNameMutator_4</mutator><index>4</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>the call to factory method org.joda.time.DateTimeZone.printOffset(I)Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>283</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/joda/time/DateTimeZone::printOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>10</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>removed call to org/joda/time/DateTimeZone::fixedOffsetZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>11</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::forOffsetMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>forOffsetMillis</mutatedMethod><methodDescription>(I)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>284</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>11</index><block>39</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18257418583505536</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::forOffsetMillis to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.017482090031876642</suspValue><description>the access to field org.joda.time.DateTimeZone.cDefault is replaced by the call to org.joda.time.DateTimeZone::getDefault()Lorg/joda/time/DateTimeZone;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>6ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>134</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>3</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.017482090031876642</suspValue><description>replaced access to cDefault with an access to UTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.017482090031876642</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>92</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.017482090031876642</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::getDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>16ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.017482090031876642</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.017482090031876642</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>getDefault</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>162</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>92</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.017482090031876642</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::getDefault to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>671</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>3</index><block>55</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.joda.time.DateTimeZone.cOffsetFormatter is replaced by the call to org.joda.time.DateTimeZone::offsetFormatter()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>676</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>56</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the access to field org.joda.time.DateTimeZone.cOffsetFormatter is replaced by the call to org.joda.time.DateTimeZone::offsetFormatter()Lorg/joda/time/format/DateTimeFormatter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>55</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>56</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone::offsetFormatter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>55</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>671</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>55</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>offsetFormatter</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>676</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>56</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::offsetFormatter to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>MethodNameMutator_0</mutator><index>9</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.joda.time.DateTimeZone.offsetFormatter()Lorg/joda/time/format/DateTimeFormatter; is replaced by an instantiation of type org.joda.time.format.DateTimeFormatter using (Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>MethodNameMutator_0</mutator><index>11</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to factory method org.joda.time.format.DateTimeFormatter.withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; is replaced by an instantiation of type org.joda.time.format.DateTimeFormatter using (Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>13</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::parseMillis(Ljava/lang/String;)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>13</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to parseMillis(Ljava/lang/String;)J is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>11</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to withChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter; is guarded returning field MAX_MILLIS</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>13</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>the call to parseMillis(Ljava/lang/String;)J is guarded returning field MAX_MILLIS</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>605</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/joda/time/DateTimeZone$1::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>15</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>9</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/joda/time/DateTimeZone::offsetFormatter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::withChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>13</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::parseMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>16</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced int return with 0 for org/joda/time/DateTimeZone::parseOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>16</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>parseOffset</mutatedMethod><methodDescription>(Ljava/lang/String;)I</methodDescription><lineNumber>619</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>11</index><block>47</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced call to org/joda/time/format/DateTimeFormatter::withChronology with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>MethodNameMutator_0</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>MethodNameMutator_0</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>MethodNameMutator_0</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>649</lineNumber><mutator>MethodNameMutator_0</mutator><index>82</index><block>51</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method java.lang.StringBuffer.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BIILjava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>MethodNameMutator_4</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>MethodNameMutator_4</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>MethodNameMutator_4</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>649</lineNumber><mutator>MethodNameMutator_4</mutator><index>82</index><block>51</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to factory method java.lang.StringBuffer.toString()Ljava/lang/String; is replaced by an instantiation of type java.lang.String using ([BI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>40</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>66</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>388ms</time></test></testsExecutionTime><patchExecutionTime>406ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>27ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>35ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>68ms</time></test></testsExecutionTime><patchExecutionTime>96ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>48ms</time></test></testsExecutionTime><patchExecutionTime>68ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>45ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>34ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>71ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>40</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>66</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>537ms</time></test></testsExecutionTime><patchExecutionTime>556ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>498ms</time></test></testsExecutionTime><patchExecutionTime>530ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>51ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>71ms</time></test></testsExecutionTime><patchExecutionTime>107ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>54ms</time></test></testsExecutionTime><patchExecutionTime>75ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>71ms</time></test></testsExecutionTime><patchExecutionTime>102ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>53ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>40</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>66</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>32ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>40</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>66</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>40</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>66</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>40</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>66</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to appendPaddedInteger(Ljava/lang/StringBuffer;II)V with a call to appendPaddedInteger(Ljava/lang/StringBuffer;JI)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>30ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to &#60;init&#62;()V with a call to &#60;init&#62;(Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>649</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>82</index><block>51</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to java.lang.StringBuffer::toString()Ljava/lang/String; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>649</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>82</index><block>51</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>the call to toString()Ljava/lang/String; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>10</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>632</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>5</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to java/lang/StringBuffer::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.EmptyObjectReturnValsMutator</mutator><index>83</index><block>51</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced return value with &#34;&#34; for org/joda/time/DateTimeZone::printOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>14</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>Substituted 43 with 44</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>21</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>Substituted 45 with 46</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 3600000 with 3600001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>39</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>45</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 3600000 with 3600001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>52</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 60000 with 60001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>58</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 58 with 59</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>65</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>71</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Substituted 60000 with 60001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>637</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>27</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>640</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>33</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>46</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>642</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>47</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>644</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>53</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced integer division with multiplication</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>72</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>647</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>73</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>78</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>82</index><block>51</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to java/lang/StringBuffer::toString</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>0ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>78</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>648</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>78</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>10</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>633</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>10</index><block>48</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>649</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>83</index><block>51</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone::printOffset to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>641</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>40</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>646</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>66</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>removed call to org/joda/time/format/FormatUtils::appendPaddedInteger</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>634</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>15</index><block>49</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.16012815380508713</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>636</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>22</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2773500981126146</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>printOffset</mutatedMethod><methodDescription>(I)Ljava/lang/String;</methodDescription><lineNumber>645</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>59</index><block>50</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.15617376188860607</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>MethodNameMutator_0</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type java.lang.SecurityManager using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>13ms</time></test></testsExecutionTime><patchExecutionTime>58ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>MethodNameMutator_1</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type org.codehaus.groovy.tools.shell.util.NoExitSecurityManager using (Ljava/lang/SecurityManager;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>MethodNameMutator_5</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>the call to factory method java.lang.System.getSecurityManager()Ljava/lang/SecurityManager; is replaced by an instantiation of type org.codehaus.groovy.tools.shell.util.NoExitSecurityManager using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>183</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>37</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>the access to field org.joda.time.DateTimeZone.cDefault is replaced by the call to org.joda.time.DateTimeZone::setDefault(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>15ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>90ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>175</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>3</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>removed call to java/lang/System::getSecurityManager</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>176</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>8</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone</mutatedClass><mutatedMethod>setDefault</mutatedMethod><methodDescription>(Lorg/joda/time/DateTimeZone;)V</methodDescription><lineNumber>179</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018321656997643758</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>38</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>38</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>38</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>39ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>38</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>47ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>38</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>38</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced call to getDefault()Ljava/util/Locale; with a call to getDefault(Ljava/util/Locale$Category;)Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>26</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iZone is replaced by the call to org.joda.time.format.DateTimeParserBucket::setZone(Lorg/joda/time/DateTimeZone;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>48</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iPivotYear is replaced by the call to org.joda.time.format.DateTimeParserBucket::setOffset(Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>53</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iDefaultYear is replaced by the call to org.joda.time.format.DateTimeParserBucket::setOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>48</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iPivotYear is replaced by the call to org.joda.time.format.DateTimeParserBucket::setPivotYear(Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>126</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>48</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced access to iPivotYear with an access to iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>127</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>53</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced access to iDefaultYear with an access to iSavedFieldsCount</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>25</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to org.joda.time.Chronology::getZone()Lorg/joda/time/DateTimeZone; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>31</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to org.joda.time.Chronology::withUTC()Lorg/joda/time/Chronology; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>25</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>31</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>25</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>31</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>25</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>31</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>25</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>31</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>25</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to getZone()Lorg/joda/time/DateTimeZone; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>31</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>the call to withUTC()Lorg/joda/time/Chronology; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced call to org/joda/time/DateTimeUtils::getChronology with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>Substituted 8 with 9</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>37</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>121</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>removed call to org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>25</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>removed call to org/joda/time/Chronology::getZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>31</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>removed call to org/joda/time/Chronology::withUTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>38</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>removed call to java/util/Locale::getDefault</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>37</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>37</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>73</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>Removed assignment to member variable iSavedFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>122</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>Removed assignment to member variable iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>26</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>Removed assignment to member variable iZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>32</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>Removed assignment to member variable iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>125</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>43</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>Removed assignment to member variable iLocale</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>126</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>48</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>Removed assignment to member variable iPivotYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>127</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>53</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>Removed assignment to member variable iDefaultYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V</methodDescription><lineNumber>124</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>31</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced call to org/joda/time/Chronology::withUTC with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='NON_VIABLE' numberOfTestsRun='0'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>378</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.CatchTypeWideningMutator_0</mutator><index>150</index><block>17</block><killingTests/><suspValue>0.0575435337648436</suspValue><description>catch type org/joda/time/IllegalFieldValueException is replaced with java/lang/IllegalArgumentException</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>5ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFields is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFieldsCount is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFieldsShared is guarded using value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>90</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iMillis is guarded using value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>178</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iOffset is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>184</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to iOffset is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFields is guarded using field iSavedFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFieldsCount is guarded using field iDefaultYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFieldsShared is guarded using field iSavedFieldsShared</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>90</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iMillis is guarded using field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>178</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iOffset is guarded using field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>184</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to iOffset is guarded using field iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iSavedFieldsCount is replaced by the call to org.joda.time.format.DateTimeParserBucket::getOffset()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>90</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iMillis is replaced by the call to org.joda.time.format.DateTimeParserBucket::computeMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>178</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iOffset is replaced by the call to org.joda.time.format.DateTimeParserBucket::getOffsetInteger()Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>184</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iOffset is replaced by the call to org.joda.time.format.DateTimeParserBucket::getOffsetInteger()Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>178</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iOffset is replaced by the call to org.joda.time.format.DateTimeParserBucket::getPivotYear()Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>184</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iOffset is replaced by the call to org.joda.time.format.DateTimeParserBucket::getPivotYear()Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>replaced access to iSavedFieldsCount with an access to iDefaultYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>178</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>replaced access to iOffset with an access to iPivotYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>184</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>replaced access to iOffset with an access to iPivotYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>replaced call to intValue with a call to hashCode</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the call to java.lang.Integer::intValue()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFields is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFieldsCount is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFieldsShared is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>90</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iMillis is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>178</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iOffset is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>184</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to iOffset is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>345</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFields is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>346</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFieldsCount is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iSavedFieldsShared is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>363</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>90</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iMillis is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>178</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>the access to iOffset is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>184</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to iOffset is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the call to intValue()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the call to intValue()I is guarded returning field iMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>99</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>124</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05892556509887897</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>111</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>145</index><block>15</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05892556509887897</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>94</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>119</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05892556509887897</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>187</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>Replaced long subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>15</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>99</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>116</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>124</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05892556509887897</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>179</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>185</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>removed call to java/lang/Integer::intValue</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>260</index><block>25</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05773502691896257</suspValue><description>replaced long return with 0 for org/joda/time/format/DateTimeParserBucket::computeMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>15</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>116</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>179</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>347</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>15</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>116</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>179</index><block>19</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>99</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>124</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05892556509887897</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>40</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>365</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>99</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>369</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>124</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05892556509887897</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>394</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>260</index><block>25</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05773502691896257</suspValue><description>replaced return of long value with value + 1 for org/joda/time/format/DateTimeParserBucket::computeMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>computeMillis</mutatedMethod><methodDescription>(ZLjava/lang/String;)J</methodDescription><lineNumber>351</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>36</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed call to org/joda/time/format/DateTimeParserBucket::sort</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>setOffset</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iOffset is replaced by the call to org.joda.time.format.DateTimeParserBucket::setOffset(Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>8ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>setOffset</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>the access to field org.joda.time.format.DateTimeParserBucket.iOffset is replaced by the call to org.joda.time.format.DateTimeParserBucket::setPivotYear(Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>setOffset</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>196</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>10</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>replaced access to iOffset with an access to iPivotYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>setOffset</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>195</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>5</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>Removed assignment to member variable iSavedState</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>setOffset</mutatedMethod><methodDescription>(Ljava/lang/Integer;)V</methodDescription><lineNumber>196</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0944911182523068</suspValue><description>Removed assignment to member variable iOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>22ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>5</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>20</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>68</index><block>32</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>4</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>5</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>20</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>416</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>5</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeParserBucket.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeParserBucket</mutatedClass><mutatedMethod>sort</mutatedMethod><methodDescription>([Lorg/joda/time/format/DateTimeParserBucket$SavedField;I)V</methodDescription><lineNumber>419</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>20</index><block>28</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0575435337648436</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>8</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to min with a call to max</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>24</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to length()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>24</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to charAt(I)C is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to length()I is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>24</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to charAt(I)C is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to length()I is guarded returning field iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2456</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>24</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to charAt(I)C is guarded returning field iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>8</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to java/lang/Math::min with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>17</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>30</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>33</index><block>63</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>39</index><block>65</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>42</index><block>65</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2454</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>29</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>63</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 57 with 58</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>17</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>30</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>33</index><block>63</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2453</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>8</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/lang/Math::min</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2456</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>24</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>47</index><block>66</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced int return with 0 for org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset::digitCount</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>17</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>30</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>33</index><block>63</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>17</index><block>61</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>30</index><block>62</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2457</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>33</index><block>63</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2462</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>47</index><block>66</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2460</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>39</index><block>65</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>digitCount</mutatedMethod><methodDescription>(Ljava/lang/String;II)I</methodDescription><lineNumber>2455</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>42</index><block>65</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>MethodNameMutator_0</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>MethodNameMutator_4</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to factory method java.lang.Integer.valueOf(I)Ljava/lang/Integer; is replaced by an instantiation of type java.lang.Integer using (I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to setOffset(Ljava/lang/Integer;)V with a call to setOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>59ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>100ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to setOffset(Ljava/lang/Integer;)V with a call to setOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>46ms</time></test></testsExecutionTime><patchExecutionTime>61ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to setOffset(Ljava/lang/Integer;)V with a call to setOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>20ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to setOffset(Ljava/lang/Integer;)V with a call to setOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to setOffset(Ljava/lang/Integer;)V with a call to setOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>25ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;I)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to setOffset(Ljava/lang/Integer;)V with a call to setOffset(I)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to valueOf(I)Ljava/lang/Integer; with a call to valueOf(Ljava/lang/String;)Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the access to iZeroOffsetParseText is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the access to iZeroOffsetParseText is guarded using field iZeroOffsetPrintText</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldNameMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>replaced access to iZeroOffsetParseText with an access to iZeroOffsetPrintText</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>64ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to setOffset with a call to setPivotYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>92</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::digitCount(Ljava/lang/String;II)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>181</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>217</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset::digitCount(Ljava/lang/String;II)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the access to iZeroOffsetParseText is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2281</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the access to iZeroOffsetParseText is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the call to length()I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>92</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to charAt(I)C is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to digitCount(Ljava/lang/String;II)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>181</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to charAt(I)C is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>217</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to digitCount(Ljava/lang/String;II)I is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to setOffset(Ljava/lang/Integer;)V is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the call to length()I is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>92</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to charAt(I)C is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to digitCount(Ljava/lang/String;II)I is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>181</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to charAt(I)C is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>217</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to digitCount(Ljava/lang/String;II)I is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to setOffset(Ljava/lang/Integer;)V is guarded returning field iMinFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2278</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the call to length()I is guarded returning field iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2306</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>92</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>the call to charAt(I)C is guarded returning field iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to digitCount(Ljava/lang/String;II)I is guarded returning field iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2354</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>181</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to charAt(I)C is guarded returning field iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2367</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>217</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to digitCount(Ljava/lang/String;II)I is guarded returning field iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to setOffset(Ljava/lang/Integer;)V is guarded returning field iMaxFields</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.VoidMethodCallGuardMutator</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to org.joda.time.format.DateTimeParserBucket::setOffset(Ljava/lang/Integer;)V is guarded</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset::digitCount with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>145</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to org/joda/time/format/FormatUtils::parseTwoDigits with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>217</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset::digitCount with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>243</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced call to org/joda/time/format/FormatUtils::parseTwoDigits with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>81</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09053574604251853</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>134</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>151</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>173</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>232</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>249</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>273</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>122</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>125</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>166</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Changed increment from -2 to 2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>169</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Changed increment from 2 to -2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>194</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11624763874381928</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>197</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11624763874381928</suspValue><description>Changed increment from 1 to -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>266</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Changed increment from -2 to 2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>269</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Changed increment from 2 to -2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>80</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09053574604251853</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>97</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>Substituted 45 with 46</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2308</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2182178902359924</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>107</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12216944435630522</suspValue><description>Substituted 43 with 44</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2310</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>111</index><block>14</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1270001270001905</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>131</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>133</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>150</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 23 with 24</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>161</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 3600000 with 3600001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>186</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 58 with 59</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>20ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2356</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>190</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11624763874381928</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>216</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>231</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>248</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 59 with 60</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>260</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 60000 with 60001</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InvertNegsMutator</mutator><index>469</index><block>59</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed negation</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>6</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2341</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>162</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>261</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2379</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>262</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>81</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09053574604251853</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>98</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>108</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12216944435630522</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>134</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>151</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>173</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>187</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>222</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>224</index><block>27</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>232</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>249</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>273</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>467</index><block>58</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2278</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2306</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>92</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>132</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset::digitCount</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2337</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>145</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/joda/time/format/FormatUtils::parseTwoDigits</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2354</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>181</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2367</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>217</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset::digitCount</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2375</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>243</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/joda/time/format/FormatUtils::parseTwoDigits</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>474</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/lang/Integer::valueOf</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>479</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced int return with 0 for org/joda/time/format/DateTimeFormatterBuilder$TimeZoneOffset::parseInto</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>12</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>98</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>108</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12216944435630522</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>187</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>222</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>224</index><block>27</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>467</index><block>58</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2281</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>12</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2307</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>98</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11180339887498948</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2309</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>108</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.12216944435630522</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2355</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>187</index><block>22</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>222</index><block>26</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2368</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>224</index><block>27</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>467</index><block>58</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>81</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09053574604251853</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>134</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>151</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>173</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>232</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>249</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>273</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2301</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>81</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.09053574604251853</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2330</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>134</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2338</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>151</index><block>18</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2349</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>173</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2370</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>232</index><block>29</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2376</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>249</index><block>31</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2385</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>273</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2445</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>479</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2444</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.VoidMethodCallMutator</mutator><index>475</index><block>60</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to org/joda/time/format/DateTimeParserBucket::setOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2315</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>122</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2316</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>125</index><block>16</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2342</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>166</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed increment -2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2343</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>169</index><block>20</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed increment 2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2357</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>194</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11624763874381928</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2358</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>197</index><block>23</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11624763874381928</suspValue><description>Removed increment 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2380</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>266</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed increment -2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatterBuilder.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatterBuilder$TimeZoneOffset</mutatedClass><mutatedMethod>parseInto</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I</methodDescription><lineNumber>2381</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>269</index><block>33</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Removed increment 2</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>MethodNameMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>MethodNameMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>MethodNameMutator_0</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/String;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>MethodNameMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>53ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>MethodNameMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>33ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>MethodNameMutator_4</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>MethodNameMutator_4</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to factory method java.lang.StringBuffer.append(C)Ljava/lang/StringBuffer; is replaced by an instantiation of type java.lang.StringBuffer using (Ljava/lang/CharSequence;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_12</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_13</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_14</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_15</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>29ms</time></test></testsExecutionTime><patchExecutionTime>45ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_16</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_17</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>26ms</time></test></testsExecutionTime><patchExecutionTime>41ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_18</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_19</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_20</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_21</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(J)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_22</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_23</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append([CII)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>29ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>24ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>31ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>36ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>38ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>50ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>62ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>34ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>44ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>70ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(Ljava/lang/CharSequence;)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>42ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to append(C)Ljava/lang/StringBuffer; with a call to append(F)Ljava/lang/StringBuffer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to java.lang.StringBuffer::append(C)Ljava/lang/StringBuffer; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_1</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_2</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_3</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_4</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>the call to append(C)Ljava/lang/StringBuffer; is guarded returning enclosing method</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>80</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04315318520021031</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>85</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>64</index><block>8</block><killingTests/><suspValue>0.045083481733371615</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.IncrementsMutator</mutator><index>94</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Changed increment from -1 to 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>49</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>Substituted 10 with 11</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>54</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>59</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>70</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>79</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04315318520021031</suspValue><description>Substituted 100 with 101</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>84</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Substituted 2 with 3</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>99</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>101</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Substituted 13421772 with 13421773</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>103</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Substituted 27 with 28</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>110</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>120</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>33ms</time></test></testsExecutionTime><patchExecutionTime>40ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>124</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>127</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>21ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>71</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>100</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>102</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced integer multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>74</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>104</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced Shift Right with Shift Left</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>111</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>18ms</time></test></testsExecutionTime><patchExecutionTime>87ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>121</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>122</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>125</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>126</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>128</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>74ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>80</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04315318520021031</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>85</index><block>11</block><killingTests/><suspValue>0.04902903378454601</suspValue><description>negated conditional</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>removed call to java/lang/StringBuffer::append</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>82ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>55</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>80</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04315318520021031</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>85</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>50</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>62</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.041344911529736156</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>55</index><block>7</block><killingTests/><suspValue>0.045083481733371615</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>67</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>80</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04315318520021031</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>85</index><block>11</block><killingTests/><suspValue>0.04902903378454601</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>60</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04512936824065242</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>73</index><block>9</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.045083481733371615</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>75</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>113</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>77</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.NakedReceiverMutator</mutator><index>130</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>replaced call to java/lang/StringBuffer::append with receiver</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='TIMED_OUT' numberOfTestsRun='0'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>63</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>64</index><block>8</block><killingTests/><suspValue>0.045083481733371615</suspValue><description>Removed increment -1</description><testsExecutionTime></testsExecutionTime><patchExecutionTime>0ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>appendPaddedInteger</mutatedMethod><methodDescription>(Ljava/lang/StringBuffer;II)V</methodDescription><lineNumber>68</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.RemoveIncrementsMutator</mutator><index>94</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.04902903378454601</suspValue><description>Removed increment -1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>5</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>22</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to java.lang.String::charAt(I)C is guarded using default value &#39;\0&#39;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>352</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>5</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to charAt(I)C is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>22</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>the call to charAt(I)C is guarded returning default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>6</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 3 with 4</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>15</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>20</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>24</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Substituted 48 with 49</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>13</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>16</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced Shift Left with Shift Right</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>73ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>17</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>21</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>23</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>25</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>Replaced integer subtraction with addition</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>352</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>5</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>22</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>removed call to java/lang/String::charAt</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>26</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced int return with 0 for org/joda/time/format/FormatUtils::parseTwoDigits</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FormatUtils.java</sourceFile><mutatedClass>org.joda.time.format.FormatUtils</mutatedClass><mutatedMethod>parseTwoDigits</mutatedMethod><methodDescription>(Ljava/lang/String;I)I</methodDescription><lineNumber>353</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>26</index><block>21</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.11547005383792514</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>12</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>16</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>64</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>5</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>Replaced integer addition with subtraction</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>11</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>15</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>Replaced XOR with AND</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>12</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>85ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>16</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>38</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.037267799624996496</suspValue><description>replaced int return with 0 for org/joda/time/field/FieldUtils::safeAdd</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>12</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>16</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>12</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>66</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>16</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.03721614637823934</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeAdd</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>70</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>38</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.037267799624996496</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>23ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>18</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>12</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>Substituted -2147483648 with -2147483647</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>16</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>Substituted 2147483647 with 2147483648</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>119</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.MathMutator</mutator><index>7</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>Replaced long multiplication with division</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>18</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>41</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced int return with 0 for org/joda/time/field/FieldUtils::safeMultiply</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>18</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>14</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>120</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>18</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FieldUtils.java</sourceFile><mutatedClass>org.joda.time.field.FieldUtils</mutatedClass><mutatedMethod>safeMultiply</mutatedMethod><methodDescription>(II)I</methodDescription><lineNumber>123</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>41</index><block>7</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.1336306209562122</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V</methodDescription><lineNumber>129</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>9</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05590169943749474</suspValue><description>Removed assignment to member variable iPrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V</methodDescription><lineNumber>130</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>14</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05590169943749474</suspValue><description>Removed assignment to member variable iParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V</methodDescription><lineNumber>131</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>19</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05590169943749474</suspValue><description>Removed assignment to member variable iLocale</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V</methodDescription><lineNumber>132</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>24</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05590169943749474</suspValue><description>Removed assignment to member variable iOffsetParsed</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V</methodDescription><lineNumber>133</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>29</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05590169943749474</suspValue><description>Removed assignment to member variable iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V</methodDescription><lineNumber>134</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>34</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05590169943749474</suspValue><description>Removed assignment to member variable iZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V</methodDescription><lineNumber>135</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>39</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05590169943749474</suspValue><description>Removed assignment to member variable iPivotYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>44</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05590169943749474</suspValue><description>Removed assignment to member variable iDefaultYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>7ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>MethodNameMutator_0</mutator><index>11</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the call to factory method org.joda.time.format.DateTimeFormatter.selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis(Z)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_1</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_10</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_11</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis(Z)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis(Z)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_4</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_5</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis(Z)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis(Z)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis(Z)J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(JLorg/joda/time/Chronology;Ljava/util/Locale;Ljava/lang/Integer;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_9</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced call to computeMillis(ZLjava/lang/String;)J with a call to computeMillis()J</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>10</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iChrono is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iLocale is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iPivotYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>24</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iDefaultYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>10</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iChrono is guarded using field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iLocale is guarded using field iLocale</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iPivotYear is guarded using field iPivotYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>24</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iDefaultYear is guarded using field iDefaultYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>10</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronology()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iLocale is replaced by the call to org.joda.time.format.DateTimeFormatter::getLocale()Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iPivotYear is replaced by the call to org.joda.time.format.DateTimeFormatter::getPivotYear()Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>24</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iDefaultYear is replaced by the call to org.joda.time.format.DateTimeFormatter::getDefaultYear()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>70ms</time></test></testsExecutionTime><patchExecutionTime>81ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>10</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronolgy()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to requireParser with a call to getParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>43</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0778498944161523</suspValue><description>replaced call to length with a call to hashCode</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::requireParser()Lorg/joda/time/format/DateTimeParser; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>11</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the call to org.joda.time.format.DateTimeFormatter::selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>33</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the call to org.joda.time.format.DateTimeParser::parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>43</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0778498944161523</suspValue><description>the call to java.lang.String::length()I is guarded using default value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>the call to org.joda.time.format.DateTimeParserBucket::computeMillis(ZLjava/lang/String;)J is guarded using default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>10</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iChrono is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iLocale is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iPivotYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>24</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the access to iDefaultYear is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>740</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the call to requireParser()Lorg/joda/time/format/DateTimeParser; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>22ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>11</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the call to selectChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>744</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>33</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>the call to parseInto(Lorg/joda/time/format/DateTimeParserBucket;Ljava/lang/String;I)I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>746</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>43</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0778498944161523</suspValue><description>the call to length()I is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>the call to computeMillis(ZLjava/lang/String;)J is guarded returning default value 0L</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>11</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to org/joda/time/format/DateTimeFormatter::selectChronology with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>33</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>replaced call to org/joda/time/format/DateTimeParser::parseInto with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>38</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConditionalsBoundaryMutator</mutator><index>44</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0778498944161523</suspValue><description>changed conditional boundary</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>25</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>removed call to org/joda/time/format/DateTimeParserBucket::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>743</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>17</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>32</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>Substituted 0 with 1</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>48</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>38</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>44</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0778498944161523</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>740</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::requireParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>742</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>11</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::selectChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>744</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>33</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>removed call to org/joda/time/format/DateTimeParser::parseInto</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>43</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0778498944161523</suspValue><description>removed call to java/lang/String::length</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>50</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>removed call to org/joda/time/format/DateTimeParserBucket::computeMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.PrimitiveReturnsMutator</mutator><index>51</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced long return with 0 for org/joda/time/format/DateTimeFormatter::parseMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>38</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_ELSE</mutator><index>44</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0778498944161523</suspValue><description>removed conditional - replaced comparison check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>745</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>38</index><block>4</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07018624063435965</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>746</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_ORDER_IF</mutator><index>44</index><block>5</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0778498944161523</suspValue><description>removed conditional - replaced comparison check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>parseMillis</mutatedMethod><methodDescription>(Ljava/lang/String;)J</methodDescription><lineNumber>747</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>51</index><block>6</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.08606629658238704</suspValue><description>replaced return of long value with value + 1 for org/joda/time/format/DateTimeFormatter::parseMillis</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>the access to iParser is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>the access to iParser is guarded using field iParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iParser is replaced by the call to org.joda.time.format.DateTimeFormatter::getParser()Lorg/joda/time/format/DateTimeParser;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iParser is replaced by the call to org.joda.time.format.DateTimeFormatter::requireParser()Lorg/joda/time/format/DateTimeParser;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>7ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>the access to iParser is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>925</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>4</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>the access to iParser is guarded returning field iParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>20</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>replaced return value with null for org/joda/time/format/DateTimeFormatter::requireParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>926</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>9</index><block>8</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05383819020581655</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>requireParser</mutatedMethod><methodDescription>()Lorg/joda/time/format/DateTimeParser;</methodDescription><lineNumber>929</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>20</index><block>10</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.05399492471560388</suspValue><description>mutated return of Object value for org/joda/time/format/DateTimeFormatter::requireParser to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>940</lineNumber><mutator>MethodNameMutator_0</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the call to factory method org.joda.time.DateTimeUtils.getChronology(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology; is replaced by an instantiation of type org.joda.time.Chronology using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>9</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to iChrono is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>14</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07412493166611012</suspValue><description>the access to iChrono is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>944</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>19</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to iZone is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>9</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to iChrono is guarded using field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>14</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07412493166611012</suspValue><description>the access to iChrono is guarded using field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>944</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>19</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to iZone is guarded using field iZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>9</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronology()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>14</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07412493166611012</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronology()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>944</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>19</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iZone is replaced by the call to org.joda.time.format.DateTimeFormatter::getZone()Lorg/joda/time/DateTimeZone;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>9</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronolgy()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>14</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07412493166611012</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronolgy()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>9</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to iChrono is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>14</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07412493166611012</suspValue><description>the access to iChrono is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>944</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>19</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to iZone is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>9</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to iChrono is guarded returning field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>942</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>14</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07412493166611012</suspValue><description>the access to iChrono is guarded returning field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>944</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_2</mutator><index>19</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>the access to iZone is guarded returning field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>replaced call to org/joda/time/DateTimeUtils::getChronology with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>10</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>20</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>940</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>4</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>removed call to org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>31</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>replaced return value with null for org/joda/time/format/DateTimeFormatter::selectChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>10</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>20</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>8ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>941</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>10</index><block>11</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>944</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>20</index><block>12</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>selectChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>947</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>13</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.0373196685431038</suspValue><description>mutated return of Object value for org/joda/time/format/DateTimeFormatter::selectChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_0</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>replaced call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>28ms</time></test></testsExecutionTime><patchExecutionTime>37ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_2</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>replaced call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_3</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>replaced call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_6</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>replaced call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_7</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>replaced call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ArgumentsListMutator_8</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>replaced call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;Ljava/util/Locale;ZLorg/joda/time/Chronology;Lorg/joda/time/DateTimeZone;Ljava/lang/Integer;I)V with a call to &#60;init&#62;(Lorg/joda/time/format/DateTimePrinter;Lorg/joda/time/format/DateTimeParser;)V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06868028197434452</suspValue><description>the access to iChrono is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iPrinter is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>18</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iParser is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>20</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iLocale is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>22</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iOffsetParsed is guarded using value false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>25</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iZone is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>27</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iPivotYear is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iDefaultYear is guarded using value 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06868028197434452</suspValue><description>the access to iChrono is guarded using field iChrono</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iPrinter is guarded using field iPrinter</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>18</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iParser is guarded using field iParser</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>20</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iLocale is guarded using field iLocale</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>22</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iOffsetParsed is guarded using field iOffsetParsed</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>25</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iZone is guarded using field iZone</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>21ms</time></test></testsExecutionTime><patchExecutionTime>83ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>27</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iPivotYear is guarded using field iPivotYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>29</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iDefaultYear is guarded using field iDefaultYear</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06868028197434452</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronology()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iPrinter is replaced by the call to org.joda.time.format.DateTimeFormatter::getPrinter()Lorg/joda/time/format/DateTimePrinter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>18</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iParser is replaced by the call to org.joda.time.format.DateTimeFormatter::getParser()Lorg/joda/time/format/DateTimeParser;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>20</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iLocale is replaced by the call to org.joda.time.format.DateTimeFormatter::getLocale()Ljava/util/Locale;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>22</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iOffsetParsed is replaced by the call to org.joda.time.format.DateTimeFormatter::isPrinter()Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>25</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iZone is replaced by the call to org.joda.time.format.DateTimeFormatter::getZone()Lorg/joda/time/DateTimeZone;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>27</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iPivotYear is replaced by the call to org.joda.time.format.DateTimeFormatter::getPivotYear()Ljava/lang/Integer;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iDefaultYear is replaced by the call to org.joda.time.format.DateTimeFormatter::getDefaultYear()I</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06868028197434452</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iChrono is replaced by the call to org.joda.time.format.DateTimeFormatter::getChronolgy()Lorg/joda/time/Chronology;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iPrinter is replaced by the call to org.joda.time.format.DateTimeFormatter::requirePrinter()Lorg/joda/time/format/DateTimePrinter;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>18</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iParser is replaced by the call to org.joda.time.format.DateTimeFormatter::requireParser()Lorg/joda/time/format/DateTimeParser;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_1</mutator><index>22</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iOffsetParsed is replaced by the call to org.joda.time.format.DateTimeFormatter::isParser()Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.FieldAccessToMethodCallMutator_2</mutator><index>22</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to field org.joda.time.format.DateTimeFormatter.iOffsetParsed is replaced by the call to org.joda.time.format.DateTimeFormatter::isOffsetParsed()Z</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>257</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06868028197434452</suspValue><description>the access to iChrono is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>14ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>16</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iPrinter is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>18</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iParser is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>20</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iLocale is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>22</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iOffsetParsed is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>25</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iZone is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>27</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iPivotYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>29</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>the access to iDefaultYear is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ConstructorCallMutator</mutator><index>30</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>removed call to org/joda/time/format/DateTimeFormatter::&#60;init&#62;</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06868028197434452</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>31</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>replaced return value with null for org/joda/time/format/DateTimeFormatter::withChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>18ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06868028197434452</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>257</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>6</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.06868028197434452</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeFormatter.java</sourceFile><mutatedClass>org.joda.time.format.DateTimeFormatter</mutatedClass><mutatedMethod>withChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/format/DateTimeFormatter;</methodDescription><lineNumber>260</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>31</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07392212709545729</suspValue><description>mutated return of Object value for org/joda/time/format/DateTimeFormatter::withChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>1ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.FixedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;II)V</methodDescription><lineNumber>39</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>10</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.25</suspValue><description>Removed assignment to member variable iNameKey</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.FixedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;II)V</methodDescription><lineNumber>40</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>15</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.25</suspValue><description>Removed assignment to member variable iWallOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.FixedDateTimeZone</mutatedClass><mutatedMethod>&#60;init&#62;</mutatedMethod><methodDescription>(Ljava/lang/String;Ljava/lang/String;II)V</methodDescription><lineNumber>41</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.experimental.MemberVariableMutator</mutator><index>20</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.25</suspValue><description>Removed assignment to member variable iStandardOffset</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>24ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.FixedDateTimeZone</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.BooleanFalseReturnValsMutator</mutator><index>9</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced boolean return with false for org/joda/time/tz/FixedDateTimeZone::equals</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.FixedDateTimeZone</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.InlineConstantMutator</mutator><index>8</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.19245008972987526</suspValue><description>Substituted 1 with 0</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.FixedDateTimeZone</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18569533817705186</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.FixedDateTimeZone</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>88</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>5</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.18569533817705186</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>FixedDateTimeZone.java</sourceFile><mutatedClass>org.joda.time.tz.FixedDateTimeZone</mutatedClass><mutatedMethod>equals</mutatedMethod><methodDescription>(Ljava/lang/Object;)Z</methodDescription><lineNumber>89</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>9</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.19245008972987526</suspValue><description>replaced return of integer sized value with (x == 0 ? 1 : 0)</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>4ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>MethodNameMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the call to factory method java.util.Map.get(Ljava/lang/Object;)Ljava/lang/Object; is replaced by an instantiation of type java.lang.Object using ()V</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>28ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the access to iZoneInfoMap is guarded using value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.DereferenceGuardMutator_2</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the access to iZoneInfoMap is guarded using field iZoneInfoMap</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.MethodNameMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>replaced call to get with a call to remove</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>17ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.NonVoidMethodCallGuardMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the call to java.util.Map::get(Ljava/lang/Object;)Ljava/lang/Object; is guarded using default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningDereferenceGuardMutator_0</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the access to iZoneInfoMap is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.mudebug.prapr.core.mutationtest.engine.mutators.ReturningMethodCallGuardMutator_0</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>the call to get(Ljava/lang/Object;)Ljava/lang/Object; is guarded returning default value null</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>11ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ArgumentPropagationMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>replaced call to java/util/Map::get with argument</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>12ms</time></test></testsExecutionTime><patchExecutionTime>19ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>140</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NonVoidMethodCallMutator</mutator><index>14</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>removed call to java/util/Map::get</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>12ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>2ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>136</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>10ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>141</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>19</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.07930515857181442</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>9ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>ZoneInfoProvider.java</sourceFile><mutatedClass>org.joda.time.tz.ZoneInfoProvider</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>(Ljava/lang/String;)Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>142</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>23</index><block>3</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.2886751345948129</suspValue><description>mutated return of Object value for org/joda/time/tz/ZoneInfoProvider::getZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>19ms</time></test></testsExecutionTime><patchExecutionTime>98ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NegateConditionalsMutator</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018464772811525407</suspValue><description>negated conditional</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01981850088223545</suspValue><description>replaced return value with null for org/joda/time/DateTimeUtils::getChronology</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_ELSE</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018464772811525407</suspValue><description>removed conditional - replaced equality check with false</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>16ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>282</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.RemoveConditionalMutator_EQUAL_IF</mutator><index>4</index><block>0</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.018464772811525407</suspValue><description>removed conditional - replaced equality check with true</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>3ms</time></test></testsExecutionTime><patchExecutionTime>15ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeUtils.java</sourceFile><mutatedClass>org.joda.time.DateTimeUtils</mutatedClass><mutatedMethod>getChronology</mutatedMethod><methodDescription>(Lorg/joda/time/Chronology;)Lorg/joda/time/Chronology;</methodDescription><lineNumber>285</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>12</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.01981850088223545</suspValue><description>mutated return of Object value for org/joda/time/DateTimeUtils::getChronology to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>17ms</time></test></testsExecutionTime><patchExecutionTime>78ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone$1</mutatedClass><mutatedMethod>getZone</mutatedMethod><methodDescription>()Lorg/joda/time/DateTimeZone;</methodDescription><lineNumber>607</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>1</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone$1::getZone to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>5ms</time></test></testsExecutionTime><patchExecutionTime>13ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone$1</mutatedClass><mutatedMethod>withUTC</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.NullReturnValsMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>replaced return value with null for org/joda/time/DateTimeZone$1::withUTC</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>10ms</time></test></testsExecutionTime><patchExecutionTime>26ms</patchExecutionTime></mutation>
<mutation detected='true' status='KILLED' numberOfTestsRun='1'><sourceFile>DateTimeZone.java</sourceFile><mutatedClass>org.joda.time.DateTimeZone$1</mutatedClass><mutatedMethod>withUTC</mutatedMethod><methodDescription>()Lorg/joda/time/Chronology;</methodDescription><lineNumber>610</lineNumber><mutator>org.pitest.mutationtest.engine.gregor.mutators.ReturnValsMutator</mutator><index>4</index><block>2</block><killingTests>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</killingTests><suspValue>0.30151134457776363</suspValue><description>mutated return of Object value for org/joda/time/DateTimeZone$1::withUTC to ( if (x != null) null else throw new RuntimeException )</description><testsExecutionTime><test><name>org.joda.time.TestDateTimeZone.testForOffsetHoursMinutes_int_int(org.joda.time.TestDateTimeZone)</name><time>43ms</time></test></testsExecutionTime><patchExecutionTime>104ms</patchExecutionTime></mutation>
</mutations>
